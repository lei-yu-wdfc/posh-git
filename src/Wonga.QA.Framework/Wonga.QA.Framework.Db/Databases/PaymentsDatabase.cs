#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Payments
{
	
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Payments")]
	public partial class PaymentsDatabase : DbDatabase<PaymentsDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountPreferenceEntity(AccountPreferenceEntity instance);
    partial void UpdateAccountPreferenceEntity(AccountPreferenceEntity instance);
    partial void DeleteAccountPreferenceEntity(AccountPreferenceEntity instance);
    partial void InsertAccountsApplicationEntity(AccountsApplicationEntity instance);
    partial void UpdateAccountsApplicationEntity(AccountsApplicationEntity instance);
    partial void DeleteAccountsApplicationEntity(AccountsApplicationEntity instance);
    partial void InsertAffiliateEntity(AffiliateEntity instance);
    partial void UpdateAffiliateEntity(AffiliateEntity instance);
    partial void DeleteAffiliateEntity(AffiliateEntity instance);
    partial void InsertApplicationEntity(ApplicationEntity instance);
    partial void UpdateApplicationEntity(ApplicationEntity instance);
    partial void DeleteApplicationEntity(ApplicationEntity instance);
    partial void InsertArrearEntity(ArrearEntity instance);
    partial void UpdateArrearEntity(ArrearEntity instance);
    partial void DeleteArrearEntity(ArrearEntity instance);
    partial void InsertBankAccountsBaseEntity(BankAccountsBaseEntity instance);
    partial void UpdateBankAccountsBaseEntity(BankAccountsBaseEntity instance);
    partial void DeleteBankAccountsBaseEntity(BankAccountsBaseEntity instance);
    partial void InsertBusinessBankAccountEntity(BusinessBankAccountEntity instance);
    partial void UpdateBusinessBankAccountEntity(BusinessBankAccountEntity instance);
    partial void DeleteBusinessBankAccountEntity(BusinessBankAccountEntity instance);
    partial void InsertBusinessFixedInstallmentLoanApplicationEntity(BusinessFixedInstallmentLoanApplicationEntity instance);
    partial void UpdateBusinessFixedInstallmentLoanApplicationEntity(BusinessFixedInstallmentLoanApplicationEntity instance);
    partial void DeleteBusinessFixedInstallmentLoanApplicationEntity(BusinessFixedInstallmentLoanApplicationEntity instance);
    partial void InsertBusinessPaymentCardEntity(BusinessPaymentCardEntity instance);
    partial void UpdateBusinessPaymentCardEntity(BusinessPaymentCardEntity instance);
    partial void DeleteBusinessPaymentCardEntity(BusinessPaymentCardEntity instance);
    partial void InsertCalendarDateEntity(CalendarDateEntity instance);
    partial void UpdateCalendarDateEntity(CalendarDateEntity instance);
    partial void DeleteCalendarDateEntity(CalendarDateEntity instance);
    partial void InsertExternalPaymentCardEntity(ExternalPaymentCardEntity instance);
    partial void UpdateExternalPaymentCardEntity(ExternalPaymentCardEntity instance);
    partial void DeleteExternalPaymentCardEntity(ExternalPaymentCardEntity instance);
    partial void InsertFixedTermLoanApplicationEntity(FixedTermLoanApplicationEntity instance);
    partial void UpdateFixedTermLoanApplicationEntity(FixedTermLoanApplicationEntity instance);
    partial void DeleteFixedTermLoanApplicationEntity(FixedTermLoanApplicationEntity instance);
    partial void InsertInstitutionBranchCodeEntity(InstitutionBranchCodeEntity instance);
    partial void UpdateInstitutionBranchCodeEntity(InstitutionBranchCodeEntity instance);
    partial void DeleteInstitutionBranchCodeEntity(InstitutionBranchCodeEntity instance);
    partial void InsertLoanExtensionEntity(LoanExtensionEntity instance);
    partial void UpdateLoanExtensionEntity(LoanExtensionEntity instance);
    partial void DeleteLoanExtensionEntity(LoanExtensionEntity instance);
    partial void InsertLoanLimitationEntity(LoanLimitationEntity instance);
    partial void UpdateLoanLimitationEntity(LoanLimitationEntity instance);
    partial void DeleteLoanLimitationEntity(LoanLimitationEntity instance);
    partial void InsertLoanSignupEntity(LoanSignupEntity instance);
    partial void UpdateLoanSignupEntity(LoanSignupEntity instance);
    partial void DeleteLoanSignupEntity(LoanSignupEntity instance);
    partial void InsertLookupDictionaryEntity(LookupDictionaryEntity instance);
    partial void UpdateLookupDictionaryEntity(LookupDictionaryEntity instance);
    partial void DeleteLookupDictionaryEntity(LookupDictionaryEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertPaymentCardHistoryDataEntity(PaymentCardHistoryDataEntity instance);
    partial void UpdatePaymentCardHistoryDataEntity(PaymentCardHistoryDataEntity instance);
    partial void DeletePaymentCardHistoryDataEntity(PaymentCardHistoryDataEntity instance);
    partial void InsertPaymentCardHistoryItemEntity(PaymentCardHistoryItemEntity instance);
    partial void UpdatePaymentCardHistoryItemEntity(PaymentCardHistoryItemEntity instance);
    partial void DeletePaymentCardHistoryItemEntity(PaymentCardHistoryItemEntity instance);
    partial void InsertPaymentCardEntity(PaymentCardEntity instance);
    partial void UpdatePaymentCardEntity(PaymentCardEntity instance);
    partial void DeletePaymentCardEntity(PaymentCardEntity instance);
    partial void InsertPaymentCardsBaseEntity(PaymentCardsBaseEntity instance);
    partial void UpdatePaymentCardsBaseEntity(PaymentCardsBaseEntity instance);
    partial void DeletePaymentCardsBaseEntity(PaymentCardsBaseEntity instance);
    partial void InsertPaymentPlanEntity(PaymentPlanEntity instance);
    partial void UpdatePaymentPlanEntity(PaymentPlanEntity instance);
    partial void DeletePaymentPlanEntity(PaymentPlanEntity instance);
    partial void InsertPersonalBankAccountEntity(PersonalBankAccountEntity instance);
    partial void UpdatePersonalBankAccountEntity(PersonalBankAccountEntity instance);
    partial void DeletePersonalBankAccountEntity(PersonalBankAccountEntity instance);
    partial void InsertPersonalPaymentCardEntity(PersonalPaymentCardEntity instance);
    partial void UpdatePersonalPaymentCardEntity(PersonalPaymentCardEntity instance);
    partial void DeletePersonalPaymentCardEntity(PersonalPaymentCardEntity instance);
    partial void InsertProductInterestRateEntity(ProductInterestRateEntity instance);
    partial void UpdateProductInterestRateEntity(ProductInterestRateEntity instance);
    partial void DeleteProductInterestRateEntity(ProductInterestRateEntity instance);
    partial void InsertProductEntity(ProductEntity instance);
    partial void UpdateProductEntity(ProductEntity instance);
    partial void DeleteProductEntity(ProductEntity instance);
    partial void InsertPromoCampaignEntity(PromoCampaignEntity instance);
    partial void UpdatePromoCampaignEntity(PromoCampaignEntity instance);
    partial void DeletePromoCampaignEntity(PromoCampaignEntity instance);
    partial void InsertPromoCodeEntity(PromoCodeEntity instance);
    partial void UpdatePromoCodeEntity(PromoCodeEntity instance);
    partial void DeletePromoCodeEntity(PromoCodeEntity instance);
    partial void InsertPromoCodesUsageEntity(PromoCodesUsageEntity instance);
    partial void UpdatePromoCodesUsageEntity(PromoCodesUsageEntity instance);
    partial void DeletePromoCodesUsageEntity(PromoCodesUsageEntity instance);
    partial void InsertRepaymentArrangementDetailEntity(RepaymentArrangementDetailEntity instance);
    partial void UpdateRepaymentArrangementDetailEntity(RepaymentArrangementDetailEntity instance);
    partial void DeleteRepaymentArrangementDetailEntity(RepaymentArrangementDetailEntity instance);
    partial void InsertRepaymentArrangementEntity(RepaymentArrangementEntity instance);
    partial void UpdateRepaymentArrangementEntity(RepaymentArrangementEntity instance);
    partial void DeleteRepaymentArrangementEntity(RepaymentArrangementEntity instance);
    partial void InsertRepaymentRequestDetailEntity(RepaymentRequestDetailEntity instance);
    partial void UpdateRepaymentRequestDetailEntity(RepaymentRequestDetailEntity instance);
    partial void DeleteRepaymentRequestDetailEntity(RepaymentRequestDetailEntity instance);
    partial void InsertRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void UpdateRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void DeleteRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void InsertScheduledPaymentEntity(ScheduledPaymentEntity instance);
    partial void UpdateScheduledPaymentEntity(ScheduledPaymentEntity instance);
    partial void DeleteScheduledPaymentEntity(ScheduledPaymentEntity instance);
    partial void InsertTopupEntity(TopupEntity instance);
    partial void UpdateTopupEntity(TopupEntity instance);
    partial void DeleteTopupEntity(TopupEntity instance);
    partial void InsertTransactionEntity(TransactionEntity instance);
    partial void UpdateTransactionEntity(TransactionEntity instance);
    partial void DeleteTransactionEntity(TransactionEntity instance);
    partial void InsertUserEntity(UserEntity instance);
    partial void UpdateUserEntity(UserEntity instance);
    partial void DeleteUserEntity(UserEntity instance);
    #endregion
		
		public PaymentsDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaymentsDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaymentsDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaymentsDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountPreferenceEntity> AccountPreferences
		{
			get
			{
				return this.GetTable<AccountPreferenceEntity>();
			}
		}
		
		public System.Data.Linq.Table<AccountsApplicationEntity> AccountsApplications
		{
			get
			{
				return this.GetTable<AccountsApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateEntity> Affiliates
		{
			get
			{
				return this.GetTable<AffiliateEntity>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationEntity> Applications
		{
			get
			{
				return this.GetTable<ApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<ArrearEntity> Arrears
		{
			get
			{
				return this.GetTable<ArrearEntity>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountsBaseEntity> BankAccountsBases
		{
			get
			{
				return this.GetTable<BankAccountsBaseEntity>();
			}
		}
		
		public System.Data.Linq.Table<BusinessBankAccountEntity> BusinessBankAccounts
		{
			get
			{
				return this.GetTable<BusinessBankAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<BusinessFixedInstallmentLoanApplicationEntity> BusinessFixedInstallmentLoanApplications
		{
			get
			{
				return this.GetTable<BusinessFixedInstallmentLoanApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<BusinessPaymentCardEntity> BusinessPaymentCards
		{
			get
			{
				return this.GetTable<BusinessPaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<CalendarDateEntity> CalendarDates
		{
			get
			{
				return this.GetTable<CalendarDateEntity>();
			}
		}
		
		public System.Data.Linq.Table<ExternalPaymentCardEntity> ExternalPaymentCards
		{
			get
			{
				return this.GetTable<ExternalPaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<FixedTermLoanApplicationEntity> FixedTermLoanApplications
		{
			get
			{
				return this.GetTable<FixedTermLoanApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionBranchCodeEntity> InstitutionBranchCodes
		{
			get
			{
				return this.GetTable<InstitutionBranchCodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<LoanExtensionEntity> LoanExtensions
		{
			get
			{
				return this.GetTable<LoanExtensionEntity>();
			}
		}
		
		public System.Data.Linq.Table<LoanLimitationEntity> LoanLimitations
		{
			get
			{
				return this.GetTable<LoanLimitationEntity>();
			}
		}
		
		public System.Data.Linq.Table<LoanSignupEntity> LoanSignups
		{
			get
			{
				return this.GetTable<LoanSignupEntity>();
			}
		}
		
		public System.Data.Linq.Table<LookupDictionaryEntity> LookupDictionaries
		{
			get
			{
				return this.GetTable<LookupDictionaryEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCardHistoryDataEntity> PaymentCardHistoryDatas
		{
			get
			{
				return this.GetTable<PaymentCardHistoryDataEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCardHistoryItemEntity> PaymentCardHistoryItems
		{
			get
			{
				return this.GetTable<PaymentCardHistoryItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCardEntity> PaymentCards
		{
			get
			{
				return this.GetTable<PaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCardsBaseEntity> PaymentCardsBases
		{
			get
			{
				return this.GetTable<PaymentCardsBaseEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentPlanEntity> PaymentPlans
		{
			get
			{
				return this.GetTable<PaymentPlanEntity>();
			}
		}
		
		public System.Data.Linq.Table<PersonalBankAccountEntity> PersonalBankAccounts
		{
			get
			{
				return this.GetTable<PersonalBankAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<PersonalPaymentCardEntity> PersonalPaymentCards
		{
			get
			{
				return this.GetTable<PersonalPaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<ProductInterestRateEntity> ProductInterestRates
		{
			get
			{
				return this.GetTable<ProductInterestRateEntity>();
			}
		}
		
		public System.Data.Linq.Table<ProductEntity> Products
		{
			get
			{
				return this.GetTable<ProductEntity>();
			}
		}
		
		public System.Data.Linq.Table<PromoCampaignEntity> PromoCampaigns
		{
			get
			{
				return this.GetTable<PromoCampaignEntity>();
			}
		}
		
		public System.Data.Linq.Table<PromoCodeEntity> PromoCodes
		{
			get
			{
				return this.GetTable<PromoCodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PromoCodesUsageEntity> PromoCodesUsages
		{
			get
			{
				return this.GetTable<PromoCodesUsageEntity>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentArrangementDetailEntity> RepaymentArrangementDetails
		{
			get
			{
				return this.GetTable<RepaymentArrangementDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentArrangementEntity> RepaymentArrangements
		{
			get
			{
				return this.GetTable<RepaymentArrangementEntity>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentRequestDetailEntity> RepaymentRequestDetails
		{
			get
			{
				return this.GetTable<RepaymentRequestDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentRequestEntity> RepaymentRequests
		{
			get
			{
				return this.GetTable<RepaymentRequestEntity>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledPaymentEntity> ScheduledPayments
		{
			get
			{
				return this.GetTable<ScheduledPaymentEntity>();
			}
		}
		
		public System.Data.Linq.Table<TopupEntity> Topups
		{
			get
			{
				return this.GetTable<TopupEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionEntity> Transactions
		{
			get
			{
				return this.GetTable<TransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEntity> Users
		{
			get
			{
				return this.GetTable<UserEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.AccountPreferences")]
	public partial class AccountPreferenceEntity : DbEntity<AccountPreferenceEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountPreferenceId;
		
		private System.Guid _AccountId;
		
		private System.Nullable<int> _PrimaryBankAccountId;
		
		private System.Nullable<int> _PrimaryPaymentCardId;
		
		private System.Nullable<int> _TimeZone;
		
		private bool _IsHardship;
		
		private System.DateTime _CreatedOn;
		
		private bool _RemindBeforeEndLoan;
		
		private bool _IsDispute;
		
		private string _Ccin;
		
		private EntityRef<BankAccountsBaseEntity> _BankAccountsBaseEntity;
		
		private EntityRef<PaymentCardsBaseEntity> _PaymentCardsBaseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountPreferenceIdChanging(int value);
    partial void OnAccountPreferenceIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnPrimaryBankAccountIdChanging(System.Nullable<int> value);
    partial void OnPrimaryBankAccountIdChanged();
    partial void OnPrimaryPaymentCardIdChanging(System.Nullable<int> value);
    partial void OnPrimaryPaymentCardIdChanged();
    partial void OnTimeZoneChanging(System.Nullable<int> value);
    partial void OnTimeZoneChanged();
    partial void OnIsHardshipChanging(bool value);
    partial void OnIsHardshipChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnRemindBeforeEndLoanChanging(bool value);
    partial void OnRemindBeforeEndLoanChanged();
    partial void OnIsDisputeChanging(bool value);
    partial void OnIsDisputeChanged();
    partial void OnCcinChanging(string value);
    partial void OnCcinChanged();
    #endregion
		
		public AccountPreferenceEntity()
		{
			this._BankAccountsBaseEntity = default(EntityRef<BankAccountsBaseEntity>);
			this._PaymentCardsBaseEntity = default(EntityRef<PaymentCardsBaseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPreferenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountPreferenceId
		{
			get
			{
				return this._AccountPreferenceId;
			}
			set
			{
				if ((this._AccountPreferenceId != value))
				{
					this.OnAccountPreferenceIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPreferenceId = value;
					this.SendPropertyChanged("AccountPreferenceId");
					this.OnAccountPreferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryBankAccountId", DbType="Int")]
		public System.Nullable<int> PrimaryBankAccountId
		{
			get
			{
				return this._PrimaryBankAccountId;
			}
			set
			{
				if ((this._PrimaryBankAccountId != value))
				{
					if (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryBankAccountId = value;
					this.SendPropertyChanged("PrimaryBankAccountId");
					this.OnPrimaryBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPaymentCardId", DbType="Int")]
		public System.Nullable<int> PrimaryPaymentCardId
		{
			get
			{
				return this._PrimaryPaymentCardId;
			}
			set
			{
				if ((this._PrimaryPaymentCardId != value))
				{
					if (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPaymentCardId = value;
					this.SendPropertyChanged("PrimaryPaymentCardId");
					this.OnPrimaryPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="Int")]
		public System.Nullable<int> TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHardship", DbType="Bit NOT NULL")]
		public bool IsHardship
		{
			get
			{
				return this._IsHardship;
			}
			set
			{
				if ((this._IsHardship != value))
				{
					this.OnIsHardshipChanging(value);
					this.SendPropertyChanging();
					this._IsHardship = value;
					this.SendPropertyChanged("IsHardship");
					this.OnIsHardshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemindBeforeEndLoan", DbType="Bit NOT NULL")]
		public bool RemindBeforeEndLoan
		{
			get
			{
				return this._RemindBeforeEndLoan;
			}
			set
			{
				if ((this._RemindBeforeEndLoan != value))
				{
					this.OnRemindBeforeEndLoanChanging(value);
					this.SendPropertyChanging();
					this._RemindBeforeEndLoan = value;
					this.SendPropertyChanged("RemindBeforeEndLoan");
					this.OnRemindBeforeEndLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDispute", DbType="Bit NOT NULL")]
		public bool IsDispute
		{
			get
			{
				return this._IsDispute;
			}
			set
			{
				if ((this._IsDispute != value))
				{
					this.OnIsDisputeChanging(value);
					this.SendPropertyChanging();
					this._IsDispute = value;
					this.SendPropertyChanged("IsDispute");
					this.OnIsDisputeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ccin", DbType="NVarChar(255)")]
		public string Ccin
		{
			get
			{
				return this._Ccin;
			}
			set
			{
				if ((this._Ccin != value))
				{
					this.OnCcinChanging(value);
					this.SendPropertyChanging();
					this._Ccin = value;
					this.SendPropertyChanged("Ccin");
					this.OnCcinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountPreferences_BankAccountsBase", Storage="_BankAccountsBaseEntity", ThisKey="PrimaryBankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public BankAccountsBaseEntity BankAccountsBaseEntity
		{
			get
			{
				return this._BankAccountsBaseEntity.Entity;
			}
			set
			{
				BankAccountsBaseEntity previousValue = this._BankAccountsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountsBaseEntity.Entity = null;
						previousValue.Payment_AccountPreferences.Remove(this);
					}
					this._BankAccountsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_AccountPreferences.Add(this);
						this._PrimaryBankAccountId = value.BankAccountId;
					}
					else
					{
						this._PrimaryBankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccountsBaseEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountPreferences_PaymentCardsBase", Storage="_PaymentCardsBaseEntity", ThisKey="PrimaryPaymentCardId", OtherKey="PaymentCardId", IsForeignKey=true)]
		public PaymentCardsBaseEntity PaymentCardsBaseEntity
		{
			get
			{
				return this._PaymentCardsBaseEntity.Entity;
			}
			set
			{
				PaymentCardsBaseEntity previousValue = this._PaymentCardsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardsBaseEntity.Entity = null;
						previousValue.Payment_AccountPreferences.Remove(this);
					}
					this._PaymentCardsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_AccountPreferences.Add(this);
						this._PrimaryPaymentCardId = value.PaymentCardId;
					}
					else
					{
						this._PrimaryPaymentCardId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentCardsBaseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.AccountsApplications")]
	public partial class AccountsApplicationEntity : DbEntity<AccountsApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationId;
		
		private System.Guid _AccountId;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private System.Nullable<System.DateTime> _DeactivatedOn;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnDeactivatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeactivatedOnChanged();
    #endregion
		
		public AccountsApplicationEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeactivatedOn
		{
			get
			{
				return this._DeactivatedOn;
			}
			set
			{
				if ((this._DeactivatedOn != value))
				{
					this.OnDeactivatedOnChanging(value);
					this.SendPropertyChanging();
					this._DeactivatedOn = value;
					this.SendPropertyChanged("DeactivatedOn");
					this.OnDeactivatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountsApplications_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Payment_AccountsApplications.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_AccountsApplications.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Affiliates")]
	public partial class AffiliateEntity : DbEntity<AffiliateEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AffiliateId;
		
		private string _ExternalId;
		
		private string _Name;
		
		private EntitySet<PromoCodeEntity> _Payment_PromoCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAffiliateIdChanging(int value);
    partial void OnAffiliateIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AffiliateEntity()
		{
			this._Payment_PromoCodes = new EntitySet<PromoCodeEntity>(new Action<PromoCodeEntity>(this.attach_Payment_PromoCodes), new Action<PromoCodeEntity>(this.detach_Payment_PromoCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodes_Affiliates", Storage="_Payment_PromoCodes", ThisKey="AffiliateId", OtherKey="AffiliateId", DeleteRule="NO ACTION")]
		public EntitySet<PromoCodeEntity> Payment_PromoCodes
		{
			get
			{
				return this._Payment_PromoCodes;
			}
			set
			{
				this._Payment_PromoCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_PromoCodes(PromoCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = this;
		}
		
		private void detach_Payment_PromoCodes(PromoCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Applications")]
	public partial class ApplicationEntity : DbEntity<ApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private int _ProductId;
		
		private int _Currency;
		
		private System.Guid _BankAccountGuid;
		
		private System.Guid _PaymentCardGuid;
		
		private System.Nullable<int> _PromoCodeId;
		
		private System.DateTime _ApplicationDate;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private System.Nullable<System.DateTime> _ClosedOn;
		
		private System.DateTime _CreatedOn;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _CanceledOn;
		
		private System.Nullable<System.DateTime> _AcceptedOn;
		
		private System.Nullable<System.DateTime> _DeclinedOn;
		
		private EntitySet<AccountsApplicationEntity> _Payment_AccountsApplications;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
		private EntityRef<ArrearEntity> _ArrearEntity;
		
		private EntityRef<BusinessFixedInstallmentLoanApplicationEntity> _BusinessFixedInstallmentLoanApplicationEntity;
		
		private EntityRef<FixedTermLoanApplicationEntity> _FixedTermLoanApplicationEntity;
		
		private EntitySet<RepaymentRequestDetailEntity> _Payment_RepaymentRequestDetails;
		
		private EntitySet<ScheduledPaymentEntity> _Payment_ScheduledPayments;
		
		private EntitySet<TransactionEntity> _Payment_Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnBankAccountGuidChanging(System.Guid value);
    partial void OnBankAccountGuidChanged();
    partial void OnPaymentCardGuidChanging(System.Guid value);
    partial void OnPaymentCardGuidChanged();
    partial void OnPromoCodeIdChanging(System.Nullable<int> value);
    partial void OnPromoCodeIdChanged();
    partial void OnApplicationDateChanging(System.DateTime value);
    partial void OnApplicationDateChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnClosedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCanceledOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCanceledOnChanged();
    partial void OnAcceptedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedOnChanged();
    partial void OnDeclinedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeclinedOnChanged();
    #endregion
		
		public ApplicationEntity()
		{
			this._Payment_AccountsApplications = new EntitySet<AccountsApplicationEntity>(new Action<AccountsApplicationEntity>(this.attach_Payment_AccountsApplications), new Action<AccountsApplicationEntity>(this.detach_Payment_AccountsApplications));
			this._ProductEntity = default(EntityRef<ProductEntity>);
			this._ArrearEntity = default(EntityRef<ArrearEntity>);
			this._BusinessFixedInstallmentLoanApplicationEntity = default(EntityRef<BusinessFixedInstallmentLoanApplicationEntity>);
			this._FixedTermLoanApplicationEntity = default(EntityRef<FixedTermLoanApplicationEntity>);
			this._Payment_RepaymentRequestDetails = new EntitySet<RepaymentRequestDetailEntity>(new Action<RepaymentRequestDetailEntity>(this.attach_Payment_RepaymentRequestDetails), new Action<RepaymentRequestDetailEntity>(this.detach_Payment_RepaymentRequestDetails));
			this._Payment_ScheduledPayments = new EntitySet<ScheduledPaymentEntity>(new Action<ScheduledPaymentEntity>(this.attach_Payment_ScheduledPayments), new Action<ScheduledPaymentEntity>(this.detach_Payment_ScheduledPayments));
			this._Payment_Transactions = new EntitySet<TransactionEntity>(new Action<TransactionEntity>(this.attach_Payment_Transactions), new Action<TransactionEntity>(this.detach_Payment_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid BankAccountGuid
		{
			get
			{
				return this._BankAccountGuid;
			}
			set
			{
				if ((this._BankAccountGuid != value))
				{
					this.OnBankAccountGuidChanging(value);
					this.SendPropertyChanging();
					this._BankAccountGuid = value;
					this.SendPropertyChanged("BankAccountGuid");
					this.OnBankAccountGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PaymentCardGuid
		{
			get
			{
				return this._PaymentCardGuid;
			}
			set
			{
				if ((this._PaymentCardGuid != value))
				{
					this.OnPaymentCardGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardGuid = value;
					this.SendPropertyChanged("PaymentCardGuid");
					this.OnPaymentCardGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PromoCodeId
		{
			get
			{
				return this._PromoCodeId;
			}
			set
			{
				if ((this._PromoCodeId != value))
				{
					this.OnPromoCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeId = value;
					this.SendPropertyChanged("PromoCodeId");
					this.OnPromoCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ClosedOn
		{
			get
			{
				return this._ClosedOn;
			}
			set
			{
				if ((this._ClosedOn != value))
				{
					this.OnClosedOnChanging(value);
					this.SendPropertyChanging();
					this._ClosedOn = value;
					this.SendPropertyChanged("ClosedOn");
					this.OnClosedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanceledOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CanceledOn
		{
			get
			{
				return this._CanceledOn;
			}
			set
			{
				if ((this._CanceledOn != value))
				{
					this.OnCanceledOnChanging(value);
					this.SendPropertyChanging();
					this._CanceledOn = value;
					this.SendPropertyChanged("CanceledOn");
					this.OnCanceledOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AcceptedOn
		{
			get
			{
				return this._AcceptedOn;
			}
			set
			{
				if ((this._AcceptedOn != value))
				{
					this.OnAcceptedOnChanging(value);
					this.SendPropertyChanging();
					this._AcceptedOn = value;
					this.SendPropertyChanged("AcceptedOn");
					this.OnAcceptedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclinedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeclinedOn
		{
			get
			{
				return this._DeclinedOn;
			}
			set
			{
				if ((this._DeclinedOn != value))
				{
					this.OnDeclinedOnChanging(value);
					this.SendPropertyChanging();
					this._DeclinedOn = value;
					this.SendPropertyChanged("DeclinedOn");
					this.OnDeclinedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountsApplications_Applications", Storage="_Payment_AccountsApplications", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<AccountsApplicationEntity> Payment_AccountsApplications
		{
			get
			{
				return this._Payment_AccountsApplications;
			}
			set
			{
				this._Payment_AccountsApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Applications_Products", Storage="_ProductEntity", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.Payment_Applications.Remove(this);
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_Applications.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Arrears_Applications", Storage="_ArrearEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public ArrearEntity ArrearEntity
		{
			get
			{
				return this._ArrearEntity.Entity;
			}
			set
			{
				ArrearEntity previousValue = this._ArrearEntity.Entity;
				if (((previousValue != value) 
							|| (this._ArrearEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArrearEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._ArrearEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("ArrearEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BusinessFixedInstallmentLoanApplications_Applications", Storage="_BusinessFixedInstallmentLoanApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public BusinessFixedInstallmentLoanApplicationEntity BusinessFixedInstallmentLoanApplicationEntity
		{
			get
			{
				return this._BusinessFixedInstallmentLoanApplicationEntity.Entity;
			}
			set
			{
				BusinessFixedInstallmentLoanApplicationEntity previousValue = this._BusinessFixedInstallmentLoanApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessFixedInstallmentLoanApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessFixedInstallmentLoanApplicationEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._BusinessFixedInstallmentLoanApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("BusinessFixedInstallmentLoanApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_FixedTermLoanApplications_Applications", Storage="_FixedTermLoanApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FixedTermLoanApplicationEntity FixedTermLoanApplicationEntity
		{
			get
			{
				return this._FixedTermLoanApplicationEntity.Entity;
			}
			set
			{
				FixedTermLoanApplicationEntity previousValue = this._FixedTermLoanApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanApplicationEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FixedTermLoanApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FixedTermLoanApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentRequestDetails_Applications", Storage="_Payment_RepaymentRequestDetails", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<RepaymentRequestDetailEntity> Payment_RepaymentRequestDetails
		{
			get
			{
				return this._Payment_RepaymentRequestDetails;
			}
			set
			{
				this._Payment_RepaymentRequestDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ScheduledPayments_Applications", Storage="_Payment_ScheduledPayments", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<ScheduledPaymentEntity> Payment_ScheduledPayments
		{
			get
			{
				return this._Payment_ScheduledPayments;
			}
			set
			{
				this._Payment_ScheduledPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Applications", Storage="_Payment_Transactions", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<TransactionEntity> Payment_Transactions
		{
			get
			{
				return this._Payment_Transactions;
			}
			set
			{
				this._Payment_Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_AccountsApplications(AccountsApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Payment_AccountsApplications(AccountsApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_Payment_RepaymentRequestDetails(RepaymentRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Payment_RepaymentRequestDetails(RepaymentRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_Payment_ScheduledPayments(ScheduledPaymentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Payment_ScheduledPayments(ScheduledPaymentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_Payment_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Payment_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Arrears")]
	public partial class ArrearEntity : DbEntity<ArrearEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArrearId;
		
		private int _ApplicationId;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArrearIdChanging(int value);
    partial void OnArrearIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ArrearEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrearId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArrearId
		{
			get
			{
				return this._ArrearId;
			}
			set
			{
				if ((this._ArrearId != value))
				{
					this.OnArrearIdChanging(value);
					this.SendPropertyChanging();
					this._ArrearId = value;
					this.SendPropertyChanged("ArrearId");
					this.OnArrearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Arrears_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.ArrearEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.ArrearEntity = this;
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.BankAccountsBase")]
	public partial class BankAccountsBaseEntity : DbEntity<BankAccountsBaseEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountId;
		
		private System.Guid _ExternalId;
		
		private string _BankName;
		
		private string _BankCode;
		
		private string _AccountNumber;
		
		private string _AccountType;
		
		private string _HolderName;
		
		private System.DateTime _AccountOpenDate;
		
		private string _CountryCode;
		
		private System.Nullable<System.DateTime> _ValidatedOn;
		
		private System.Nullable<System.DateTime> _ValidateFailedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.DateTime _CreatedOn;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<BusinessBankAccountEntity> _BusinessBankAccountEntity;
		
		private EntityRef<PersonalBankAccountEntity> _PersonalBankAccountEntity;
		
		private EntitySet<AccountPreferenceEntity> _Payment_AccountPreferences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnAccountOpenDateChanging(System.DateTime value);
    partial void OnAccountOpenDateChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnValidatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnValidatedOnChanged();
    partial void OnValidateFailedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnValidateFailedOnChanged();
    partial void OnDeletedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public BankAccountsBaseEntity()
		{
			this._BusinessBankAccountEntity = default(EntityRef<BusinessBankAccountEntity>);
			this._PersonalBankAccountEntity = default(EntityRef<PersonalBankAccountEntity>);
			this._Payment_AccountPreferences = new EntitySet<AccountPreferenceEntity>(new Action<AccountPreferenceEntity>(this.attach_Payment_AccountPreferences), new Action<AccountPreferenceEntity>(this.detach_Payment_AccountPreferences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountOpenDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AccountOpenDate
		{
			get
			{
				return this._AccountOpenDate;
			}
			set
			{
				if ((this._AccountOpenDate != value))
				{
					this.OnAccountOpenDateChanging(value);
					this.SendPropertyChanging();
					this._AccountOpenDate = value;
					this.SendPropertyChanged("AccountOpenDate");
					this.OnAccountOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValidatedOn
		{
			get
			{
				return this._ValidatedOn;
			}
			set
			{
				if ((this._ValidatedOn != value))
				{
					this.OnValidatedOnChanging(value);
					this.SendPropertyChanging();
					this._ValidatedOn = value;
					this.SendPropertyChanged("ValidatedOn");
					this.OnValidatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateFailedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValidateFailedOn
		{
			get
			{
				return this._ValidateFailedOn;
			}
			set
			{
				if ((this._ValidateFailedOn != value))
				{
					this.OnValidateFailedOnChanging(value);
					this.SendPropertyChanging();
					this._ValidateFailedOn = value;
					this.SendPropertyChanged("ValidateFailedOn");
					this.OnValidateFailedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this.OnDeletedOnChanging(value);
					this.SendPropertyChanging();
					this._DeletedOn = value;
					this.SendPropertyChanged("DeletedOn");
					this.OnDeletedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BusinessB__BankA__0F624AF8", Storage="_BusinessBankAccountEntity", ThisKey="BankAccountId", OtherKey="BankAccountId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public BusinessBankAccountEntity BusinessBankAccountEntity
		{
			get
			{
				return this._BusinessBankAccountEntity.Entity;
			}
			set
			{
				BusinessBankAccountEntity previousValue = this._BusinessBankAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessBankAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessBankAccountEntity.Entity = null;
						previousValue.BankAccountsBaseEntity = null;
					}
					this._BusinessBankAccountEntity.Entity = value;
					if ((value != null))
					{
						value.BankAccountsBaseEntity = this;
					}
					this.SendPropertyChanged("BusinessBankAccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PersonalB__BankA__0A9D95DB", Storage="_PersonalBankAccountEntity", ThisKey="BankAccountId", OtherKey="BankAccountId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public PersonalBankAccountEntity PersonalBankAccountEntity
		{
			get
			{
				return this._PersonalBankAccountEntity.Entity;
			}
			set
			{
				PersonalBankAccountEntity previousValue = this._PersonalBankAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._PersonalBankAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalBankAccountEntity.Entity = null;
						previousValue.BankAccountsBaseEntity = null;
					}
					this._PersonalBankAccountEntity.Entity = value;
					if ((value != null))
					{
						value.BankAccountsBaseEntity = this;
					}
					this.SendPropertyChanged("PersonalBankAccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountPreferences_BankAccountsBase", Storage="_Payment_AccountPreferences", ThisKey="BankAccountId", OtherKey="PrimaryBankAccountId", DeleteRule="NO ACTION")]
		public EntitySet<AccountPreferenceEntity> Payment_AccountPreferences
		{
			get
			{
				return this._Payment_AccountPreferences;
			}
			set
			{
				this._Payment_AccountPreferences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_AccountPreferences(AccountPreferenceEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountsBaseEntity = this;
		}
		
		private void detach_Payment_AccountPreferences(AccountPreferenceEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountsBaseEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.BusinessBankAccounts")]
	public partial class BusinessBankAccountEntity : DbEntity<BusinessBankAccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountId;
		
		private System.Guid _OrganisationId;
		
		private EntityRef<BankAccountsBaseEntity> _BankAccountsBaseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnOrganisationIdChanging(System.Guid value);
    partial void OnOrganisationIdChanged();
    #endregion
		
		public BusinessBankAccountEntity()
		{
			this._BankAccountsBaseEntity = default(EntityRef<BankAccountsBaseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationId
		{
			get
			{
				return this._OrganisationId;
			}
			set
			{
				if ((this._OrganisationId != value))
				{
					this.OnOrganisationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganisationId = value;
					this.SendPropertyChanged("OrganisationId");
					this.OnOrganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BusinessB__BankA__0F624AF8", Storage="_BankAccountsBaseEntity", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public BankAccountsBaseEntity BankAccountsBaseEntity
		{
			get
			{
				return this._BankAccountsBaseEntity.Entity;
			}
			set
			{
				BankAccountsBaseEntity previousValue = this._BankAccountsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountsBaseEntity.Entity = null;
						previousValue.BusinessBankAccountEntity = null;
					}
					this._BankAccountsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.BusinessBankAccountEntity = this;
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(int);
					}
					this.SendPropertyChanged("BankAccountsBaseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.BusinessFixedInstallmentLoanApplications")]
	public partial class BusinessFixedInstallmentLoanApplicationEntity : DbEntity<BusinessFixedInstallmentLoanApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationId;
		
		private decimal _LoanAmount;
		
		private decimal _MonthlyInterestRate;
		
		private decimal _ApplicationFee;
		
		private int _NumberOfWeeks;
		
		private System.Guid _OrganisationId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnMonthlyInterestRateChanging(decimal value);
    partial void OnMonthlyInterestRateChanged();
    partial void OnApplicationFeeChanging(decimal value);
    partial void OnApplicationFeeChanged();
    partial void OnNumberOfWeeksChanging(int value);
    partial void OnNumberOfWeeksChanged();
    partial void OnOrganisationIdChanging(System.Guid value);
    partial void OnOrganisationIdChanged();
    #endregion
		
		public BusinessFixedInstallmentLoanApplicationEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyInterestRate", DbType="Decimal(9,6) NOT NULL")]
		public decimal MonthlyInterestRate
		{
			get
			{
				return this._MonthlyInterestRate;
			}
			set
			{
				if ((this._MonthlyInterestRate != value))
				{
					this.OnMonthlyInterestRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyInterestRate = value;
					this.SendPropertyChanged("MonthlyInterestRate");
					this.OnMonthlyInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationFee", DbType="Decimal(9,2) NOT NULL")]
		public decimal ApplicationFee
		{
			get
			{
				return this._ApplicationFee;
			}
			set
			{
				if ((this._ApplicationFee != value))
				{
					this.OnApplicationFeeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationFee = value;
					this.SendPropertyChanged("ApplicationFee");
					this.OnApplicationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfWeeks", DbType="Int NOT NULL")]
		public int NumberOfWeeks
		{
			get
			{
				return this._NumberOfWeeks;
			}
			set
			{
				if ((this._NumberOfWeeks != value))
				{
					this.OnNumberOfWeeksChanging(value);
					this.SendPropertyChanging();
					this._NumberOfWeeks = value;
					this.SendPropertyChanged("NumberOfWeeks");
					this.OnNumberOfWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationId
		{
			get
			{
				return this._OrganisationId;
			}
			set
			{
				if ((this._OrganisationId != value))
				{
					this.OnOrganisationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganisationId = value;
					this.SendPropertyChanged("OrganisationId");
					this.OnOrganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BusinessFixedInstallmentLoanApplications_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.BusinessFixedInstallmentLoanApplicationEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.BusinessFixedInstallmentLoanApplicationEntity = this;
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.BusinessPaymentCards")]
	public partial class BusinessPaymentCardEntity : DbEntity<BusinessPaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardId;
		
		private System.Guid _OrganisationId;
		
		private EntityRef<PaymentCardsBaseEntity> _PaymentCardsBaseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardIdChanging(int value);
    partial void OnPaymentCardIdChanged();
    partial void OnOrganisationIdChanging(System.Guid value);
    partial void OnOrganisationIdChanged();
    #endregion
		
		public BusinessPaymentCardEntity()
		{
			this._PaymentCardsBaseEntity = default(EntityRef<PaymentCardsBaseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					if (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationId
		{
			get
			{
				return this._OrganisationId;
			}
			set
			{
				if ((this._OrganisationId != value))
				{
					this.OnOrganisationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganisationId = value;
					this.SendPropertyChanged("OrganisationId");
					this.OnOrganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BusinessPaymentCards_PaymentCardsBase", Storage="_PaymentCardsBaseEntity", ThisKey="PaymentCardId", OtherKey="PaymentCardId", IsForeignKey=true)]
		public PaymentCardsBaseEntity PaymentCardsBaseEntity
		{
			get
			{
				return this._PaymentCardsBaseEntity.Entity;
			}
			set
			{
				PaymentCardsBaseEntity previousValue = this._PaymentCardsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardsBaseEntity.Entity = null;
						previousValue.BusinessPaymentCardEntity = null;
					}
					this._PaymentCardsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.BusinessPaymentCardEntity = this;
						this._PaymentCardId = value.PaymentCardId;
					}
					else
					{
						this._PaymentCardId = default(int);
					}
					this.SendPropertyChanged("PaymentCardsBaseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.CalendarDates")]
	public partial class CalendarDateEntity : DbEntity<CalendarDateEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CalendarDateId;
		
		private System.DateTime _Date;
		
		private bool _IsBankHoliday;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarDateIdChanging(int value);
    partial void OnCalendarDateIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIsBankHolidayChanging(bool value);
    partial void OnIsBankHolidayChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public CalendarDateEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CalendarDateId
		{
			get
			{
				return this._CalendarDateId;
			}
			set
			{
				if ((this._CalendarDateId != value))
				{
					this.OnCalendarDateIdChanging(value);
					this.SendPropertyChanging();
					this._CalendarDateId = value;
					this.SendPropertyChanged("CalendarDateId");
					this.OnCalendarDateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBankHoliday", DbType="Bit NOT NULL")]
		public bool IsBankHoliday
		{
			get
			{
				return this._IsBankHoliday;
			}
			set
			{
				if ((this._IsBankHoliday != value))
				{
					this.OnIsBankHolidayChanging(value);
					this.SendPropertyChanging();
					this._IsBankHoliday = value;
					this.SendPropertyChanged("IsBankHoliday");
					this.OnIsBankHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.ExternalPaymentCards")]
	public partial class ExternalPaymentCardEntity : DbEntity<ExternalPaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardId;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _Town;
		
		private string _Country;
		
		private string _County;
		
		private string _PostCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardIdChanging(int value);
    partial void OnPaymentCardIdChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    #endregion
		
		public ExternalPaymentCardEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(200)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(200)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.FixedTermLoanApplications")]
	public partial class FixedTermLoanApplicationEntity : DbEntity<FixedTermLoanApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationId;
		
		private decimal _LoanAmount;
		
		private decimal _MonthlyInterestRate;
		
		private decimal _TransmissionFee;
		
		private System.DateTime _PromiseDate;
		
		private System.Nullable<System.DateTime> _NextDueDate;
		
		private System.Nullable<bool> _IsV2;
		
		private System.Nullable<decimal> _ServiceFee;
		
		private System.Nullable<decimal> _InitiationFee;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntitySet<TopupEntity> _Payment_Topups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnMonthlyInterestRateChanging(decimal value);
    partial void OnMonthlyInterestRateChanged();
    partial void OnTransmissionFeeChanging(decimal value);
    partial void OnTransmissionFeeChanged();
    partial void OnPromiseDateChanging(System.DateTime value);
    partial void OnPromiseDateChanged();
    partial void OnNextDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextDueDateChanged();
    partial void OnIsV2Changing(System.Nullable<bool> value);
    partial void OnIsV2Changed();
    partial void OnServiceFeeChanging(System.Nullable<decimal> value);
    partial void OnServiceFeeChanged();
    partial void OnInitiationFeeChanging(System.Nullable<decimal> value);
    partial void OnInitiationFeeChanged();
    #endregion
		
		public FixedTermLoanApplicationEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._Payment_Topups = new EntitySet<TopupEntity>(new Action<TopupEntity>(this.attach_Payment_Topups), new Action<TopupEntity>(this.detach_Payment_Topups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyInterestRate", DbType="Decimal(9,6) NOT NULL")]
		public decimal MonthlyInterestRate
		{
			get
			{
				return this._MonthlyInterestRate;
			}
			set
			{
				if ((this._MonthlyInterestRate != value))
				{
					this.OnMonthlyInterestRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyInterestRate = value;
					this.SendPropertyChanged("MonthlyInterestRate");
					this.OnMonthlyInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransmissionFee", DbType="Decimal(9,2) NOT NULL")]
		public decimal TransmissionFee
		{
			get
			{
				return this._TransmissionFee;
			}
			set
			{
				if ((this._TransmissionFee != value))
				{
					this.OnTransmissionFeeChanging(value);
					this.SendPropertyChanging();
					this._TransmissionFee = value;
					this.SendPropertyChanged("TransmissionFee");
					this.OnTransmissionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromiseDate", DbType="DateTime NOT NULL")]
		public System.DateTime PromiseDate
		{
			get
			{
				return this._PromiseDate;
			}
			set
			{
				if ((this._PromiseDate != value))
				{
					this.OnPromiseDateChanging(value);
					this.SendPropertyChanging();
					this._PromiseDate = value;
					this.SendPropertyChanged("PromiseDate");
					this.OnPromiseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDueDate
		{
			get
			{
				return this._NextDueDate;
			}
			set
			{
				if ((this._NextDueDate != value))
				{
					this.OnNextDueDateChanging(value);
					this.SendPropertyChanging();
					this._NextDueDate = value;
					this.SendPropertyChanged("NextDueDate");
					this.OnNextDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsV2", DbType="Bit")]
		public System.Nullable<bool> IsV2
		{
			get
			{
				return this._IsV2;
			}
			set
			{
				if ((this._IsV2 != value))
				{
					this.OnIsV2Changing(value);
					this.SendPropertyChanging();
					this._IsV2 = value;
					this.SendPropertyChanged("IsV2");
					this.OnIsV2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceFee", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ServiceFee
		{
			get
			{
				return this._ServiceFee;
			}
			set
			{
				if ((this._ServiceFee != value))
				{
					this.OnServiceFeeChanging(value);
					this.SendPropertyChanging();
					this._ServiceFee = value;
					this.SendPropertyChanged("ServiceFee");
					this.OnServiceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiationFee", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> InitiationFee
		{
			get
			{
				return this._InitiationFee;
			}
			set
			{
				if ((this._InitiationFee != value))
				{
					this.OnInitiationFeeChanging(value);
					this.SendPropertyChanging();
					this._InitiationFee = value;
					this.SendPropertyChanged("InitiationFee");
					this.OnInitiationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_FixedTermLoanApplications_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FixedTermLoanApplicationEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FixedTermLoanApplicationEntity = this;
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Topups_FixedTermLoanApplications", Storage="_Payment_Topups", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<TopupEntity> Payment_Topups
		{
			get
			{
				return this._Payment_Topups;
			}
			set
			{
				this._Payment_Topups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_Topups(TopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.FixedTermLoanApplicationEntity = this;
		}
		
		private void detach_Payment_Topups(TopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.FixedTermLoanApplicationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.InstitutionBranchCodes")]
	public partial class InstitutionBranchCodeEntity : DbEntity<InstitutionBranchCodeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _InstitutionCode;
		
		private string _BranchCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInstitutionCodeChanging(string value);
    partial void OnInstitutionCodeChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    #endregion
		
		public InstitutionBranchCodeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstitutionCode
		{
			get
			{
				return this._InstitutionCode;
			}
			set
			{
				if ((this._InstitutionCode != value))
				{
					this.OnInstitutionCodeChanging(value);
					this.SendPropertyChanging();
					this._InstitutionCode = value;
					this.SendPropertyChanged("InstitutionCode");
					this.OnInstitutionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.LoanExtensions")]
	public partial class LoanExtensionEntity : DbEntity<LoanExtensionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanExtensionId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private System.DateTime _ExtendDate;
		
		private decimal _PartPaymentAmount;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanExtensionIdChanging(int value);
    partial void OnLoanExtensionIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnExtendDateChanging(System.DateTime value);
    partial void OnExtendDateChanged();
    partial void OnPartPaymentAmountChanging(decimal value);
    partial void OnPartPaymentAmountChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    #endregion
		
		public LoanExtensionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanExtensionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanExtensionId
		{
			get
			{
				return this._LoanExtensionId;
			}
			set
			{
				if ((this._LoanExtensionId != value))
				{
					this.OnLoanExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._LoanExtensionId = value;
					this.SendPropertyChanged("LoanExtensionId");
					this.OnLoanExtensionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExtendDate
		{
			get
			{
				return this._ExtendDate;
			}
			set
			{
				if ((this._ExtendDate != value))
				{
					this.OnExtendDateChanging(value);
					this.SendPropertyChanging();
					this._ExtendDate = value;
					this.SendPropertyChanged("ExtendDate");
					this.OnExtendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartPaymentAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal PartPaymentAmount
		{
			get
			{
				return this._PartPaymentAmount;
			}
			set
			{
				if ((this._PartPaymentAmount != value))
				{
					this.OnPartPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PartPaymentAmount = value;
					this.SendPropertyChanged("PartPaymentAmount");
					this.OnPartPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.LoanLimitations")]
	public partial class LoanLimitationEntity : DbEntity<LoanLimitationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _ExternalId;
		
		private System.DateTime _Date;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _MaxLoansCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnMaxLoansCountChanging(System.Nullable<int> value);
    partial void OnMaxLoansCountChanged();
    #endregion
		
		public LoanLimitationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLoansCount", DbType="Int")]
		public System.Nullable<int> MaxLoansCount
		{
			get
			{
				return this._MaxLoansCount;
			}
			set
			{
				if ((this._MaxLoansCount != value))
				{
					this.OnMaxLoansCountChanging(value);
					this.SendPropertyChanging();
					this._MaxLoansCount = value;
					this.SendPropertyChanged("MaxLoansCount");
					this.OnMaxLoansCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.LoanSignups")]
	public partial class LoanSignupEntity : DbEntity<LoanSignupEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _ExternalId;
		
		private System.DateTime _Date;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public LoanSignupEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.LookupDictionaries")]
	public partial class LookupDictionaryEntity : DbEntity<LookupDictionaryEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LookupId;
		
		private string _Category;
		
		private string _DataKey;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLookupIdChanging(int value);
    partial void OnLookupIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDataKeyChanging(string value);
    partial void OnDataKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public LookupDictionaryEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LookupId
		{
			get
			{
				return this._LookupId;
			}
			set
			{
				if ((this._LookupId != value))
				{
					this.OnLookupIdChanging(value);
					this.SendPropertyChanging();
					this._LookupId = value;
					this.SendPropertyChanged("LookupId");
					this.OnLookupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DataKey
		{
			get
			{
				return this._DataKey;
			}
			set
			{
				if ((this._DataKey != value))
				{
					this.OnDataKeyChanging(value);
					this.SendPropertyChanging();
					this._DataKey = value;
					this.SendPropertyChanged("DataKey");
					this.OnDataKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PaymentCardHistoryData")]
	public partial class PaymentCardHistoryDataEntity : DbEntity<PaymentCardHistoryDataEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryDataId;
		
		private int _CardId;
		
		private System.Guid _CardExternalId;
		
		private int _AccountPreferenceId;
		
		private System.Guid _AccountPreferenceExternalId;
		
		private string _CardType;
		
		private string _HolderName;
		
		private string _MaskedNumber;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private string _IssueNo;
		
		private System.Nullable<bool> _IsCreditCard;
		
		private System.Nullable<System.DateTime> _DeactivatedOn;
		
		private System.Nullable<System.DateTime> _CardCreatedOn;
		
		private string _CardCreatedBy;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryDataIdChanging(int value);
    partial void OnHistoryDataIdChanged();
    partial void OnCardIdChanging(int value);
    partial void OnCardIdChanged();
    partial void OnCardExternalIdChanging(System.Guid value);
    partial void OnCardExternalIdChanged();
    partial void OnAccountPreferenceIdChanging(int value);
    partial void OnAccountPreferenceIdChanged();
    partial void OnAccountPreferenceExternalIdChanging(System.Guid value);
    partial void OnAccountPreferenceExternalIdChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnMaskedNumberChanging(string value);
    partial void OnMaskedNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIssueNoChanging(string value);
    partial void OnIssueNoChanged();
    partial void OnIsCreditCardChanging(System.Nullable<bool> value);
    partial void OnIsCreditCardChanged();
    partial void OnDeactivatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeactivatedOnChanged();
    partial void OnCardCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCardCreatedOnChanged();
    partial void OnCardCreatedByChanging(string value);
    partial void OnCardCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public PaymentCardHistoryDataEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryDataId
		{
			get
			{
				return this._HistoryDataId;
			}
			set
			{
				if ((this._HistoryDataId != value))
				{
					this.OnHistoryDataIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryDataId = value;
					this.SendPropertyChanged("HistoryDataId");
					this.OnHistoryDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardId", DbType="Int NOT NULL")]
		public int CardId
		{
			get
			{
				return this._CardId;
			}
			set
			{
				if ((this._CardId != value))
				{
					this.OnCardIdChanging(value);
					this.SendPropertyChanging();
					this._CardId = value;
					this.SendPropertyChanged("CardId");
					this.OnCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CardExternalId
		{
			get
			{
				return this._CardExternalId;
			}
			set
			{
				if ((this._CardExternalId != value))
				{
					this.OnCardExternalIdChanging(value);
					this.SendPropertyChanging();
					this._CardExternalId = value;
					this.SendPropertyChanged("CardExternalId");
					this.OnCardExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPreferenceId", DbType="Int NOT NULL")]
		public int AccountPreferenceId
		{
			get
			{
				return this._AccountPreferenceId;
			}
			set
			{
				if ((this._AccountPreferenceId != value))
				{
					this.OnAccountPreferenceIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPreferenceId = value;
					this.SendPropertyChanged("AccountPreferenceId");
					this.OnAccountPreferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPreferenceExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountPreferenceExternalId
		{
			get
			{
				return this._AccountPreferenceExternalId;
			}
			set
			{
				if ((this._AccountPreferenceExternalId != value))
				{
					this.OnAccountPreferenceExternalIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPreferenceExternalId = value;
					this.SendPropertyChanged("AccountPreferenceExternalId");
					this.OnAccountPreferenceExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(100)")]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskedNumber", DbType="NVarChar(19) NOT NULL", CanBeNull=false)]
		public string MaskedNumber
		{
			get
			{
				return this._MaskedNumber;
			}
			set
			{
				if ((this._MaskedNumber != value))
				{
					this.OnMaskedNumberChanging(value);
					this.SendPropertyChanging();
					this._MaskedNumber = value;
					this.SendPropertyChanged("MaskedNumber");
					this.OnMaskedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNo", DbType="NChar(3)")]
		public string IssueNo
		{
			get
			{
				return this._IssueNo;
			}
			set
			{
				if ((this._IssueNo != value))
				{
					this.OnIssueNoChanging(value);
					this.SendPropertyChanging();
					this._IssueNo = value;
					this.SendPropertyChanged("IssueNo");
					this.OnIssueNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCreditCard", DbType="Bit")]
		public System.Nullable<bool> IsCreditCard
		{
			get
			{
				return this._IsCreditCard;
			}
			set
			{
				if ((this._IsCreditCard != value))
				{
					this.OnIsCreditCardChanging(value);
					this.SendPropertyChanging();
					this._IsCreditCard = value;
					this.SendPropertyChanged("IsCreditCard");
					this.OnIsCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeactivatedOn
		{
			get
			{
				return this._DeactivatedOn;
			}
			set
			{
				if ((this._DeactivatedOn != value))
				{
					this.OnDeactivatedOnChanging(value);
					this.SendPropertyChanging();
					this._DeactivatedOn = value;
					this.SendPropertyChanged("DeactivatedOn");
					this.OnDeactivatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CardCreatedOn
		{
			get
			{
				return this._CardCreatedOn;
			}
			set
			{
				if ((this._CardCreatedOn != value))
				{
					this.OnCardCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CardCreatedOn = value;
					this.SendPropertyChanged("CardCreatedOn");
					this.OnCardCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCreatedBy", DbType="NVarChar(50)")]
		public string CardCreatedBy
		{
			get
			{
				return this._CardCreatedBy;
			}
			set
			{
				if ((this._CardCreatedBy != value))
				{
					this.OnCardCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CardCreatedBy = value;
					this.SendPropertyChanged("CardCreatedBy");
					this.OnCardCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PaymentCardHistoryItems")]
	public partial class PaymentCardHistoryItemEntity : DbEntity<PaymentCardHistoryItemEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardHistoryItemId;
		
		private int _OperationType;
		
		private int _UpdateType;
		
		private int _ActionPerformedBy;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _HistoryDataId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardHistoryItemIdChanging(int value);
    partial void OnPaymentCardHistoryItemIdChanged();
    partial void OnOperationTypeChanging(int value);
    partial void OnOperationTypeChanged();
    partial void OnUpdateTypeChanging(int value);
    partial void OnUpdateTypeChanged();
    partial void OnActionPerformedByChanging(int value);
    partial void OnActionPerformedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnHistoryDataIdChanging(System.Nullable<int> value);
    partial void OnHistoryDataIdChanged();
    #endregion
		
		public PaymentCardHistoryItemEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardHistoryItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentCardHistoryItemId
		{
			get
			{
				return this._PaymentCardHistoryItemId;
			}
			set
			{
				if ((this._PaymentCardHistoryItemId != value))
				{
					this.OnPaymentCardHistoryItemIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardHistoryItemId = value;
					this.SendPropertyChanged("PaymentCardHistoryItemId");
					this.OnPaymentCardHistoryItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationType", DbType="Int NOT NULL")]
		public int OperationType
		{
			get
			{
				return this._OperationType;
			}
			set
			{
				if ((this._OperationType != value))
				{
					this.OnOperationTypeChanging(value);
					this.SendPropertyChanging();
					this._OperationType = value;
					this.SendPropertyChanged("OperationType");
					this.OnOperationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateType", DbType="Int NOT NULL")]
		public int UpdateType
		{
			get
			{
				return this._UpdateType;
			}
			set
			{
				if ((this._UpdateType != value))
				{
					this.OnUpdateTypeChanging(value);
					this.SendPropertyChanging();
					this._UpdateType = value;
					this.SendPropertyChanged("UpdateType");
					this.OnUpdateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPerformedBy", DbType="Int NOT NULL")]
		public int ActionPerformedBy
		{
			get
			{
				return this._ActionPerformedBy;
			}
			set
			{
				if ((this._ActionPerformedBy != value))
				{
					this.OnActionPerformedByChanging(value);
					this.SendPropertyChanging();
					this._ActionPerformedBy = value;
					this.SendPropertyChanged("ActionPerformedBy");
					this.OnActionPerformedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryDataId", DbType="Int")]
		public System.Nullable<int> HistoryDataId
		{
			get
			{
				return this._HistoryDataId;
			}
			set
			{
				if ((this._HistoryDataId != value))
				{
					this.OnHistoryDataIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryDataId = value;
					this.SendPropertyChanged("HistoryDataId");
					this.OnHistoryDataIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PaymentCards")]
	public partial class PaymentCardEntity : DbEntity<PaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private string _Type;
		
		private string _HolderName;
		
		private string _MaskedNumber;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private string _IssueNo;
		
		private System.Nullable<bool> _IsCreditCard;
		
		private System.Nullable<System.DateTime> _DeactivatedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<System.DateTime> _AuthorizedOn;
		
		private System.DateTime _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<bool> _IsExternalCard;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<int> _DeactivateReason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardIdChanging(int value);
    partial void OnPaymentCardIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnMaskedNumberChanging(string value);
    partial void OnMaskedNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIssueNoChanging(string value);
    partial void OnIssueNoChanged();
    partial void OnIsCreditCardChanging(System.Nullable<bool> value);
    partial void OnIsCreditCardChanged();
    partial void OnDeactivatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeactivatedOnChanged();
    partial void OnDeletedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedOnChanged();
    partial void OnAuthorizedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthorizedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsExternalCardChanging(System.Nullable<bool> value);
    partial void OnIsExternalCardChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDeactivateReasonChanging(System.Nullable<int> value);
    partial void OnDeactivateReasonChanged();
    #endregion
		
		public PaymentCardEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskedNumber", DbType="NVarChar(19) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MaskedNumber
		{
			get
			{
				return this._MaskedNumber;
			}
			set
			{
				if ((this._MaskedNumber != value))
				{
					this.OnMaskedNumberChanging(value);
					this.SendPropertyChanging();
					this._MaskedNumber = value;
					this.SendPropertyChanged("MaskedNumber");
					this.OnMaskedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNo", DbType="NChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string IssueNo
		{
			get
			{
				return this._IssueNo;
			}
			set
			{
				if ((this._IssueNo != value))
				{
					this.OnIssueNoChanging(value);
					this.SendPropertyChanging();
					this._IssueNo = value;
					this.SendPropertyChanged("IssueNo");
					this.OnIssueNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCreditCard", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCreditCard
		{
			get
			{
				return this._IsCreditCard;
			}
			set
			{
				if ((this._IsCreditCard != value))
				{
					this.OnIsCreditCardChanging(value);
					this.SendPropertyChanging();
					this._IsCreditCard = value;
					this.SendPropertyChanged("IsCreditCard");
					this.OnIsCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeactivatedOn
		{
			get
			{
				return this._DeactivatedOn;
			}
			set
			{
				if ((this._DeactivatedOn != value))
				{
					this.OnDeactivatedOnChanging(value);
					this.SendPropertyChanging();
					this._DeactivatedOn = value;
					this.SendPropertyChanged("DeactivatedOn");
					this.OnDeactivatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this.OnDeletedOnChanging(value);
					this.SendPropertyChanging();
					this._DeletedOn = value;
					this.SendPropertyChanged("DeletedOn");
					this.OnDeletedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AuthorizedOn
		{
			get
			{
				return this._AuthorizedOn;
			}
			set
			{
				if ((this._AuthorizedOn != value))
				{
					this.OnAuthorizedOnChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedOn = value;
					this.SendPropertyChanged("AuthorizedOn");
					this.OnAuthorizedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternalCard", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsExternalCard
		{
			get
			{
				return this._IsExternalCard;
			}
			set
			{
				if ((this._IsExternalCard != value))
				{
					this.OnIsExternalCardChanging(value);
					this.SendPropertyChanging();
					this._IsExternalCard = value;
					this.SendPropertyChanged("IsExternalCard");
					this.OnIsExternalCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivateReason", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DeactivateReason
		{
			get
			{
				return this._DeactivateReason;
			}
			set
			{
				if ((this._DeactivateReason != value))
				{
					this.OnDeactivateReasonChanging(value);
					this.SendPropertyChanging();
					this._DeactivateReason = value;
					this.SendPropertyChanged("DeactivateReason");
					this.OnDeactivateReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PaymentCardsBase")]
	public partial class PaymentCardsBaseEntity : DbEntity<PaymentCardsBaseEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardId;
		
		private System.Guid _ExternalId;
		
		private string _Type;
		
		private string _HolderName;
		
		private string _MaskedNumber;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.DateTime _ExpiryDate;
		
		private string _IssueNo;
		
		private System.Nullable<bool> _IsCreditCard;
		
		private System.Nullable<System.DateTime> _DeactivatedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<System.DateTime> _AuthorizedOn;
		
		private System.DateTime _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<bool> _IsExternalCard;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<int> _DeactivateReason;
		
		private EntitySet<AccountPreferenceEntity> _Payment_AccountPreferences;
		
		private EntityRef<BusinessPaymentCardEntity> _BusinessPaymentCardEntity;
		
		private EntityRef<PersonalPaymentCardEntity> _PersonalPaymentCardEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardIdChanging(int value);
    partial void OnPaymentCardIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnMaskedNumberChanging(string value);
    partial void OnMaskedNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIssueNoChanging(string value);
    partial void OnIssueNoChanged();
    partial void OnIsCreditCardChanging(System.Nullable<bool> value);
    partial void OnIsCreditCardChanged();
    partial void OnDeactivatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeactivatedOnChanged();
    partial void OnDeletedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedOnChanged();
    partial void OnAuthorizedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthorizedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsExternalCardChanging(System.Nullable<bool> value);
    partial void OnIsExternalCardChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDeactivateReasonChanging(System.Nullable<int> value);
    partial void OnDeactivateReasonChanged();
    #endregion
		
		public PaymentCardsBaseEntity()
		{
			this._Payment_AccountPreferences = new EntitySet<AccountPreferenceEntity>(new Action<AccountPreferenceEntity>(this.attach_Payment_AccountPreferences), new Action<AccountPreferenceEntity>(this.detach_Payment_AccountPreferences));
			this._BusinessPaymentCardEntity = default(EntityRef<BusinessPaymentCardEntity>);
			this._PersonalPaymentCardEntity = default(EntityRef<PersonalPaymentCardEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskedNumber", DbType="NVarChar(19) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MaskedNumber
		{
			get
			{
				return this._MaskedNumber;
			}
			set
			{
				if ((this._MaskedNumber != value))
				{
					this.OnMaskedNumberChanging(value);
					this.SendPropertyChanging();
					this._MaskedNumber = value;
					this.SendPropertyChanged("MaskedNumber");
					this.OnMaskedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNo", DbType="NChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string IssueNo
		{
			get
			{
				return this._IssueNo;
			}
			set
			{
				if ((this._IssueNo != value))
				{
					this.OnIssueNoChanging(value);
					this.SendPropertyChanging();
					this._IssueNo = value;
					this.SendPropertyChanged("IssueNo");
					this.OnIssueNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCreditCard", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCreditCard
		{
			get
			{
				return this._IsCreditCard;
			}
			set
			{
				if ((this._IsCreditCard != value))
				{
					this.OnIsCreditCardChanging(value);
					this.SendPropertyChanging();
					this._IsCreditCard = value;
					this.SendPropertyChanged("IsCreditCard");
					this.OnIsCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeactivatedOn
		{
			get
			{
				return this._DeactivatedOn;
			}
			set
			{
				if ((this._DeactivatedOn != value))
				{
					this.OnDeactivatedOnChanging(value);
					this.SendPropertyChanging();
					this._DeactivatedOn = value;
					this.SendPropertyChanged("DeactivatedOn");
					this.OnDeactivatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this.OnDeletedOnChanging(value);
					this.SendPropertyChanging();
					this._DeletedOn = value;
					this.SendPropertyChanged("DeletedOn");
					this.OnDeletedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AuthorizedOn
		{
			get
			{
				return this._AuthorizedOn;
			}
			set
			{
				if ((this._AuthorizedOn != value))
				{
					this.OnAuthorizedOnChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedOn = value;
					this.SendPropertyChanged("AuthorizedOn");
					this.OnAuthorizedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternalCard", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsExternalCard
		{
			get
			{
				return this._IsExternalCard;
			}
			set
			{
				if ((this._IsExternalCard != value))
				{
					this.OnIsExternalCardChanging(value);
					this.SendPropertyChanging();
					this._IsExternalCard = value;
					this.SendPropertyChanged("IsExternalCard");
					this.OnIsExternalCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivateReason", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DeactivateReason
		{
			get
			{
				return this._DeactivateReason;
			}
			set
			{
				if ((this._DeactivateReason != value))
				{
					this.OnDeactivateReasonChanging(value);
					this.SendPropertyChanging();
					this._DeactivateReason = value;
					this.SendPropertyChanged("DeactivateReason");
					this.OnDeactivateReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AccountPreferences_PaymentCardsBase", Storage="_Payment_AccountPreferences", ThisKey="PaymentCardId", OtherKey="PrimaryPaymentCardId", DeleteRule="NO ACTION")]
		public EntitySet<AccountPreferenceEntity> Payment_AccountPreferences
		{
			get
			{
				return this._Payment_AccountPreferences;
			}
			set
			{
				this._Payment_AccountPreferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BusinessPaymentCards_PaymentCardsBase", Storage="_BusinessPaymentCardEntity", ThisKey="PaymentCardId", OtherKey="PaymentCardId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public BusinessPaymentCardEntity BusinessPaymentCardEntity
		{
			get
			{
				return this._BusinessPaymentCardEntity.Entity;
			}
			set
			{
				BusinessPaymentCardEntity previousValue = this._BusinessPaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessPaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessPaymentCardEntity.Entity = null;
						previousValue.PaymentCardsBaseEntity = null;
					}
					this._BusinessPaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.PaymentCardsBaseEntity = this;
					}
					this.SendPropertyChanged("BusinessPaymentCardEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PersonalPaymentCards_PaymentCardsBase", Storage="_PersonalPaymentCardEntity", ThisKey="PaymentCardId", OtherKey="PaymentCardId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public PersonalPaymentCardEntity PersonalPaymentCardEntity
		{
			get
			{
				return this._PersonalPaymentCardEntity.Entity;
			}
			set
			{
				PersonalPaymentCardEntity previousValue = this._PersonalPaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PersonalPaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalPaymentCardEntity.Entity = null;
						previousValue.PaymentCardsBaseEntity = null;
					}
					this._PersonalPaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.PaymentCardsBaseEntity = this;
					}
					this.SendPropertyChanged("PersonalPaymentCardEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_AccountPreferences(AccountPreferenceEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardsBaseEntity = this;
		}
		
		private void detach_Payment_AccountPreferences(AccountPreferenceEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardsBaseEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PaymentPlan")]
	public partial class PaymentPlanEntity : DbEntity<PaymentPlanEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentPlanId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private string _DayOfWeek;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private decimal _RegularAmount;
		
		private decimal _FinalAmount;
		
		private string _Frequency;
		
		private int _NumberOfPayments;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _CanceledOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentPlanIdChanging(int value);
    partial void OnPaymentPlanIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnDayOfWeekChanging(string value);
    partial void OnDayOfWeekChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnRegularAmountChanging(decimal value);
    partial void OnRegularAmountChanged();
    partial void OnFinalAmountChanging(decimal value);
    partial void OnFinalAmountChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnNumberOfPaymentsChanging(int value);
    partial void OnNumberOfPaymentsChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCanceledOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCanceledOnChanged();
    #endregion
		
		public PaymentPlanEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentPlanId
		{
			get
			{
				return this._PaymentPlanId;
			}
			set
			{
				if ((this._PaymentPlanId != value))
				{
					this.OnPaymentPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanId = value;
					this.SendPropertyChanged("PaymentPlanId");
					this.OnPaymentPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal RegularAmount
		{
			get
			{
				return this._RegularAmount;
			}
			set
			{
				if ((this._RegularAmount != value))
				{
					this.OnRegularAmountChanging(value);
					this.SendPropertyChanging();
					this._RegularAmount = value;
					this.SendPropertyChanged("RegularAmount");
					this.OnRegularAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FinalAmount
		{
			get
			{
				return this._FinalAmount;
			}
			set
			{
				if ((this._FinalAmount != value))
				{
					this.OnFinalAmountChanging(value);
					this.SendPropertyChanging();
					this._FinalAmount = value;
					this.SendPropertyChanged("FinalAmount");
					this.OnFinalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPayments", DbType="Int NOT NULL")]
		public int NumberOfPayments
		{
			get
			{
				return this._NumberOfPayments;
			}
			set
			{
				if ((this._NumberOfPayments != value))
				{
					this.OnNumberOfPaymentsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPayments = value;
					this.SendPropertyChanged("NumberOfPayments");
					this.OnNumberOfPaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanceledOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CanceledOn
		{
			get
			{
				return this._CanceledOn;
			}
			set
			{
				if ((this._CanceledOn != value))
				{
					this.OnCanceledOnChanging(value);
					this.SendPropertyChanging();
					this._CanceledOn = value;
					this.SendPropertyChanged("CanceledOn");
					this.OnCanceledOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PersonalBankAccounts")]
	public partial class PersonalBankAccountEntity : DbEntity<PersonalBankAccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountId;
		
		private System.Guid _AccountId;
		
		private EntityRef<BankAccountsBaseEntity> _BankAccountsBaseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountIdChanging(int value);
    partial void OnBankAccountIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    #endregion
		
		public PersonalBankAccountEntity()
		{
			this._BankAccountsBaseEntity = default(EntityRef<BankAccountsBaseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PersonalB__BankA__0A9D95DB", Storage="_BankAccountsBaseEntity", ThisKey="BankAccountId", OtherKey="BankAccountId", IsForeignKey=true)]
		public BankAccountsBaseEntity BankAccountsBaseEntity
		{
			get
			{
				return this._BankAccountsBaseEntity.Entity;
			}
			set
			{
				BankAccountsBaseEntity previousValue = this._BankAccountsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountsBaseEntity.Entity = null;
						previousValue.PersonalBankAccountEntity = null;
					}
					this._BankAccountsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.PersonalBankAccountEntity = this;
						this._BankAccountId = value.BankAccountId;
					}
					else
					{
						this._BankAccountId = default(int);
					}
					this.SendPropertyChanged("BankAccountsBaseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PersonalPaymentCards")]
	public partial class PersonalPaymentCardEntity : DbEntity<PersonalPaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardId;
		
		private System.Guid _AccountId;
		
		private EntityRef<PaymentCardsBaseEntity> _PaymentCardsBaseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardIdChanging(int value);
    partial void OnPaymentCardIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    #endregion
		
		public PersonalPaymentCardEntity()
		{
			this._PaymentCardsBaseEntity = default(EntityRef<PaymentCardsBaseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					if (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PersonalPaymentCards_PaymentCardsBase", Storage="_PaymentCardsBaseEntity", ThisKey="PaymentCardId", OtherKey="PaymentCardId", IsForeignKey=true)]
		public PaymentCardsBaseEntity PaymentCardsBaseEntity
		{
			get
			{
				return this._PaymentCardsBaseEntity.Entity;
			}
			set
			{
				PaymentCardsBaseEntity previousValue = this._PaymentCardsBaseEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardsBaseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardsBaseEntity.Entity = null;
						previousValue.PersonalPaymentCardEntity = null;
					}
					this._PaymentCardsBaseEntity.Entity = value;
					if ((value != null))
					{
						value.PersonalPaymentCardEntity = this;
						this._PaymentCardId = value.PaymentCardId;
					}
					else
					{
						this._PaymentCardId = default(int);
					}
					this.SendPropertyChanged("PaymentCardsBaseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.ProductInterestRates")]
	public partial class ProductInterestRateEntity : DbEntity<ProductInterestRateEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductInterestRateId;
		
		private int _ProductId;
		
		private string _Description;
		
		private decimal _MonthlyInterestRate;
		
		private int _InterestType;
		
		private System.Nullable<int> _LoanDayStart;
		
		private System.Nullable<int> _LoanDayEnd;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductInterestRateIdChanging(int value);
    partial void OnProductInterestRateIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMonthlyInterestRateChanging(decimal value);
    partial void OnMonthlyInterestRateChanged();
    partial void OnInterestTypeChanging(int value);
    partial void OnInterestTypeChanged();
    partial void OnLoanDayStartChanging(System.Nullable<int> value);
    partial void OnLoanDayStartChanged();
    partial void OnLoanDayEndChanging(System.Nullable<int> value);
    partial void OnLoanDayEndChanged();
    #endregion
		
		public ProductInterestRateEntity()
		{
			this._ProductEntity = default(EntityRef<ProductEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductInterestRateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductInterestRateId
		{
			get
			{
				return this._ProductInterestRateId;
			}
			set
			{
				if ((this._ProductInterestRateId != value))
				{
					this.OnProductInterestRateIdChanging(value);
					this.SendPropertyChanging();
					this._ProductInterestRateId = value;
					this.SendPropertyChanged("ProductInterestRateId");
					this.OnProductInterestRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyInterestRate", DbType="Decimal(9,6) NOT NULL")]
		public decimal MonthlyInterestRate
		{
			get
			{
				return this._MonthlyInterestRate;
			}
			set
			{
				if ((this._MonthlyInterestRate != value))
				{
					this.OnMonthlyInterestRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyInterestRate = value;
					this.SendPropertyChanged("MonthlyInterestRate");
					this.OnMonthlyInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestType", DbType="Int NOT NULL")]
		public int InterestType
		{
			get
			{
				return this._InterestType;
			}
			set
			{
				if ((this._InterestType != value))
				{
					this.OnInterestTypeChanging(value);
					this.SendPropertyChanging();
					this._InterestType = value;
					this.SendPropertyChanged("InterestType");
					this.OnInterestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDayStart", DbType="Int")]
		public System.Nullable<int> LoanDayStart
		{
			get
			{
				return this._LoanDayStart;
			}
			set
			{
				if ((this._LoanDayStart != value))
				{
					this.OnLoanDayStartChanging(value);
					this.SendPropertyChanging();
					this._LoanDayStart = value;
					this.SendPropertyChanged("LoanDayStart");
					this.OnLoanDayStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDayEnd", DbType="Int")]
		public System.Nullable<int> LoanDayEnd
		{
			get
			{
				return this._LoanDayEnd;
			}
			set
			{
				if ((this._LoanDayEnd != value))
				{
					this.OnLoanDayEndChanging(value);
					this.SendPropertyChanging();
					this._LoanDayEnd = value;
					this.SendPropertyChanged("LoanDayEnd");
					this.OnLoanDayEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProductInterestRates_Products", Storage="_ProductEntity", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.Payment_ProductInterestRates.Remove(this);
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_ProductInterestRates.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Products")]
	public partial class ProductEntity : DbEntity<ProductEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private string _Name;
		
		private decimal _AmountMin;
		
		private decimal _AmountMax;
		
		private decimal _TransmissionFee;
		
		private int _TermMin;
		
		private int _TermMax;
		
		private decimal _MonthlyInterestRate;
		
		private bool _NeedSignTAndC;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<decimal> _ServiceFee;
		
		private EntitySet<ApplicationEntity> _Payment_Applications;
		
		private EntitySet<ProductInterestRateEntity> _Payment_ProductInterestRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountMinChanging(decimal value);
    partial void OnAmountMinChanged();
    partial void OnAmountMaxChanging(decimal value);
    partial void OnAmountMaxChanged();
    partial void OnTransmissionFeeChanging(decimal value);
    partial void OnTransmissionFeeChanged();
    partial void OnTermMinChanging(int value);
    partial void OnTermMinChanged();
    partial void OnTermMaxChanging(int value);
    partial void OnTermMaxChanged();
    partial void OnMonthlyInterestRateChanging(decimal value);
    partial void OnMonthlyInterestRateChanged();
    partial void OnNeedSignTAndCChanging(bool value);
    partial void OnNeedSignTAndCChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnServiceFeeChanging(System.Nullable<decimal> value);
    partial void OnServiceFeeChanged();
    #endregion
		
		public ProductEntity()
		{
			this._Payment_Applications = new EntitySet<ApplicationEntity>(new Action<ApplicationEntity>(this.attach_Payment_Applications), new Action<ApplicationEntity>(this.detach_Payment_Applications));
			this._Payment_ProductInterestRates = new EntitySet<ProductInterestRateEntity>(new Action<ProductInterestRateEntity>(this.attach_Payment_ProductInterestRates), new Action<ProductInterestRateEntity>(this.detach_Payment_ProductInterestRates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMin", DbType="Decimal(9,2) NOT NULL")]
		public decimal AmountMin
		{
			get
			{
				return this._AmountMin;
			}
			set
			{
				if ((this._AmountMin != value))
				{
					this.OnAmountMinChanging(value);
					this.SendPropertyChanging();
					this._AmountMin = value;
					this.SendPropertyChanged("AmountMin");
					this.OnAmountMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountMax", DbType="Decimal(9,2) NOT NULL")]
		public decimal AmountMax
		{
			get
			{
				return this._AmountMax;
			}
			set
			{
				if ((this._AmountMax != value))
				{
					this.OnAmountMaxChanging(value);
					this.SendPropertyChanging();
					this._AmountMax = value;
					this.SendPropertyChanged("AmountMax");
					this.OnAmountMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransmissionFee", DbType="Decimal(9,2) NOT NULL")]
		public decimal TransmissionFee
		{
			get
			{
				return this._TransmissionFee;
			}
			set
			{
				if ((this._TransmissionFee != value))
				{
					this.OnTransmissionFeeChanging(value);
					this.SendPropertyChanging();
					this._TransmissionFee = value;
					this.SendPropertyChanged("TransmissionFee");
					this.OnTransmissionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermMin", DbType="Int NOT NULL")]
		public int TermMin
		{
			get
			{
				return this._TermMin;
			}
			set
			{
				if ((this._TermMin != value))
				{
					this.OnTermMinChanging(value);
					this.SendPropertyChanging();
					this._TermMin = value;
					this.SendPropertyChanged("TermMin");
					this.OnTermMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermMax", DbType="Int NOT NULL")]
		public int TermMax
		{
			get
			{
				return this._TermMax;
			}
			set
			{
				if ((this._TermMax != value))
				{
					this.OnTermMaxChanging(value);
					this.SendPropertyChanging();
					this._TermMax = value;
					this.SendPropertyChanged("TermMax");
					this.OnTermMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyInterestRate", DbType="Decimal(9,6) NOT NULL")]
		public decimal MonthlyInterestRate
		{
			get
			{
				return this._MonthlyInterestRate;
			}
			set
			{
				if ((this._MonthlyInterestRate != value))
				{
					this.OnMonthlyInterestRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyInterestRate = value;
					this.SendPropertyChanged("MonthlyInterestRate");
					this.OnMonthlyInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedSignTAndC", DbType="Bit NOT NULL")]
		public bool NeedSignTAndC
		{
			get
			{
				return this._NeedSignTAndC;
			}
			set
			{
				if ((this._NeedSignTAndC != value))
				{
					this.OnNeedSignTAndCChanging(value);
					this.SendPropertyChanging();
					this._NeedSignTAndC = value;
					this.SendPropertyChanged("NeedSignTAndC");
					this.OnNeedSignTAndCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceFee", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ServiceFee
		{
			get
			{
				return this._ServiceFee;
			}
			set
			{
				if ((this._ServiceFee != value))
				{
					this.OnServiceFeeChanging(value);
					this.SendPropertyChanging();
					this._ServiceFee = value;
					this.SendPropertyChanged("ServiceFee");
					this.OnServiceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Applications_Products", Storage="_Payment_Applications", ThisKey="ProductId", OtherKey="ProductId", DeleteRule="NO ACTION")]
		public EntitySet<ApplicationEntity> Payment_Applications
		{
			get
			{
				return this._Payment_Applications;
			}
			set
			{
				this._Payment_Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProductInterestRates_Products", Storage="_Payment_ProductInterestRates", ThisKey="ProductId", OtherKey="ProductId", DeleteRule="NO ACTION")]
		public EntitySet<ProductInterestRateEntity> Payment_ProductInterestRates
		{
			get
			{
				return this._Payment_ProductInterestRates;
			}
			set
			{
				this._Payment_ProductInterestRates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_Applications(ApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = this;
		}
		
		private void detach_Payment_Applications(ApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = null;
		}
		
		private void attach_Payment_ProductInterestRates(ProductInterestRateEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = this;
		}
		
		private void detach_Payment_ProductInterestRates(ProductInterestRateEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PromoCampaigns")]
	public partial class PromoCampaignEntity : DbEntity<PromoCampaignEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromoCampaignId;
		
		private System.Guid _ExternalId;
		
		private string _CampaignName;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private decimal _InterestDiscount;
		
		private decimal _TransferFeeDiscount;
		
		private decimal _Reward;
		
		private string _Comments;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private EntitySet<PromoCodeEntity> _Payment_PromoCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCampaignIdChanging(int value);
    partial void OnPromoCampaignIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnInterestDiscountChanging(decimal value);
    partial void OnInterestDiscountChanged();
    partial void OnTransferFeeDiscountChanging(decimal value);
    partial void OnTransferFeeDiscountChanged();
    partial void OnRewardChanging(decimal value);
    partial void OnRewardChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public PromoCampaignEntity()
		{
			this._Payment_PromoCodes = new EntitySet<PromoCodeEntity>(new Action<PromoCodeEntity>(this.attach_Payment_PromoCodes), new Action<PromoCodeEntity>(this.detach_Payment_PromoCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCampaignId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromoCampaignId
		{
			get
			{
				return this._PromoCampaignId;
			}
			set
			{
				if ((this._PromoCampaignId != value))
				{
					this.OnPromoCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCampaignId = value;
					this.SendPropertyChanged("PromoCampaignId");
					this.OnPromoCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampaignName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestDiscount", DbType="Decimal(9,2) NOT NULL")]
		public decimal InterestDiscount
		{
			get
			{
				return this._InterestDiscount;
			}
			set
			{
				if ((this._InterestDiscount != value))
				{
					this.OnInterestDiscountChanging(value);
					this.SendPropertyChanging();
					this._InterestDiscount = value;
					this.SendPropertyChanged("InterestDiscount");
					this.OnInterestDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFeeDiscount", DbType="Decimal(9,2) NOT NULL")]
		public decimal TransferFeeDiscount
		{
			get
			{
				return this._TransferFeeDiscount;
			}
			set
			{
				if ((this._TransferFeeDiscount != value))
				{
					this.OnTransferFeeDiscountChanging(value);
					this.SendPropertyChanging();
					this._TransferFeeDiscount = value;
					this.SendPropertyChanged("TransferFeeDiscount");
					this.OnTransferFeeDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reward", DbType="Decimal(9,2) NOT NULL")]
		public decimal Reward
		{
			get
			{
				return this._Reward;
			}
			set
			{
				if ((this._Reward != value))
				{
					this.OnRewardChanging(value);
					this.SendPropertyChanging();
					this._Reward = value;
					this.SendPropertyChanged("Reward");
					this.OnRewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(256)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodes_PromoCampaigns", Storage="_Payment_PromoCodes", ThisKey="PromoCampaignId", OtherKey="PromoCampaignId", DeleteRule="NO ACTION")]
		public EntitySet<PromoCodeEntity> Payment_PromoCodes
		{
			get
			{
				return this._Payment_PromoCodes;
			}
			set
			{
				this._Payment_PromoCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_PromoCodes(PromoCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCampaignEntity = this;
		}
		
		private void detach_Payment_PromoCodes(PromoCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCampaignEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PromoCodes")]
	public partial class PromoCodeEntity : DbEntity<PromoCodeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromoCodeId;
		
		private System.Guid _ExternalId;
		
		private int _PromoCampaignId;
		
		private string _Code;
		
		private System.Nullable<System.Guid> _AccountId;
		
		private bool _IsActive;
		
		private System.Nullable<int> _CustomerTypeRangeKind;
		
		private string _CustomerTypeRangeItems;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _AffiliateId;
		
		private System.Nullable<System.Guid> _OwnerAccountId;
		
		private EntityRef<AffiliateEntity> _AffiliateEntity;
		
		private EntityRef<PromoCampaignEntity> _PromoCampaignEntity;
		
		private EntitySet<PromoCodesUsageEntity> _Payment_PromoCodesUsages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCodeIdChanging(int value);
    partial void OnPromoCodeIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnPromoCampaignIdChanging(int value);
    partial void OnPromoCampaignIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAccountIdChanging(System.Nullable<System.Guid> value);
    partial void OnAccountIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCustomerTypeRangeKindChanging(System.Nullable<int> value);
    partial void OnCustomerTypeRangeKindChanged();
    partial void OnCustomerTypeRangeItemsChanging(string value);
    partial void OnCustomerTypeRangeItemsChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnOwnerAccountIdChanging(System.Nullable<System.Guid> value);
    partial void OnOwnerAccountIdChanged();
    #endregion
		
		public PromoCodeEntity()
		{
			this._AffiliateEntity = default(EntityRef<AffiliateEntity>);
			this._PromoCampaignEntity = default(EntityRef<PromoCampaignEntity>);
			this._Payment_PromoCodesUsages = new EntitySet<PromoCodesUsageEntity>(new Action<PromoCodesUsageEntity>(this.attach_Payment_PromoCodesUsages), new Action<PromoCodesUsageEntity>(this.detach_Payment_PromoCodesUsages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromoCodeId
		{
			get
			{
				return this._PromoCodeId;
			}
			set
			{
				if ((this._PromoCodeId != value))
				{
					this.OnPromoCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeId = value;
					this.SendPropertyChanged("PromoCodeId");
					this.OnPromoCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCampaignId", DbType="Int NOT NULL")]
		public int PromoCampaignId
		{
			get
			{
				return this._PromoCampaignId;
			}
			set
			{
				if ((this._PromoCampaignId != value))
				{
					if (this._PromoCampaignEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromoCampaignIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCampaignId = value;
					this.SendPropertyChanged("PromoCampaignId");
					this.OnPromoCampaignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeRangeKind", DbType="Int")]
		public System.Nullable<int> CustomerTypeRangeKind
		{
			get
			{
				return this._CustomerTypeRangeKind;
			}
			set
			{
				if ((this._CustomerTypeRangeKind != value))
				{
					this.OnCustomerTypeRangeKindChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeRangeKind = value;
					this.SendPropertyChanged("CustomerTypeRangeKind");
					this.OnCustomerTypeRangeKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeRangeItems", DbType="NVarChar(500)")]
		public string CustomerTypeRangeItems
		{
			get
			{
				return this._CustomerTypeRangeItems;
			}
			set
			{
				if ((this._CustomerTypeRangeItems != value))
				{
					this.OnCustomerTypeRangeItemsChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeRangeItems = value;
					this.SendPropertyChanged("CustomerTypeRangeItems");
					this.OnCustomerTypeRangeItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					if (this._AffiliateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodes_Affiliates", Storage="_AffiliateEntity", ThisKey="AffiliateId", OtherKey="AffiliateId", IsForeignKey=true)]
		public AffiliateEntity AffiliateEntity
		{
			get
			{
				return this._AffiliateEntity.Entity;
			}
			set
			{
				AffiliateEntity previousValue = this._AffiliateEntity.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateEntity.Entity = null;
						previousValue.Payment_PromoCodes.Remove(this);
					}
					this._AffiliateEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_PromoCodes.Add(this);
						this._AffiliateId = value.AffiliateId;
					}
					else
					{
						this._AffiliateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AffiliateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodes_PromoCampaigns", Storage="_PromoCampaignEntity", ThisKey="PromoCampaignId", OtherKey="PromoCampaignId", IsForeignKey=true)]
		public PromoCampaignEntity PromoCampaignEntity
		{
			get
			{
				return this._PromoCampaignEntity.Entity;
			}
			set
			{
				PromoCampaignEntity previousValue = this._PromoCampaignEntity.Entity;
				if (((previousValue != value) 
							|| (this._PromoCampaignEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromoCampaignEntity.Entity = null;
						previousValue.Payment_PromoCodes.Remove(this);
					}
					this._PromoCampaignEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_PromoCodes.Add(this);
						this._PromoCampaignId = value.PromoCampaignId;
					}
					else
					{
						this._PromoCampaignId = default(int);
					}
					this.SendPropertyChanged("PromoCampaignEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodesUsage_PromoCodes", Storage="_Payment_PromoCodesUsages", ThisKey="PromoCodeId", OtherKey="PromoCodeId", DeleteRule="NO ACTION")]
		public EntitySet<PromoCodesUsageEntity> Payment_PromoCodesUsages
		{
			get
			{
				return this._Payment_PromoCodesUsages;
			}
			set
			{
				this._Payment_PromoCodesUsages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_PromoCodesUsages(PromoCodesUsageEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCodeEntity = this;
		}
		
		private void detach_Payment_PromoCodesUsages(PromoCodesUsageEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCodeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.PromoCodesUsage")]
	public partial class PromoCodesUsageEntity : DbEntity<PromoCodesUsageEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromoCodesUsageId;
		
		private int _PromoCodeId;
		
		private System.Guid _AccountId;
		
		private System.DateTime _UsageDate;
		
		private EntityRef<PromoCodeEntity> _PromoCodeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCodesUsageIdChanging(int value);
    partial void OnPromoCodesUsageIdChanged();
    partial void OnPromoCodeIdChanging(int value);
    partial void OnPromoCodeIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnUsageDateChanging(System.DateTime value);
    partial void OnUsageDateChanged();
    #endregion
		
		public PromoCodesUsageEntity()
		{
			this._PromoCodeEntity = default(EntityRef<PromoCodeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodesUsageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromoCodesUsageId
		{
			get
			{
				return this._PromoCodesUsageId;
			}
			set
			{
				if ((this._PromoCodesUsageId != value))
				{
					this.OnPromoCodesUsageIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCodesUsageId = value;
					this.SendPropertyChanged("PromoCodesUsageId");
					this.OnPromoCodesUsageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeId", DbType="Int NOT NULL")]
		public int PromoCodeId
		{
			get
			{
				return this._PromoCodeId;
			}
			set
			{
				if ((this._PromoCodeId != value))
				{
					if (this._PromoCodeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromoCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeId = value;
					this.SendPropertyChanged("PromoCodeId");
					this.OnPromoCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageDate", DbType="DateTime NOT NULL")]
		public System.DateTime UsageDate
		{
			get
			{
				return this._UsageDate;
			}
			set
			{
				if ((this._UsageDate != value))
				{
					this.OnUsageDateChanging(value);
					this.SendPropertyChanging();
					this._UsageDate = value;
					this.SendPropertyChanged("UsageDate");
					this.OnUsageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PromoCodesUsage_PromoCodes", Storage="_PromoCodeEntity", ThisKey="PromoCodeId", OtherKey="PromoCodeId", IsForeignKey=true)]
		public PromoCodeEntity PromoCodeEntity
		{
			get
			{
				return this._PromoCodeEntity.Entity;
			}
			set
			{
				PromoCodeEntity previousValue = this._PromoCodeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PromoCodeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromoCodeEntity.Entity = null;
						previousValue.Payment_PromoCodesUsages.Remove(this);
					}
					this._PromoCodeEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_PromoCodesUsages.Add(this);
						this._PromoCodeId = value.PromoCodeId;
					}
					else
					{
						this._PromoCodeId = default(int);
					}
					this.SendPropertyChanged("PromoCodeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.RepaymentArrangementDetails")]
	public partial class RepaymentArrangementDetailEntity : DbEntity<RepaymentArrangementDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentArrangementDetailId;
		
		private int _RepaymentArrangementId;
		
		private System.Guid _ExternalId;
		
		private decimal _Amount;
		
		private int _Currency;
		
		private System.DateTime _DueDate;
		
		private System.Nullable<System.DateTime> _PaymentRecievedOn;
		
		private System.DateTime _CreatedOn;
		
		private decimal _AmountPaid;
		
		private System.Nullable<int> _TrackingDays;
		
		private EntityRef<RepaymentArrangementEntity> _RepaymentArrangementEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentArrangementDetailIdChanging(int value);
    partial void OnRepaymentArrangementDetailIdChanged();
    partial void OnRepaymentArrangementIdChanging(int value);
    partial void OnRepaymentArrangementIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnPaymentRecievedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentRecievedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnTrackingDaysChanging(System.Nullable<int> value);
    partial void OnTrackingDaysChanged();
    #endregion
		
		public RepaymentArrangementDetailEntity()
		{
			this._RepaymentArrangementEntity = default(EntityRef<RepaymentArrangementEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentArrangementDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentArrangementDetailId
		{
			get
			{
				return this._RepaymentArrangementDetailId;
			}
			set
			{
				if ((this._RepaymentArrangementDetailId != value))
				{
					this.OnRepaymentArrangementDetailIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentArrangementDetailId = value;
					this.SendPropertyChanged("RepaymentArrangementDetailId");
					this.OnRepaymentArrangementDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentArrangementId", DbType="Int NOT NULL")]
		public int RepaymentArrangementId
		{
			get
			{
				return this._RepaymentArrangementId;
			}
			set
			{
				if ((this._RepaymentArrangementId != value))
				{
					if (this._RepaymentArrangementEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentArrangementIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentArrangementId = value;
					this.SendPropertyChanged("RepaymentArrangementId");
					this.OnRepaymentArrangementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRecievedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentRecievedOn
		{
			get
			{
				return this._PaymentRecievedOn;
			}
			set
			{
				if ((this._PaymentRecievedOn != value))
				{
					this.OnPaymentRecievedOnChanging(value);
					this.SendPropertyChanging();
					this._PaymentRecievedOn = value;
					this.SendPropertyChanged("PaymentRecievedOn");
					this.OnPaymentRecievedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(9,2) NOT NULL")]
		public decimal AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDays", DbType="Int")]
		public System.Nullable<int> TrackingDays
		{
			get
			{
				return this._TrackingDays;
			}
			set
			{
				if ((this._TrackingDays != value))
				{
					this.OnTrackingDaysChanging(value);
					this.SendPropertyChanging();
					this._TrackingDays = value;
					this.SendPropertyChanged("TrackingDays");
					this.OnTrackingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentArrangementDetails_RepaymentArrangements", Storage="_RepaymentArrangementEntity", ThisKey="RepaymentArrangementId", OtherKey="RepaymentArrangementId", IsForeignKey=true)]
		public RepaymentArrangementEntity RepaymentArrangementEntity
		{
			get
			{
				return this._RepaymentArrangementEntity.Entity;
			}
			set
			{
				RepaymentArrangementEntity previousValue = this._RepaymentArrangementEntity.Entity;
				if (((previousValue != value) 
							|| (this._RepaymentArrangementEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepaymentArrangementEntity.Entity = null;
						previousValue.Payment_RepaymentArrangementDetails.Remove(this);
					}
					this._RepaymentArrangementEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_RepaymentArrangementDetails.Add(this);
						this._RepaymentArrangementId = value.RepaymentArrangementId;
					}
					else
					{
						this._RepaymentArrangementId = default(int);
					}
					this.SendPropertyChanged("RepaymentArrangementEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.RepaymentArrangements")]
	public partial class RepaymentArrangementEntity : DbEntity<RepaymentArrangementEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentArrangementId;
		
		private System.Guid _ExternalId;
		
		private int _AccountPreferenceId;
		
		private System.Nullable<int> _ApplicationId;
		
		private System.Nullable<System.DateTime> _ClosedOn;
		
		private System.Nullable<bool> _IsBroken;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private System.Nullable<System.DateTime> _CanceledOn;
		
		private EntitySet<RepaymentArrangementDetailEntity> _Payment_RepaymentArrangementDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentArrangementIdChanging(int value);
    partial void OnRepaymentArrangementIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountPreferenceIdChanging(int value);
    partial void OnAccountPreferenceIdChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    partial void OnClosedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedOnChanged();
    partial void OnIsBrokenChanging(System.Nullable<bool> value);
    partial void OnIsBrokenChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnCanceledOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCanceledOnChanged();
    #endregion
		
		public RepaymentArrangementEntity()
		{
			this._Payment_RepaymentArrangementDetails = new EntitySet<RepaymentArrangementDetailEntity>(new Action<RepaymentArrangementDetailEntity>(this.attach_Payment_RepaymentArrangementDetails), new Action<RepaymentArrangementDetailEntity>(this.detach_Payment_RepaymentArrangementDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentArrangementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentArrangementId
		{
			get
			{
				return this._RepaymentArrangementId;
			}
			set
			{
				if ((this._RepaymentArrangementId != value))
				{
					this.OnRepaymentArrangementIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentArrangementId = value;
					this.SendPropertyChanged("RepaymentArrangementId");
					this.OnRepaymentArrangementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPreferenceId", DbType="Int NOT NULL")]
		public int AccountPreferenceId
		{
			get
			{
				return this._AccountPreferenceId;
			}
			set
			{
				if ((this._AccountPreferenceId != value))
				{
					this.OnAccountPreferenceIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPreferenceId = value;
					this.SendPropertyChanged("AccountPreferenceId");
					this.OnAccountPreferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedOn
		{
			get
			{
				return this._ClosedOn;
			}
			set
			{
				if ((this._ClosedOn != value))
				{
					this.OnClosedOnChanging(value);
					this.SendPropertyChanging();
					this._ClosedOn = value;
					this.SendPropertyChanged("ClosedOn");
					this.OnClosedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBroken", DbType="Bit")]
		public System.Nullable<bool> IsBroken
		{
			get
			{
				return this._IsBroken;
			}
			set
			{
				if ((this._IsBroken != value))
				{
					this.OnIsBrokenChanging(value);
					this.SendPropertyChanging();
					this._IsBroken = value;
					this.SendPropertyChanged("IsBroken");
					this.OnIsBrokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanceledOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CanceledOn
		{
			get
			{
				return this._CanceledOn;
			}
			set
			{
				if ((this._CanceledOn != value))
				{
					this.OnCanceledOnChanging(value);
					this.SendPropertyChanging();
					this._CanceledOn = value;
					this.SendPropertyChanged("CanceledOn");
					this.OnCanceledOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentArrangementDetails_RepaymentArrangements", Storage="_Payment_RepaymentArrangementDetails", ThisKey="RepaymentArrangementId", OtherKey="RepaymentArrangementId", DeleteRule="NO ACTION")]
		public EntitySet<RepaymentArrangementDetailEntity> Payment_RepaymentArrangementDetails
		{
			get
			{
				return this._Payment_RepaymentArrangementDetails;
			}
			set
			{
				this._Payment_RepaymentArrangementDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_RepaymentArrangementDetails(RepaymentArrangementDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentArrangementEntity = this;
		}
		
		private void detach_Payment_RepaymentArrangementDetails(RepaymentArrangementDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentArrangementEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.RepaymentRequestDetails")]
	public partial class RepaymentRequestDetailEntity : DbEntity<RepaymentRequestDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentRequestDetailId;
		
		private System.Guid _ExternalId;
		
		private int _RepaymentRequestId;
		
		private int _ApplicationId;
		
		private System.Nullable<int> _StatusCode;
		
		private string _StatusMessage;
		
		private decimal _Amount;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<RepaymentRequestEntity> _RepaymentRequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentRequestDetailIdChanging(int value);
    partial void OnRepaymentRequestDetailIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnRepaymentRequestIdChanging(int value);
    partial void OnRepaymentRequestIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnStatusCodeChanging(System.Nullable<int> value);
    partial void OnStatusCodeChanged();
    partial void OnStatusMessageChanging(string value);
    partial void OnStatusMessageChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public RepaymentRequestDetailEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._RepaymentRequestEntity = default(EntityRef<RepaymentRequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentRequestDetailId
		{
			get
			{
				return this._RepaymentRequestDetailId;
			}
			set
			{
				if ((this._RepaymentRequestDetailId != value))
				{
					this.OnRepaymentRequestDetailIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestDetailId = value;
					this.SendPropertyChanged("RepaymentRequestDetailId");
					this.OnRepaymentRequestDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestId", DbType="Int NOT NULL")]
		public int RepaymentRequestId
		{
			get
			{
				return this._RepaymentRequestId;
			}
			set
			{
				if ((this._RepaymentRequestId != value))
				{
					if (this._RepaymentRequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestId = value;
					this.SendPropertyChanged("RepaymentRequestId");
					this.OnRepaymentRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="Int")]
		public System.Nullable<int> StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMessage", DbType="NVarChar(200)")]
		public string StatusMessage
		{
			get
			{
				return this._StatusMessage;
			}
			set
			{
				if ((this._StatusMessage != value))
				{
					this.OnStatusMessageChanging(value);
					this.SendPropertyChanging();
					this._StatusMessage = value;
					this.SendPropertyChanged("StatusMessage");
					this.OnStatusMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentRequestDetails_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Payment_RepaymentRequestDetails.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_RepaymentRequestDetails.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentRequestDetails_RepaymentRequests", Storage="_RepaymentRequestEntity", ThisKey="RepaymentRequestId", OtherKey="RepaymentRequestId", IsForeignKey=true)]
		public RepaymentRequestEntity RepaymentRequestEntity
		{
			get
			{
				return this._RepaymentRequestEntity.Entity;
			}
			set
			{
				RepaymentRequestEntity previousValue = this._RepaymentRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RepaymentRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepaymentRequestEntity.Entity = null;
						previousValue.Payment_RepaymentRequestDetails.Remove(this);
					}
					this._RepaymentRequestEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_RepaymentRequestDetails.Add(this);
						this._RepaymentRequestId = value.RepaymentRequestId;
					}
					else
					{
						this._RepaymentRequestId = default(int);
					}
					this.SendPropertyChanged("RepaymentRequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.RepaymentRequests")]
	public partial class RepaymentRequestEntity : DbEntity<RepaymentRequestEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentRequestId;
		
		private System.Guid _ExternalId;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private int _CashSource;
		
		private System.Nullable<System.Guid> _CashEntityId;
		
		private EntitySet<RepaymentRequestDetailEntity> _Payment_RepaymentRequestDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentRequestIdChanging(int value);
    partial void OnRepaymentRequestIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCashSourceChanging(int value);
    partial void OnCashSourceChanged();
    partial void OnCashEntityIdChanging(System.Nullable<System.Guid> value);
    partial void OnCashEntityIdChanged();
    #endregion
		
		public RepaymentRequestEntity()
		{
			this._Payment_RepaymentRequestDetails = new EntitySet<RepaymentRequestDetailEntity>(new Action<RepaymentRequestDetailEntity>(this.attach_Payment_RepaymentRequestDetails), new Action<RepaymentRequestDetailEntity>(this.detach_Payment_RepaymentRequestDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentRequestId
		{
			get
			{
				return this._RepaymentRequestId;
			}
			set
			{
				if ((this._RepaymentRequestId != value))
				{
					this.OnRepaymentRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestId = value;
					this.SendPropertyChanged("RepaymentRequestId");
					this.OnRepaymentRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashSource", DbType="Int NOT NULL")]
		public int CashSource
		{
			get
			{
				return this._CashSource;
			}
			set
			{
				if ((this._CashSource != value))
				{
					this.OnCashSourceChanging(value);
					this.SendPropertyChanging();
					this._CashSource = value;
					this.SendPropertyChanged("CashSource");
					this.OnCashSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashEntityId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CashEntityId
		{
			get
			{
				return this._CashEntityId;
			}
			set
			{
				if ((this._CashEntityId != value))
				{
					this.OnCashEntityIdChanging(value);
					this.SendPropertyChanging();
					this._CashEntityId = value;
					this.SendPropertyChanged("CashEntityId");
					this.OnCashEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RepaymentRequestDetails_RepaymentRequests", Storage="_Payment_RepaymentRequestDetails", ThisKey="RepaymentRequestId", OtherKey="RepaymentRequestId", DeleteRule="NO ACTION")]
		public EntitySet<RepaymentRequestDetailEntity> Payment_RepaymentRequestDetails
		{
			get
			{
				return this._Payment_RepaymentRequestDetails;
			}
			set
			{
				this._Payment_RepaymentRequestDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_RepaymentRequestDetails(RepaymentRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = this;
		}
		
		private void detach_Payment_RepaymentRequestDetails(RepaymentRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.ScheduledPayments")]
	public partial class ScheduledPaymentEntity : DbEntity<ScheduledPaymentEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduledPaymentId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private System.DateTime _PaymentDate;
		
		private decimal _Amount;
		
		private int _Currency;
		
		private System.Nullable<bool> _Success;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<bool> _IsRetry;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduledPaymentIdChanging(int value);
    partial void OnScheduledPaymentIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnSuccessChanging(System.Nullable<bool> value);
    partial void OnSuccessChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsRetryChanging(System.Nullable<bool> value);
    partial void OnIsRetryChanged();
    #endregion
		
		public ScheduledPaymentEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledPaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduledPaymentId
		{
			get
			{
				return this._ScheduledPaymentId;
			}
			set
			{
				if ((this._ScheduledPaymentId != value))
				{
					this.OnScheduledPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduledPaymentId = value;
					this.SendPropertyChanged("ScheduledPaymentId");
					this.OnScheduledPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="Bit")]
		public System.Nullable<bool> Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this.OnSuccessChanging(value);
					this.SendPropertyChanging();
					this._Success = value;
					this.SendPropertyChanged("Success");
					this.OnSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRetry", DbType="Bit")]
		public System.Nullable<bool> IsRetry
		{
			get
			{
				return this._IsRetry;
			}
			set
			{
				if ((this._IsRetry != value))
				{
					this.OnIsRetryChanging(value);
					this.SendPropertyChanging();
					this._IsRetry = value;
					this.SendPropertyChanged("IsRetry");
					this.OnIsRetryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ScheduledPayments_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Payment_ScheduledPayments.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_ScheduledPayments.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Topups")]
	public partial class TopupEntity : DbEntity<TopupEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TopupId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private decimal _Amount;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private System.Nullable<System.DateTime> _ProcessedOn;
		
		private bool _IsFailed;
		
		private EntityRef<FixedTermLoanApplicationEntity> _FixedTermLoanApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopupIdChanging(int value);
    partial void OnTopupIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnProcessedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedOnChanged();
    partial void OnIsFailedChanging(bool value);
    partial void OnIsFailedChanged();
    #endregion
		
		public TopupEntity()
		{
			this._FixedTermLoanApplicationEntity = default(EntityRef<FixedTermLoanApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TopupId
		{
			get
			{
				return this._TopupId;
			}
			set
			{
				if ((this._TopupId != value))
				{
					this.OnTopupIdChanging(value);
					this.SendPropertyChanging();
					this._TopupId = value;
					this.SendPropertyChanged("TopupId");
					this.OnTopupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._FixedTermLoanApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedOn
		{
			get
			{
				return this._ProcessedOn;
			}
			set
			{
				if ((this._ProcessedOn != value))
				{
					this.OnProcessedOnChanging(value);
					this.SendPropertyChanging();
					this._ProcessedOn = value;
					this.SendPropertyChanged("ProcessedOn");
					this.OnProcessedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFailed", DbType="Bit NOT NULL")]
		public bool IsFailed
		{
			get
			{
				return this._IsFailed;
			}
			set
			{
				if ((this._IsFailed != value))
				{
					this.OnIsFailedChanging(value);
					this.SendPropertyChanging();
					this._IsFailed = value;
					this.SendPropertyChanged("IsFailed");
					this.OnIsFailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Topups_FixedTermLoanApplications", Storage="_FixedTermLoanApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public FixedTermLoanApplicationEntity FixedTermLoanApplicationEntity
		{
			get
			{
				return this._FixedTermLoanApplicationEntity.Entity;
			}
			set
			{
				FixedTermLoanApplicationEntity previousValue = this._FixedTermLoanApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanApplicationEntity.Entity = null;
						previousValue.Payment_Topups.Remove(this);
					}
					this._FixedTermLoanApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_Topups.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("FixedTermLoanApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Transactions")]
	public partial class TransactionEntity : DbEntity<TransactionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private System.DateTime _PostedOn;
		
		private byte _Scope;
		
		private string _Type;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _Mir;
		
		private int _Currency;
		
		private System.Nullable<System.Guid> _ComponentTransactionId;
		
		private string _Reference;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _UserId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnPostedOnChanging(System.DateTime value);
    partial void OnPostedOnChanged();
    partial void OnScopeChanging(byte value);
    partial void OnScopeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnMirChanging(System.Nullable<decimal> value);
    partial void OnMirChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnComponentTransactionIdChanging(System.Nullable<System.Guid> value);
    partial void OnComponentTransactionIdChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public TransactionEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedOn", DbType="DateTime NOT NULL")]
		public System.DateTime PostedOn
		{
			get
			{
				return this._PostedOn;
			}
			set
			{
				if ((this._PostedOn != value))
				{
					this.OnPostedOnChanging(value);
					this.SendPropertyChanging();
					this._PostedOn = value;
					this.SendPropertyChanged("PostedOn");
					this.OnPostedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scope", DbType="TinyInt NOT NULL")]
		public byte Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mir", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Mir
		{
			get
			{
				return this._Mir;
			}
			set
			{
				if ((this._Mir != value))
				{
					this.OnMirChanging(value);
					this.SendPropertyChanging();
					this._Mir = value;
					this.SendPropertyChanged("Mir");
					this.OnMirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentTransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComponentTransactionId
		{
			get
			{
				return this._ComponentTransactionId;
			}
			set
			{
				if ((this._ComponentTransactionId != value))
				{
					this.OnComponentTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentTransactionId = value;
					this.SendPropertyChanged("ComponentTransactionId");
					this.OnComponentTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(50)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Payment_Transactions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_Transactions.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Users", Storage="_UserEntity", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.Payment_Transactions.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.Payment_Transactions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payment.Users")]
	public partial class UserEntity : DbEntity<UserEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _ExternalId;
		
		private string _Name;
		
		private EntitySet<TransactionEntity> _Payment_Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserEntity()
		{
			this._Payment_Transactions = new EntitySet<TransactionEntity>(new Action<TransactionEntity>(this.attach_Payment_Transactions), new Action<TransactionEntity>(this.detach_Payment_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Users", Storage="_Payment_Transactions", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<TransactionEntity> Payment_Transactions
		{
			get
			{
				return this._Payment_Transactions;
			}
			set
			{
				this._Payment_Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_Payment_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
	}
}
#pragma warning restore 1591
