#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Scheduler
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Scheduler")]
	public partial class SchedulerDatabase : DbDatabase<SchedulerDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertQRTZ_CALENDAR(QRTZ_CALENDAR instance);
    partial void UpdateQRTZ_CALENDAR(QRTZ_CALENDAR instance);
    partial void DeleteQRTZ_CALENDAR(QRTZ_CALENDAR instance);
    partial void InsertQRTZ_CRON_TRIGGER(QRTZ_CRON_TRIGGER instance);
    partial void UpdateQRTZ_CRON_TRIGGER(QRTZ_CRON_TRIGGER instance);
    partial void DeleteQRTZ_CRON_TRIGGER(QRTZ_CRON_TRIGGER instance);
    partial void InsertQRTZ_FIRED_TRIGGER(QRTZ_FIRED_TRIGGER instance);
    partial void UpdateQRTZ_FIRED_TRIGGER(QRTZ_FIRED_TRIGGER instance);
    partial void DeleteQRTZ_FIRED_TRIGGER(QRTZ_FIRED_TRIGGER instance);
    partial void InsertQRTZ_JOB_DETAIL(QRTZ_JOB_DETAIL instance);
    partial void UpdateQRTZ_JOB_DETAIL(QRTZ_JOB_DETAIL instance);
    partial void DeleteQRTZ_JOB_DETAIL(QRTZ_JOB_DETAIL instance);
    partial void InsertQRTZ_JOB_LISTENER(QRTZ_JOB_LISTENER instance);
    partial void UpdateQRTZ_JOB_LISTENER(QRTZ_JOB_LISTENER instance);
    partial void DeleteQRTZ_JOB_LISTENER(QRTZ_JOB_LISTENER instance);
    partial void InsertQRTZ_LOCK(QRTZ_LOCK instance);
    partial void UpdateQRTZ_LOCK(QRTZ_LOCK instance);
    partial void DeleteQRTZ_LOCK(QRTZ_LOCK instance);
    partial void InsertQRTZ_PAUSED_TRIGGER_GRP(QRTZ_PAUSED_TRIGGER_GRP instance);
    partial void UpdateQRTZ_PAUSED_TRIGGER_GRP(QRTZ_PAUSED_TRIGGER_GRP instance);
    partial void DeleteQRTZ_PAUSED_TRIGGER_GRP(QRTZ_PAUSED_TRIGGER_GRP instance);
    partial void InsertQRTZ_Scheduler_STATE(QRTZ_Scheduler_STATE instance);
    partial void UpdateQRTZ_Scheduler_STATE(QRTZ_Scheduler_STATE instance);
    partial void DeleteQRTZ_Scheduler_STATE(QRTZ_Scheduler_STATE instance);
    partial void InsertQRTZ_SIMPLE_TRIGGER(QRTZ_SIMPLE_TRIGGER instance);
    partial void UpdateQRTZ_SIMPLE_TRIGGER(QRTZ_SIMPLE_TRIGGER instance);
    partial void DeleteQRTZ_SIMPLE_TRIGGER(QRTZ_SIMPLE_TRIGGER instance);
    partial void InsertQRTZ_TRIGGER_LISTENER(QRTZ_TRIGGER_LISTENER instance);
    partial void UpdateQRTZ_TRIGGER_LISTENER(QRTZ_TRIGGER_LISTENER instance);
    partial void DeleteQRTZ_TRIGGER_LISTENER(QRTZ_TRIGGER_LISTENER instance);
    partial void InsertQRTZ_TRIGGER(QRTZ_TRIGGER instance);
    partial void UpdateQRTZ_TRIGGER(QRTZ_TRIGGER instance);
    partial void DeleteQRTZ_TRIGGER(QRTZ_TRIGGER instance);
    #endregion
		
		public SchedulerDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchedulerDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchedulerDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SchedulerDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_BLOB_TRIGGER> QRTZ_BLOB_TRIGGERS
		{
			get
			{
				return this.GetTable<QRTZ_BLOB_TRIGGER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_CALENDAR> QRTZ_CALENDARS
		{
			get
			{
				return this.GetTable<QRTZ_CALENDAR>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_CRON_TRIGGER> QRTZ_CRON_TRIGGERS
		{
			get
			{
				return this.GetTable<QRTZ_CRON_TRIGGER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_FIRED_TRIGGER> QRTZ_FIRED_TRIGGERS
		{
			get
			{
				return this.GetTable<QRTZ_FIRED_TRIGGER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_JOB_DETAIL> QRTZ_JOB_DETAILS
		{
			get
			{
				return this.GetTable<QRTZ_JOB_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_JOB_LISTENER> QRTZ_JOB_LISTENERS
		{
			get
			{
				return this.GetTable<QRTZ_JOB_LISTENER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_LOCK> QRTZ_LOCKS
		{
			get
			{
				return this.GetTable<QRTZ_LOCK>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_PAUSED_TRIGGER_GRP> QRTZ_PAUSED_TRIGGER_GRPS
		{
			get
			{
				return this.GetTable<QRTZ_PAUSED_TRIGGER_GRP>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_Scheduler_STATE> QRTZ_Scheduler_STATEs
		{
			get
			{
				return this.GetTable<QRTZ_Scheduler_STATE>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_SIMPLE_TRIGGER> QRTZ_SIMPLE_TRIGGERS
		{
			get
			{
				return this.GetTable<QRTZ_SIMPLE_TRIGGER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_TRIGGER_LISTENER> QRTZ_TRIGGER_LISTENERS
		{
			get
			{
				return this.GetTable<QRTZ_TRIGGER_LISTENER>();
			}
		}
		
		public System.Data.Linq.Table<QRTZ_TRIGGER> QRTZ_TRIGGERS
		{
			get
			{
				return this.GetTable<QRTZ_TRIGGER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_BLOB_TRIGGERS")]
	public partial class QRTZ_BLOB_TRIGGER : DbEntity<QRTZ_BLOB_TRIGGER>
	{
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private System.Data.Linq.Binary _BLOB_DATA;
		
		public QRTZ_BLOB_TRIGGER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					this._TRIGGER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					this._TRIGGER_GROUP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOB_DATA", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BLOB_DATA
		{
			get
			{
				return this._BLOB_DATA;
			}
			set
			{
				if ((this._BLOB_DATA != value))
				{
					this._BLOB_DATA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_CALENDARS")]
	public partial class QRTZ_CALENDAR : DbEntity<QRTZ_CALENDAR>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CALENDAR_NAME;
		
		private System.Data.Linq.Binary _CALENDAR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCALENDAR_NAMEChanging(string value);
    partial void OnCALENDAR_NAMEChanged();
    partial void OnCALENDARChanging(System.Data.Linq.Binary value);
    partial void OnCALENDARChanged();
    #endregion
		
		public QRTZ_CALENDAR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALENDAR_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CALENDAR_NAME
		{
			get
			{
				return this._CALENDAR_NAME;
			}
			set
			{
				if ((this._CALENDAR_NAME != value))
				{
					this.OnCALENDAR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CALENDAR_NAME = value;
					this.SendPropertyChanged("CALENDAR_NAME");
					this.OnCALENDAR_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALENDAR", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CALENDAR
		{
			get
			{
				return this._CALENDAR;
			}
			set
			{
				if ((this._CALENDAR != value))
				{
					this.OnCALENDARChanging(value);
					this.SendPropertyChanging();
					this._CALENDAR = value;
					this.SendPropertyChanged("CALENDAR");
					this.OnCALENDARChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_CRON_TRIGGERS")]
	public partial class QRTZ_CRON_TRIGGER : DbEntity<QRTZ_CRON_TRIGGER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private string _CRON_EXPRESSION;
		
		private string _TIME_ZONE_ID;
		
		private EntityRef<QRTZ_TRIGGER> _QRTZ_TRIGGER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRIGGER_NAMEChanging(string value);
    partial void OnTRIGGER_NAMEChanged();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    partial void OnCRON_EXPRESSIONChanging(string value);
    partial void OnCRON_EXPRESSIONChanged();
    partial void OnTIME_ZONE_IDChanging(string value);
    partial void OnTIME_ZONE_IDChanged();
    #endregion
		
		public QRTZ_CRON_TRIGGER()
		{
			this._QRTZ_TRIGGER = default(EntityRef<QRTZ_TRIGGER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_NAME = value;
					this.SendPropertyChanged("TRIGGER_NAME");
					this.OnTRIGGER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRON_EXPRESSION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string CRON_EXPRESSION
		{
			get
			{
				return this._CRON_EXPRESSION;
			}
			set
			{
				if ((this._CRON_EXPRESSION != value))
				{
					this.OnCRON_EXPRESSIONChanging(value);
					this.SendPropertyChanging();
					this._CRON_EXPRESSION = value;
					this.SendPropertyChanged("CRON_EXPRESSION");
					this.OnCRON_EXPRESSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME_ZONE_ID", DbType="VarChar(80)")]
		public string TIME_ZONE_ID
		{
			get
			{
				return this._TIME_ZONE_ID;
			}
			set
			{
				if ((this._TIME_ZONE_ID != value))
				{
					this.OnTIME_ZONE_IDChanging(value);
					this.SendPropertyChanging();
					this._TIME_ZONE_ID = value;
					this.SendPropertyChanged("TIME_ZONE_ID");
					this.OnTIME_ZONE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS", Storage="_QRTZ_TRIGGER", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", IsForeignKey=true, DeleteOnNull=true)]
		public QRTZ_TRIGGER QRTZ_TRIGGER
		{
			get
			{
				return this._QRTZ_TRIGGER.Entity;
			}
			set
			{
				QRTZ_TRIGGER previousValue = this._QRTZ_TRIGGER.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_TRIGGER.Entity = null;
						previousValue.QRTZ_CRON_TRIGGER = null;
					}
					this._QRTZ_TRIGGER.Entity = value;
					if ((value != null))
					{
						value.QRTZ_CRON_TRIGGER = this;
						this._TRIGGER_NAME = value.TRIGGER_NAME;
						this._TRIGGER_GROUP = value.TRIGGER_GROUP;
					}
					else
					{
						this._TRIGGER_NAME = default(string);
						this._TRIGGER_GROUP = default(string);
					}
					this.SendPropertyChanged("QRTZ_TRIGGER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_FIRED_TRIGGERS")]
	public partial class QRTZ_FIRED_TRIGGER : DbEntity<QRTZ_FIRED_TRIGGER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ENTRY_ID;
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private string _IS_VOLATILE;
		
		private string _INSTANCE_NAME;
		
		private long _FIRED_TIME;
		
		private int _PRIORITY;
		
		private string _STATE;
		
		private string _JOB_NAME;
		
		private string _JOB_GROUP;
		
		private string _IS_STATEFUL;
		
		private string _REQUESTS_RECOVERY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnENTRY_IDChanging(string value);
    partial void OnENTRY_IDChanged();
    partial void OnTRIGGER_NAMEChanging(string value);
    partial void OnTRIGGER_NAMEChanged();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    partial void OnIS_VOLATILEChanging(string value);
    partial void OnIS_VOLATILEChanged();
    partial void OnINSTANCE_NAMEChanging(string value);
    partial void OnINSTANCE_NAMEChanged();
    partial void OnFIRED_TIMEChanging(long value);
    partial void OnFIRED_TIMEChanged();
    partial void OnPRIORITYChanging(int value);
    partial void OnPRIORITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    partial void OnJOB_GROUPChanging(string value);
    partial void OnJOB_GROUPChanged();
    partial void OnIS_STATEFULChanging(string value);
    partial void OnIS_STATEFULChanged();
    partial void OnREQUESTS_RECOVERYChanging(string value);
    partial void OnREQUESTS_RECOVERYChanged();
    #endregion
		
		public QRTZ_FIRED_TRIGGER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENTRY_ID", DbType="VarChar(95) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ENTRY_ID
		{
			get
			{
				return this._ENTRY_ID;
			}
			set
			{
				if ((this._ENTRY_ID != value))
				{
					this.OnENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._ENTRY_ID = value;
					this.SendPropertyChanged("ENTRY_ID");
					this.OnENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					this.OnTRIGGER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_NAME = value;
					this.SendPropertyChanged("TRIGGER_NAME");
					this.OnTRIGGER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_VOLATILE", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IS_VOLATILE
		{
			get
			{
				return this._IS_VOLATILE;
			}
			set
			{
				if ((this._IS_VOLATILE != value))
				{
					this.OnIS_VOLATILEChanging(value);
					this.SendPropertyChanging();
					this._IS_VOLATILE = value;
					this.SendPropertyChanged("IS_VOLATILE");
					this.OnIS_VOLATILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string INSTANCE_NAME
		{
			get
			{
				return this._INSTANCE_NAME;
			}
			set
			{
				if ((this._INSTANCE_NAME != value))
				{
					this.OnINSTANCE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_NAME = value;
					this.SendPropertyChanged("INSTANCE_NAME");
					this.OnINSTANCE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRED_TIME", DbType="BigInt NOT NULL")]
		public long FIRED_TIME
		{
			get
			{
				return this._FIRED_TIME;
			}
			set
			{
				if ((this._FIRED_TIME != value))
				{
					this.OnFIRED_TIMEChanging(value);
					this.SendPropertyChanging();
					this._FIRED_TIME = value;
					this.SendPropertyChanged("FIRED_TIME");
					this.OnFIRED_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIORITY", DbType="Int NOT NULL")]
		public int PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="VarChar(200)")]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_GROUP", DbType="VarChar(200)")]
		public string JOB_GROUP
		{
			get
			{
				return this._JOB_GROUP;
			}
			set
			{
				if ((this._JOB_GROUP != value))
				{
					this.OnJOB_GROUPChanging(value);
					this.SendPropertyChanging();
					this._JOB_GROUP = value;
					this.SendPropertyChanged("JOB_GROUP");
					this.OnJOB_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_STATEFUL", DbType="VarChar(1)")]
		public string IS_STATEFUL
		{
			get
			{
				return this._IS_STATEFUL;
			}
			set
			{
				if ((this._IS_STATEFUL != value))
				{
					this.OnIS_STATEFULChanging(value);
					this.SendPropertyChanging();
					this._IS_STATEFUL = value;
					this.SendPropertyChanged("IS_STATEFUL");
					this.OnIS_STATEFULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTS_RECOVERY", DbType="VarChar(1)")]
		public string REQUESTS_RECOVERY
		{
			get
			{
				return this._REQUESTS_RECOVERY;
			}
			set
			{
				if ((this._REQUESTS_RECOVERY != value))
				{
					this.OnREQUESTS_RECOVERYChanging(value);
					this.SendPropertyChanging();
					this._REQUESTS_RECOVERY = value;
					this.SendPropertyChanged("REQUESTS_RECOVERY");
					this.OnREQUESTS_RECOVERYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_JOB_DETAILS")]
	public partial class QRTZ_JOB_DETAIL : DbEntity<QRTZ_JOB_DETAIL>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOB_NAME;
		
		private string _JOB_GROUP;
		
		private string _DESCRIPTION;
		
		private string _JOB_CLASS_NAME;
		
		private string _IS_DURABLE;
		
		private string _IS_VOLATILE;
		
		private string _IS_STATEFUL;
		
		private string _REQUESTS_RECOVERY;
		
		private System.Data.Linq.Binary _JOB_DATA;
		
		private EntitySet<QRTZ_JOB_LISTENER> _QRTZ_JOB_LISTENERs;
		
		private EntitySet<QRTZ_TRIGGER> _QRTZ_TRIGGERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    partial void OnJOB_GROUPChanging(string value);
    partial void OnJOB_GROUPChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnJOB_CLASS_NAMEChanging(string value);
    partial void OnJOB_CLASS_NAMEChanged();
    partial void OnIS_DURABLEChanging(string value);
    partial void OnIS_DURABLEChanged();
    partial void OnIS_VOLATILEChanging(string value);
    partial void OnIS_VOLATILEChanged();
    partial void OnIS_STATEFULChanging(string value);
    partial void OnIS_STATEFULChanged();
    partial void OnREQUESTS_RECOVERYChanging(string value);
    partial void OnREQUESTS_RECOVERYChanged();
    partial void OnJOB_DATAChanging(System.Data.Linq.Binary value);
    partial void OnJOB_DATAChanged();
    #endregion
		
		public QRTZ_JOB_DETAIL()
		{
			this._QRTZ_JOB_LISTENERs = new EntitySet<QRTZ_JOB_LISTENER>(new Action<QRTZ_JOB_LISTENER>(this.attach_QRTZ_JOB_LISTENERs), new Action<QRTZ_JOB_LISTENER>(this.detach_QRTZ_JOB_LISTENERs));
			this._QRTZ_TRIGGERs = new EntitySet<QRTZ_TRIGGER>(new Action<QRTZ_TRIGGER>(this.attach_QRTZ_TRIGGERs), new Action<QRTZ_TRIGGER>(this.detach_QRTZ_TRIGGERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB_GROUP
		{
			get
			{
				return this._JOB_GROUP;
			}
			set
			{
				if ((this._JOB_GROUP != value))
				{
					this.OnJOB_GROUPChanging(value);
					this.SendPropertyChanging();
					this._JOB_GROUP = value;
					this.SendPropertyChanged("JOB_GROUP");
					this.OnJOB_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(250)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_CLASS_NAME", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string JOB_CLASS_NAME
		{
			get
			{
				return this._JOB_CLASS_NAME;
			}
			set
			{
				if ((this._JOB_CLASS_NAME != value))
				{
					this.OnJOB_CLASS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_CLASS_NAME = value;
					this.SendPropertyChanged("JOB_CLASS_NAME");
					this.OnJOB_CLASS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_DURABLE", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IS_DURABLE
		{
			get
			{
				return this._IS_DURABLE;
			}
			set
			{
				if ((this._IS_DURABLE != value))
				{
					this.OnIS_DURABLEChanging(value);
					this.SendPropertyChanging();
					this._IS_DURABLE = value;
					this.SendPropertyChanged("IS_DURABLE");
					this.OnIS_DURABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_VOLATILE", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IS_VOLATILE
		{
			get
			{
				return this._IS_VOLATILE;
			}
			set
			{
				if ((this._IS_VOLATILE != value))
				{
					this.OnIS_VOLATILEChanging(value);
					this.SendPropertyChanging();
					this._IS_VOLATILE = value;
					this.SendPropertyChanged("IS_VOLATILE");
					this.OnIS_VOLATILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_STATEFUL", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IS_STATEFUL
		{
			get
			{
				return this._IS_STATEFUL;
			}
			set
			{
				if ((this._IS_STATEFUL != value))
				{
					this.OnIS_STATEFULChanging(value);
					this.SendPropertyChanging();
					this._IS_STATEFUL = value;
					this.SendPropertyChanged("IS_STATEFUL");
					this.OnIS_STATEFULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTS_RECOVERY", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string REQUESTS_RECOVERY
		{
			get
			{
				return this._REQUESTS_RECOVERY;
			}
			set
			{
				if ((this._REQUESTS_RECOVERY != value))
				{
					this.OnREQUESTS_RECOVERYChanging(value);
					this.SendPropertyChanging();
					this._REQUESTS_RECOVERY = value;
					this.SendPropertyChanged("REQUESTS_RECOVERY");
					this.OnREQUESTS_RECOVERYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_DATA", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary JOB_DATA
		{
			get
			{
				return this._JOB_DATA;
			}
			set
			{
				if ((this._JOB_DATA != value))
				{
					this.OnJOB_DATAChanging(value);
					this.SendPropertyChanging();
					this._JOB_DATA = value;
					this.SendPropertyChanged("JOB_DATA");
					this.OnJOB_DATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS", Storage="_QRTZ_JOB_LISTENERs", ThisKey="JOB_NAME,JOB_GROUP", OtherKey="JOB_NAME,JOB_GROUP", DeleteRule="CASCADE")]
		public EntitySet<QRTZ_JOB_LISTENER> QRTZ_JOB_LISTENERs
		{
			get
			{
				return this._QRTZ_JOB_LISTENERs;
			}
			set
			{
				this._QRTZ_JOB_LISTENERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS", Storage="_QRTZ_TRIGGERs", ThisKey="JOB_NAME,JOB_GROUP", OtherKey="JOB_NAME,JOB_GROUP", DeleteRule="NO ACTION")]
		public EntitySet<QRTZ_TRIGGER> QRTZ_TRIGGERs
		{
			get
			{
				return this._QRTZ_TRIGGERs;
			}
			set
			{
				this._QRTZ_TRIGGERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QRTZ_JOB_LISTENERs(QRTZ_JOB_LISTENER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_JOB_DETAIL = this;
		}
		
		private void detach_QRTZ_JOB_LISTENERs(QRTZ_JOB_LISTENER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_JOB_DETAIL = null;
		}
		
		private void attach_QRTZ_TRIGGERs(QRTZ_TRIGGER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_JOB_DETAIL = this;
		}
		
		private void detach_QRTZ_TRIGGERs(QRTZ_TRIGGER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_JOB_DETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_JOB_LISTENERS")]
	public partial class QRTZ_JOB_LISTENER : DbEntity<QRTZ_JOB_LISTENER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOB_NAME;
		
		private string _JOB_GROUP;
		
		private string _JOB_LISTENER;
		
		private EntityRef<QRTZ_JOB_DETAIL> _QRTZ_JOB_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    partial void OnJOB_GROUPChanging(string value);
    partial void OnJOB_GROUPChanged();
    partial void OnJOB_LISTENERChanging(string value);
    partial void OnJOB_LISTENERChanged();
    #endregion
		
		public QRTZ_JOB_LISTENER()
		{
			this._QRTZ_JOB_DETAIL = default(EntityRef<QRTZ_JOB_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					if (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB_GROUP
		{
			get
			{
				return this._JOB_GROUP;
			}
			set
			{
				if ((this._JOB_GROUP != value))
				{
					if (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOB_GROUPChanging(value);
					this.SendPropertyChanging();
					this._JOB_GROUP = value;
					this.SendPropertyChanged("JOB_GROUP");
					this.OnJOB_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_LISTENER", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB_LISTENER
		{
			get
			{
				return this._JOB_LISTENER;
			}
			set
			{
				if ((this._JOB_LISTENER != value))
				{
					this.OnJOB_LISTENERChanging(value);
					this.SendPropertyChanging();
					this._JOB_LISTENER = value;
					this.SendPropertyChanged("JOB_LISTENER");
					this.OnJOB_LISTENERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS", Storage="_QRTZ_JOB_DETAIL", ThisKey="JOB_NAME,JOB_GROUP", OtherKey="JOB_NAME,JOB_GROUP", IsForeignKey=true, DeleteOnNull=true)]
		public QRTZ_JOB_DETAIL QRTZ_JOB_DETAIL
		{
			get
			{
				return this._QRTZ_JOB_DETAIL.Entity;
			}
			set
			{
				QRTZ_JOB_DETAIL previousValue = this._QRTZ_JOB_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_JOB_DETAIL.Entity = null;
						previousValue.QRTZ_JOB_LISTENERs.Remove(this);
					}
					this._QRTZ_JOB_DETAIL.Entity = value;
					if ((value != null))
					{
						value.QRTZ_JOB_LISTENERs.Add(this);
						this._JOB_NAME = value.JOB_NAME;
						this._JOB_GROUP = value.JOB_GROUP;
					}
					else
					{
						this._JOB_NAME = default(string);
						this._JOB_GROUP = default(string);
					}
					this.SendPropertyChanged("QRTZ_JOB_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_LOCKS")]
	public partial class QRTZ_LOCK : DbEntity<QRTZ_LOCK>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LOCK_NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOCK_NAMEChanging(string value);
    partial void OnLOCK_NAMEChanged();
    #endregion
		
		public QRTZ_LOCK()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCK_NAME", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOCK_NAME
		{
			get
			{
				return this._LOCK_NAME;
			}
			set
			{
				if ((this._LOCK_NAME != value))
				{
					this.OnLOCK_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LOCK_NAME = value;
					this.SendPropertyChanged("LOCK_NAME");
					this.OnLOCK_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_PAUSED_TRIGGER_GRPS")]
	public partial class QRTZ_PAUSED_TRIGGER_GRP : DbEntity<QRTZ_PAUSED_TRIGGER_GRP>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TRIGGER_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    #endregion
		
		public QRTZ_PAUSED_TRIGGER_GRP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_Scheduler_STATE")]
	public partial class QRTZ_Scheduler_STATE : DbEntity<QRTZ_Scheduler_STATE>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _INSTANCE_NAME;
		
		private long _LAST_CHECKIN_TIME;
		
		private long _CHECKIN_INTERVAL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINSTANCE_NAMEChanging(string value);
    partial void OnINSTANCE_NAMEChanged();
    partial void OnLAST_CHECKIN_TIMEChanging(long value);
    partial void OnLAST_CHECKIN_TIMEChanged();
    partial void OnCHECKIN_INTERVALChanging(long value);
    partial void OnCHECKIN_INTERVALChanged();
    #endregion
		
		public QRTZ_Scheduler_STATE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSTANCE_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string INSTANCE_NAME
		{
			get
			{
				return this._INSTANCE_NAME;
			}
			set
			{
				if ((this._INSTANCE_NAME != value))
				{
					this.OnINSTANCE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._INSTANCE_NAME = value;
					this.SendPropertyChanged("INSTANCE_NAME");
					this.OnINSTANCE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_CHECKIN_TIME", DbType="BigInt NOT NULL")]
		public long LAST_CHECKIN_TIME
		{
			get
			{
				return this._LAST_CHECKIN_TIME;
			}
			set
			{
				if ((this._LAST_CHECKIN_TIME != value))
				{
					this.OnLAST_CHECKIN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_CHECKIN_TIME = value;
					this.SendPropertyChanged("LAST_CHECKIN_TIME");
					this.OnLAST_CHECKIN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHECKIN_INTERVAL", DbType="BigInt NOT NULL")]
		public long CHECKIN_INTERVAL
		{
			get
			{
				return this._CHECKIN_INTERVAL;
			}
			set
			{
				if ((this._CHECKIN_INTERVAL != value))
				{
					this.OnCHECKIN_INTERVALChanging(value);
					this.SendPropertyChanging();
					this._CHECKIN_INTERVAL = value;
					this.SendPropertyChanged("CHECKIN_INTERVAL");
					this.OnCHECKIN_INTERVALChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_SIMPLE_TRIGGERS")]
	public partial class QRTZ_SIMPLE_TRIGGER : DbEntity<QRTZ_SIMPLE_TRIGGER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private long _REPEAT_COUNT;
		
		private long _REPEAT_INTERVAL;
		
		private long _TIMES_TRIGGERED;
		
		private EntityRef<QRTZ_TRIGGER> _QRTZ_TRIGGER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRIGGER_NAMEChanging(string value);
    partial void OnTRIGGER_NAMEChanged();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    partial void OnREPEAT_COUNTChanging(long value);
    partial void OnREPEAT_COUNTChanged();
    partial void OnREPEAT_INTERVALChanging(long value);
    partial void OnREPEAT_INTERVALChanged();
    partial void OnTIMES_TRIGGEREDChanging(long value);
    partial void OnTIMES_TRIGGEREDChanged();
    #endregion
		
		public QRTZ_SIMPLE_TRIGGER()
		{
			this._QRTZ_TRIGGER = default(EntityRef<QRTZ_TRIGGER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_NAME = value;
					this.SendPropertyChanged("TRIGGER_NAME");
					this.OnTRIGGER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPEAT_COUNT", DbType="BigInt NOT NULL")]
		public long REPEAT_COUNT
		{
			get
			{
				return this._REPEAT_COUNT;
			}
			set
			{
				if ((this._REPEAT_COUNT != value))
				{
					this.OnREPEAT_COUNTChanging(value);
					this.SendPropertyChanging();
					this._REPEAT_COUNT = value;
					this.SendPropertyChanged("REPEAT_COUNT");
					this.OnREPEAT_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPEAT_INTERVAL", DbType="BigInt NOT NULL")]
		public long REPEAT_INTERVAL
		{
			get
			{
				return this._REPEAT_INTERVAL;
			}
			set
			{
				if ((this._REPEAT_INTERVAL != value))
				{
					this.OnREPEAT_INTERVALChanging(value);
					this.SendPropertyChanging();
					this._REPEAT_INTERVAL = value;
					this.SendPropertyChanged("REPEAT_INTERVAL");
					this.OnREPEAT_INTERVALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMES_TRIGGERED", DbType="BigInt NOT NULL")]
		public long TIMES_TRIGGERED
		{
			get
			{
				return this._TIMES_TRIGGERED;
			}
			set
			{
				if ((this._TIMES_TRIGGERED != value))
				{
					this.OnTIMES_TRIGGEREDChanging(value);
					this.SendPropertyChanging();
					this._TIMES_TRIGGERED = value;
					this.SendPropertyChanged("TIMES_TRIGGERED");
					this.OnTIMES_TRIGGEREDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS", Storage="_QRTZ_TRIGGER", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", IsForeignKey=true, DeleteOnNull=true)]
		public QRTZ_TRIGGER QRTZ_TRIGGER
		{
			get
			{
				return this._QRTZ_TRIGGER.Entity;
			}
			set
			{
				QRTZ_TRIGGER previousValue = this._QRTZ_TRIGGER.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_TRIGGER.Entity = null;
						previousValue.QRTZ_SIMPLE_TRIGGER = null;
					}
					this._QRTZ_TRIGGER.Entity = value;
					if ((value != null))
					{
						value.QRTZ_SIMPLE_TRIGGER = this;
						this._TRIGGER_NAME = value.TRIGGER_NAME;
						this._TRIGGER_GROUP = value.TRIGGER_GROUP;
					}
					else
					{
						this._TRIGGER_NAME = default(string);
						this._TRIGGER_GROUP = default(string);
					}
					this.SendPropertyChanged("QRTZ_TRIGGER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_TRIGGER_LISTENERS")]
	public partial class QRTZ_TRIGGER_LISTENER : DbEntity<QRTZ_TRIGGER_LISTENER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private string _TRIGGER_LISTENER;
		
		private EntityRef<QRTZ_TRIGGER> _QRTZ_TRIGGER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRIGGER_NAMEChanging(string value);
    partial void OnTRIGGER_NAMEChanged();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    partial void OnTRIGGER_LISTENERChanging(string value);
    partial void OnTRIGGER_LISTENERChanged();
    #endregion
		
		public QRTZ_TRIGGER_LISTENER()
		{
			this._QRTZ_TRIGGER = default(EntityRef<QRTZ_TRIGGER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_NAME = value;
					this.SendPropertyChanged("TRIGGER_NAME");
					this.OnTRIGGER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					if (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_LISTENER", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_LISTENER
		{
			get
			{
				return this._TRIGGER_LISTENER;
			}
			set
			{
				if ((this._TRIGGER_LISTENER != value))
				{
					this.OnTRIGGER_LISTENERChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_LISTENER = value;
					this.SendPropertyChanged("TRIGGER_LISTENER");
					this.OnTRIGGER_LISTENERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS", Storage="_QRTZ_TRIGGER", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", IsForeignKey=true, DeleteOnNull=true)]
		public QRTZ_TRIGGER QRTZ_TRIGGER
		{
			get
			{
				return this._QRTZ_TRIGGER.Entity;
			}
			set
			{
				QRTZ_TRIGGER previousValue = this._QRTZ_TRIGGER.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_TRIGGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_TRIGGER.Entity = null;
						previousValue.QRTZ_TRIGGER_LISTENERs.Remove(this);
					}
					this._QRTZ_TRIGGER.Entity = value;
					if ((value != null))
					{
						value.QRTZ_TRIGGER_LISTENERs.Add(this);
						this._TRIGGER_NAME = value.TRIGGER_NAME;
						this._TRIGGER_GROUP = value.TRIGGER_GROUP;
					}
					else
					{
						this._TRIGGER_NAME = default(string);
						this._TRIGGER_GROUP = default(string);
					}
					this.SendPropertyChanged("QRTZ_TRIGGER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QRTZ_TRIGGERS")]
	public partial class QRTZ_TRIGGER : DbEntity<QRTZ_TRIGGER>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TRIGGER_NAME;
		
		private string _TRIGGER_GROUP;
		
		private string _JOB_NAME;
		
		private string _JOB_GROUP;
		
		private string _IS_VOLATILE;
		
		private string _DESCRIPTION;
		
		private System.Nullable<long> _NEXT_FIRE_TIME;
		
		private System.Nullable<long> _PREV_FIRE_TIME;
		
		private System.Nullable<int> _PRIORITY;
		
		private string _TRIGGER_STATE;
		
		private string _TRIGGER_TYPE;
		
		private long _START_TIME;
		
		private System.Nullable<long> _END_TIME;
		
		private string _CALENDAR_NAME;
		
		private System.Nullable<short> _MISFIRE_INSTR;
		
		private System.Data.Linq.Binary _JOB_DATA;
		
		private EntityRef<QRTZ_CRON_TRIGGER> _QRTZ_CRON_TRIGGER;
		
		private EntityRef<QRTZ_SIMPLE_TRIGGER> _QRTZ_SIMPLE_TRIGGER;
		
		private EntitySet<QRTZ_TRIGGER_LISTENER> _QRTZ_TRIGGER_LISTENERs;
		
		private EntityRef<QRTZ_JOB_DETAIL> _QRTZ_JOB_DETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRIGGER_NAMEChanging(string value);
    partial void OnTRIGGER_NAMEChanged();
    partial void OnTRIGGER_GROUPChanging(string value);
    partial void OnTRIGGER_GROUPChanged();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    partial void OnJOB_GROUPChanging(string value);
    partial void OnJOB_GROUPChanged();
    partial void OnIS_VOLATILEChanging(string value);
    partial void OnIS_VOLATILEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnNEXT_FIRE_TIMEChanging(System.Nullable<long> value);
    partial void OnNEXT_FIRE_TIMEChanged();
    partial void OnPREV_FIRE_TIMEChanging(System.Nullable<long> value);
    partial void OnPREV_FIRE_TIMEChanged();
    partial void OnPRIORITYChanging(System.Nullable<int> value);
    partial void OnPRIORITYChanged();
    partial void OnTRIGGER_STATEChanging(string value);
    partial void OnTRIGGER_STATEChanged();
    partial void OnTRIGGER_TYPEChanging(string value);
    partial void OnTRIGGER_TYPEChanged();
    partial void OnSTART_TIMEChanging(long value);
    partial void OnSTART_TIMEChanged();
    partial void OnEND_TIMEChanging(System.Nullable<long> value);
    partial void OnEND_TIMEChanged();
    partial void OnCALENDAR_NAMEChanging(string value);
    partial void OnCALENDAR_NAMEChanged();
    partial void OnMISFIRE_INSTRChanging(System.Nullable<short> value);
    partial void OnMISFIRE_INSTRChanged();
    partial void OnJOB_DATAChanging(System.Data.Linq.Binary value);
    partial void OnJOB_DATAChanged();
    #endregion
		
		public QRTZ_TRIGGER()
		{
			this._QRTZ_CRON_TRIGGER = default(EntityRef<QRTZ_CRON_TRIGGER>);
			this._QRTZ_SIMPLE_TRIGGER = default(EntityRef<QRTZ_SIMPLE_TRIGGER>);
			this._QRTZ_TRIGGER_LISTENERs = new EntitySet<QRTZ_TRIGGER_LISTENER>(new Action<QRTZ_TRIGGER_LISTENER>(this.attach_QRTZ_TRIGGER_LISTENERs), new Action<QRTZ_TRIGGER_LISTENER>(this.detach_QRTZ_TRIGGER_LISTENERs));
			this._QRTZ_JOB_DETAIL = default(EntityRef<QRTZ_JOB_DETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_NAME
		{
			get
			{
				return this._TRIGGER_NAME;
			}
			set
			{
				if ((this._TRIGGER_NAME != value))
				{
					this.OnTRIGGER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_NAME = value;
					this.SendPropertyChanged("TRIGGER_NAME");
					this.OnTRIGGER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TRIGGER_GROUP
		{
			get
			{
				return this._TRIGGER_GROUP;
			}
			set
			{
				if ((this._TRIGGER_GROUP != value))
				{
					this.OnTRIGGER_GROUPChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_GROUP = value;
					this.SendPropertyChanged("TRIGGER_GROUP");
					this.OnTRIGGER_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					if (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_GROUP", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string JOB_GROUP
		{
			get
			{
				return this._JOB_GROUP;
			}
			set
			{
				if ((this._JOB_GROUP != value))
				{
					if (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOB_GROUPChanging(value);
					this.SendPropertyChanging();
					this._JOB_GROUP = value;
					this.SendPropertyChanged("JOB_GROUP");
					this.OnJOB_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_VOLATILE", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IS_VOLATILE
		{
			get
			{
				return this._IS_VOLATILE;
			}
			set
			{
				if ((this._IS_VOLATILE != value))
				{
					this.OnIS_VOLATILEChanging(value);
					this.SendPropertyChanging();
					this._IS_VOLATILE = value;
					this.SendPropertyChanged("IS_VOLATILE");
					this.OnIS_VOLATILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(250)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXT_FIRE_TIME", DbType="BigInt")]
		public System.Nullable<long> NEXT_FIRE_TIME
		{
			get
			{
				return this._NEXT_FIRE_TIME;
			}
			set
			{
				if ((this._NEXT_FIRE_TIME != value))
				{
					this.OnNEXT_FIRE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._NEXT_FIRE_TIME = value;
					this.SendPropertyChanged("NEXT_FIRE_TIME");
					this.OnNEXT_FIRE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREV_FIRE_TIME", DbType="BigInt")]
		public System.Nullable<long> PREV_FIRE_TIME
		{
			get
			{
				return this._PREV_FIRE_TIME;
			}
			set
			{
				if ((this._PREV_FIRE_TIME != value))
				{
					this.OnPREV_FIRE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._PREV_FIRE_TIME = value;
					this.SendPropertyChanged("PREV_FIRE_TIME");
					this.OnPREV_FIRE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIORITY", DbType="Int")]
		public System.Nullable<int> PRIORITY
		{
			get
			{
				return this._PRIORITY;
			}
			set
			{
				if ((this._PRIORITY != value))
				{
					this.OnPRIORITYChanging(value);
					this.SendPropertyChanging();
					this._PRIORITY = value;
					this.SendPropertyChanged("PRIORITY");
					this.OnPRIORITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_STATE", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string TRIGGER_STATE
		{
			get
			{
				return this._TRIGGER_STATE;
			}
			set
			{
				if ((this._TRIGGER_STATE != value))
				{
					this.OnTRIGGER_STATEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_STATE = value;
					this.SendPropertyChanged("TRIGGER_STATE");
					this.OnTRIGGER_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRIGGER_TYPE", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string TRIGGER_TYPE
		{
			get
			{
				return this._TRIGGER_TYPE;
			}
			set
			{
				if ((this._TRIGGER_TYPE != value))
				{
					this.OnTRIGGER_TYPEChanging(value);
					this.SendPropertyChanging();
					this._TRIGGER_TYPE = value;
					this.SendPropertyChanged("TRIGGER_TYPE");
					this.OnTRIGGER_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_TIME", DbType="BigInt NOT NULL")]
		public long START_TIME
		{
			get
			{
				return this._START_TIME;
			}
			set
			{
				if ((this._START_TIME != value))
				{
					this.OnSTART_TIMEChanging(value);
					this.SendPropertyChanging();
					this._START_TIME = value;
					this.SendPropertyChanged("START_TIME");
					this.OnSTART_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_TIME", DbType="BigInt")]
		public System.Nullable<long> END_TIME
		{
			get
			{
				return this._END_TIME;
			}
			set
			{
				if ((this._END_TIME != value))
				{
					this.OnEND_TIMEChanging(value);
					this.SendPropertyChanging();
					this._END_TIME = value;
					this.SendPropertyChanged("END_TIME");
					this.OnEND_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALENDAR_NAME", DbType="VarChar(200)")]
		public string CALENDAR_NAME
		{
			get
			{
				return this._CALENDAR_NAME;
			}
			set
			{
				if ((this._CALENDAR_NAME != value))
				{
					this.OnCALENDAR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CALENDAR_NAME = value;
					this.SendPropertyChanged("CALENDAR_NAME");
					this.OnCALENDAR_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MISFIRE_INSTR", DbType="SmallInt")]
		public System.Nullable<short> MISFIRE_INSTR
		{
			get
			{
				return this._MISFIRE_INSTR;
			}
			set
			{
				if ((this._MISFIRE_INSTR != value))
				{
					this.OnMISFIRE_INSTRChanging(value);
					this.SendPropertyChanging();
					this._MISFIRE_INSTR = value;
					this.SendPropertyChanged("MISFIRE_INSTR");
					this.OnMISFIRE_INSTRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_DATA", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary JOB_DATA
		{
			get
			{
				return this._JOB_DATA;
			}
			set
			{
				if ((this._JOB_DATA != value))
				{
					this.OnJOB_DATAChanging(value);
					this.SendPropertyChanging();
					this._JOB_DATA = value;
					this.SendPropertyChanged("JOB_DATA");
					this.OnJOB_DATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS", Storage="_QRTZ_CRON_TRIGGER", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public QRTZ_CRON_TRIGGER QRTZ_CRON_TRIGGER
		{
			get
			{
				return this._QRTZ_CRON_TRIGGER.Entity;
			}
			set
			{
				QRTZ_CRON_TRIGGER previousValue = this._QRTZ_CRON_TRIGGER.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_CRON_TRIGGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_CRON_TRIGGER.Entity = null;
						previousValue.QRTZ_TRIGGER = null;
					}
					this._QRTZ_CRON_TRIGGER.Entity = value;
					if ((value != null))
					{
						value.QRTZ_TRIGGER = this;
					}
					this.SendPropertyChanged("QRTZ_CRON_TRIGGER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS", Storage="_QRTZ_SIMPLE_TRIGGER", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", IsUnique=true, IsForeignKey=false, DeleteRule="CASCADE")]
		public QRTZ_SIMPLE_TRIGGER QRTZ_SIMPLE_TRIGGER
		{
			get
			{
				return this._QRTZ_SIMPLE_TRIGGER.Entity;
			}
			set
			{
				QRTZ_SIMPLE_TRIGGER previousValue = this._QRTZ_SIMPLE_TRIGGER.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_SIMPLE_TRIGGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_SIMPLE_TRIGGER.Entity = null;
						previousValue.QRTZ_TRIGGER = null;
					}
					this._QRTZ_SIMPLE_TRIGGER.Entity = value;
					if ((value != null))
					{
						value.QRTZ_TRIGGER = this;
					}
					this.SendPropertyChanged("QRTZ_SIMPLE_TRIGGER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS", Storage="_QRTZ_TRIGGER_LISTENERs", ThisKey="TRIGGER_NAME,TRIGGER_GROUP", OtherKey="TRIGGER_NAME,TRIGGER_GROUP", DeleteRule="CASCADE")]
		public EntitySet<QRTZ_TRIGGER_LISTENER> QRTZ_TRIGGER_LISTENERs
		{
			get
			{
				return this._QRTZ_TRIGGER_LISTENERs;
			}
			set
			{
				this._QRTZ_TRIGGER_LISTENERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS", Storage="_QRTZ_JOB_DETAIL", ThisKey="JOB_NAME,JOB_GROUP", OtherKey="JOB_NAME,JOB_GROUP", IsForeignKey=true)]
		public QRTZ_JOB_DETAIL QRTZ_JOB_DETAIL
		{
			get
			{
				return this._QRTZ_JOB_DETAIL.Entity;
			}
			set
			{
				QRTZ_JOB_DETAIL previousValue = this._QRTZ_JOB_DETAIL.Entity;
				if (((previousValue != value) 
							|| (this._QRTZ_JOB_DETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QRTZ_JOB_DETAIL.Entity = null;
						previousValue.QRTZ_TRIGGERs.Remove(this);
					}
					this._QRTZ_JOB_DETAIL.Entity = value;
					if ((value != null))
					{
						value.QRTZ_TRIGGERs.Add(this);
						this._JOB_NAME = value.JOB_NAME;
						this._JOB_GROUP = value.JOB_GROUP;
					}
					else
					{
						this._JOB_NAME = default(string);
						this._JOB_GROUP = default(string);
					}
					this.SendPropertyChanged("QRTZ_JOB_DETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QRTZ_TRIGGER_LISTENERs(QRTZ_TRIGGER_LISTENER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_TRIGGER = this;
		}
		
		private void detach_QRTZ_TRIGGER_LISTENERs(QRTZ_TRIGGER_LISTENER entity)
		{
			this.SendPropertyChanging();
			entity.QRTZ_TRIGGER = null;
		}
	}
}
#pragma warning restore 1591
