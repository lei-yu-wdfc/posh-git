#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Comms
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Comms")]
	public partial class CommsDatabase : DbDatabase<CommsDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddressEntity(AddressEntity instance);
    partial void UpdateAddressEntity(AddressEntity instance);
    partial void DeleteAddressEntity(AddressEntity instance);
    partial void InsertAddressesCaEntity(AddressesCaEntity instance);
    partial void UpdateAddressesCaEntity(AddressesCaEntity instance);
    partial void DeleteAddressesCaEntity(AddressesCaEntity instance);
    partial void InsertContactPreferenceEntity(ContactPreferenceEntity instance);
    partial void UpdateContactPreferenceEntity(ContactPreferenceEntity instance);
    partial void DeleteContactPreferenceEntity(ContactPreferenceEntity instance);
    partial void InsertCustomerDetailEntity(CustomerDetailEntity instance);
    partial void UpdateCustomerDetailEntity(CustomerDetailEntity instance);
    partial void DeleteCustomerDetailEntity(CustomerDetailEntity instance);
    partial void InsertCustomerDetailsZaEntity(CustomerDetailsZaEntity instance);
    partial void UpdateCustomerDetailsZaEntity(CustomerDetailsZaEntity instance);
    partial void DeleteCustomerDetailsZaEntity(CustomerDetailsZaEntity instance);
    partial void InsertCustomerLeadEntity(CustomerLeadEntity instance);
    partial void UpdateCustomerLeadEntity(CustomerLeadEntity instance);
    partial void DeleteCustomerLeadEntity(CustomerLeadEntity instance);
    partial void InsertExtensionReminderPreferenceEntity(ExtensionReminderPreferenceEntity instance);
    partial void UpdateExtensionReminderPreferenceEntity(ExtensionReminderPreferenceEntity instance);
    partial void DeleteExtensionReminderPreferenceEntity(ExtensionReminderPreferenceEntity instance);
    partial void InsertLegalDocumentEntity(LegalDocumentEntity instance);
    partial void UpdateLegalDocumentEntity(LegalDocumentEntity instance);
    partial void DeleteLegalDocumentEntity(LegalDocumentEntity instance);
    partial void InsertMobilePhoneVerificationEntity(MobilePhoneVerificationEntity instance);
    partial void UpdateMobilePhoneVerificationEntity(MobilePhoneVerificationEntity instance);
    partial void DeleteMobilePhoneVerificationEntity(MobilePhoneVerificationEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertPhoneVerificationEntity(PhoneVerificationEntity instance);
    partial void UpdatePhoneVerificationEntity(PhoneVerificationEntity instance);
    partial void DeletePhoneVerificationEntity(PhoneVerificationEntity instance);
    partial void InsertVerificationPinEntity(VerificationPinEntity instance);
    partial void UpdateVerificationPinEntity(VerificationPinEntity instance);
    partial void DeleteVerificationPinEntity(VerificationPinEntity instance);
    #endregion
		
		public CommsDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommsDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommsDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommsDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AddressEntity> Addresses
		{
			get
			{
				return this.GetTable<AddressEntity>();
			}
		}
		
		public System.Data.Linq.Table<AddressesCaEntity> AddressesCas
		{
			get
			{
				return this.GetTable<AddressesCaEntity>();
			}
		}
		
		public System.Data.Linq.Table<ContactPreferenceEntity> ContactPreferences
		{
			get
			{
				return this.GetTable<ContactPreferenceEntity>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDetailEntity> CustomerDetails
		{
			get
			{
				return this.GetTable<CustomerDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDetailsZaEntity> CustomerDetailsZas
		{
			get
			{
				return this.GetTable<CustomerDetailsZaEntity>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLeadEntity> CustomerLeads
		{
			get
			{
				return this.GetTable<CustomerLeadEntity>();
			}
		}
		
		public System.Data.Linq.Table<ExtensionReminderPreferenceEntity> ExtensionReminderPreferences
		{
			get
			{
				return this.GetTable<ExtensionReminderPreferenceEntity>();
			}
		}
		
		public System.Data.Linq.Table<LegalDocumentEntity> LegalDocuments
		{
			get
			{
				return this.GetTable<LegalDocumentEntity>();
			}
		}
		
		public System.Data.Linq.Table<MobilePhoneVerificationEntity> MobilePhoneVerifications
		{
			get
			{
				return this.GetTable<MobilePhoneVerificationEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<PhoneVerificationEntity> PhoneVerifications
		{
			get
			{
				return this.GetTable<PhoneVerificationEntity>();
			}
		}
		
		public System.Data.Linq.Table<VerificationPinEntity> VerificationPins
		{
			get
			{
				return this.GetTable<VerificationPinEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.Addresses")]
	public partial class AddressEntity : DbEntity<AddressEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private string _Flat;
		
		private string _HouseName;
		
		private string _HouseNumber;
		
		private string _Street;
		
		private string _PostCode;
		
		private string _Town;
		
		private string _District;
		
		private string _County;
		
		private System.Nullable<int> _CountryCode;
		
		private System.Nullable<System.DateTime> _AtAddressFrom;
		
		private System.Nullable<System.DateTime> _AtAddressTo;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _Province;
		
		private EntitySet<AddressesCaEntity> _AddressesCas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnHouseNameChanging(string value);
    partial void OnHouseNameChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountryCodeChanging(System.Nullable<int> value);
    partial void OnCountryCodeChanged();
    partial void OnAtAddressFromChanging(System.Nullable<System.DateTime> value);
    partial void OnAtAddressFromChanged();
    partial void OnAtAddressToChanging(System.Nullable<System.DateTime> value);
    partial void OnAtAddressToChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    #endregion
		
		public AddressEntity()
		{
			this._AddressesCas = new EntitySet<AddressesCaEntity>(new Action<AddressesCaEntity>(this.attach_AddressesCas), new Action<AddressesCaEntity>(this.detach_AddressesCas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(20)")]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseName", DbType="NVarChar(32)")]
		public string HouseName
		{
			get
			{
				return this._HouseName;
			}
			set
			{
				if ((this._HouseName != value))
				{
					this.OnHouseNameChanging(value);
					this.SendPropertyChanging();
					this._HouseName = value;
					this.SendPropertyChanged("HouseName");
					this.OnHouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNumber", DbType="NVarChar(32)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(40)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(40)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(40)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(40)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Int")]
		public System.Nullable<int> CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtAddressFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> AtAddressFrom
		{
			get
			{
				return this._AtAddressFrom;
			}
			set
			{
				if ((this._AtAddressFrom != value))
				{
					this.OnAtAddressFromChanging(value);
					this.SendPropertyChanging();
					this._AtAddressFrom = value;
					this.SendPropertyChanged("AtAddressFrom");
					this.OnAtAddressFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtAddressTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> AtAddressTo
		{
			get
			{
				return this._AtAddressTo;
			}
			set
			{
				if ((this._AtAddressTo != value))
				{
					this.OnAtAddressToChanging(value);
					this.SendPropertyChanging();
					this._AtAddressTo = value;
					this.SendPropertyChanged("AtAddressTo");
					this.OnAtAddressToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(200)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AddressesCa_AddressId", Storage="_AddressesCas", ThisKey="AddressId", OtherKey="AddressId", DeleteRule="NO ACTION")]
		public EntitySet<AddressesCaEntity> AddressesCas
		{
			get
			{
				return this._AddressesCas;
			}
			set
			{
				this._AddressesCas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressesCas(AddressesCaEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = this;
		}
		
		private void detach_AddressesCas(AddressesCaEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.AddressesCa")]
	public partial class AddressesCaEntity : DbEntity<AddressesCaEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressesCaId;
		
		private System.Nullable<int> _AddressId;
		
		private string _PoBox;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private EntityRef<AddressEntity> _AddressEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressesCaIdChanging(int value);
    partial void OnAddressesCaIdChanged();
    partial void OnAddressIdChanging(System.Nullable<int> value);
    partial void OnAddressIdChanged();
    partial void OnPoBoxChanging(string value);
    partial void OnPoBoxChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public AddressesCaEntity()
		{
			this._AddressEntity = default(EntityRef<AddressEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressesCaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressesCaId
		{
			get
			{
				return this._AddressesCaId;
			}
			set
			{
				if ((this._AddressesCaId != value))
				{
					this.OnAddressesCaIdChanging(value);
					this.SendPropertyChanging();
					this._AddressesCaId = value;
					this.SendPropertyChanged("AddressesCaId");
					this.OnAddressesCaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="Int")]
		public System.Nullable<int> AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					if (this._AddressEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoBox", DbType="NVarChar(40)")]
		public string PoBox
		{
			get
			{
				return this._PoBox;
			}
			set
			{
				if ((this._PoBox != value))
				{
					this.OnPoBoxChanging(value);
					this.SendPropertyChanging();
					this._PoBox = value;
					this.SendPropertyChanged("PoBox");
					this.OnPoBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AddressesCa_AddressId", Storage="_AddressEntity", ThisKey="AddressId", OtherKey="AddressId", IsForeignKey=true)]
		public AddressEntity AddressEntity
		{
			get
			{
				return this._AddressEntity.Entity;
			}
			set
			{
				AddressEntity previousValue = this._AddressEntity.Entity;
				if (((previousValue != value) 
							|| (this._AddressEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressEntity.Entity = null;
						previousValue.AddressesCas.Remove(this);
					}
					this._AddressEntity.Entity = value;
					if ((value != null))
					{
						value.AddressesCas.Add(this);
						this._AddressId = value.AddressId;
					}
					else
					{
						this._AddressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddressEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.ContactPreferences")]
	public partial class ContactPreferenceEntity : DbEntity<ContactPreferenceEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactPreferenceId;
		
		private System.Guid _AccountId;
		
		private bool _AcceptMarketingContact;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactPreferenceIdChanging(int value);
    partial void OnContactPreferenceIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnAcceptMarketingContactChanging(bool value);
    partial void OnAcceptMarketingContactChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ContactPreferenceEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPreferenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactPreferenceId
		{
			get
			{
				return this._ContactPreferenceId;
			}
			set
			{
				if ((this._ContactPreferenceId != value))
				{
					this.OnContactPreferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ContactPreferenceId = value;
					this.SendPropertyChanged("ContactPreferenceId");
					this.OnContactPreferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptMarketingContact", DbType="Bit NOT NULL")]
		public bool AcceptMarketingContact
		{
			get
			{
				return this._AcceptMarketingContact;
			}
			set
			{
				if ((this._AcceptMarketingContact != value))
				{
					this.OnAcceptMarketingContactChanging(value);
					this.SendPropertyChanging();
					this._AcceptMarketingContact = value;
					this.SendPropertyChanged("AcceptMarketingContact");
					this.OnAcceptMarketingContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.CustomerDetails")]
	public partial class CustomerDetailEntity : DbEntity<CustomerDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerDetailId;
		
		private System.Guid _AccountId;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _Gender;
		
		private System.Nullable<int> _Title;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MiddleName;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _WorkPhone;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _NationalNumber;
		
		private System.Nullable<bool> _MarriedInCommunityProperty;
		
		private bool _HasAccount;
		
		private string _MaidenName;
		
		private EntityRef<CustomerDetailsZaEntity> _CustomerDetailsZaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerDetailIdChanging(int value);
    partial void OnCustomerDetailIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnTitleChanging(System.Nullable<int> value);
    partial void OnTitleChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnNationalNumberChanging(string value);
    partial void OnNationalNumberChanged();
    partial void OnMarriedInCommunityPropertyChanging(System.Nullable<bool> value);
    partial void OnMarriedInCommunityPropertyChanged();
    partial void OnHasAccountChanging(bool value);
    partial void OnHasAccountChanged();
    partial void OnMaidenNameChanging(string value);
    partial void OnMaidenNameChanged();
    #endregion
		
		public CustomerDetailEntity()
		{
			this._CustomerDetailsZaEntity = default(EntityRef<CustomerDetailsZaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerDetailId
		{
			get
			{
				return this._CustomerDetailId;
			}
			set
			{
				if ((this._CustomerDetailId != value))
				{
					this.OnCustomerDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerDetailId = value;
					this.SendPropertyChanged("CustomerDetailId");
					this.OnCustomerDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="Int")]
		public System.Nullable<int> Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(16)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(16)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(16)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalNumber", DbType="NVarChar(13)")]
		public string NationalNumber
		{
			get
			{
				return this._NationalNumber;
			}
			set
			{
				if ((this._NationalNumber != value))
				{
					this.OnNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._NationalNumber = value;
					this.SendPropertyChanged("NationalNumber");
					this.OnNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedInCommunityProperty", DbType="Bit")]
		public System.Nullable<bool> MarriedInCommunityProperty
		{
			get
			{
				return this._MarriedInCommunityProperty;
			}
			set
			{
				if ((this._MarriedInCommunityProperty != value))
				{
					this.OnMarriedInCommunityPropertyChanging(value);
					this.SendPropertyChanging();
					this._MarriedInCommunityProperty = value;
					this.SendPropertyChanged("MarriedInCommunityProperty");
					this.OnMarriedInCommunityPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAccount", DbType="Bit NOT NULL")]
		public bool HasAccount
		{
			get
			{
				return this._HasAccount;
			}
			set
			{
				if ((this._HasAccount != value))
				{
					this.OnHasAccountChanging(value);
					this.SendPropertyChanging();
					this._HasAccount = value;
					this.SendPropertyChanged("HasAccount");
					this.OnHasAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaidenName", DbType="NVarChar(50)")]
		public string MaidenName
		{
			get
			{
				return this._MaidenName;
			}
			set
			{
				if ((this._MaidenName != value))
				{
					this.OnMaidenNameChanging(value);
					this.SendPropertyChanging();
					this._MaidenName = value;
					this.SendPropertyChanged("MaidenName");
					this.OnMaidenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerDetailsZa_CustomerDetailId", Storage="_CustomerDetailsZaEntity", ThisKey="CustomerDetailId", OtherKey="CustomerDetailId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public CustomerDetailsZaEntity CustomerDetailsZaEntity
		{
			get
			{
				return this._CustomerDetailsZaEntity.Entity;
			}
			set
			{
				CustomerDetailsZaEntity previousValue = this._CustomerDetailsZaEntity.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetailsZaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetailsZaEntity.Entity = null;
						previousValue.CustomerDetailEntity = null;
					}
					this._CustomerDetailsZaEntity.Entity = value;
					if ((value != null))
					{
						value.CustomerDetailEntity = this;
					}
					this.SendPropertyChanged("CustomerDetailsZaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.CustomerDetailsZa")]
	public partial class CustomerDetailsZaEntity : DbEntity<CustomerDetailsZaEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerDetailZaId;
		
		private int _CustomerDetailId;
		
		private System.Nullable<int> _HomeLanguage;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<CustomerDetailEntity> _CustomerDetailEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerDetailZaIdChanging(int value);
    partial void OnCustomerDetailZaIdChanged();
    partial void OnCustomerDetailIdChanging(int value);
    partial void OnCustomerDetailIdChanged();
    partial void OnHomeLanguageChanging(System.Nullable<int> value);
    partial void OnHomeLanguageChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public CustomerDetailsZaEntity()
		{
			this._CustomerDetailEntity = default(EntityRef<CustomerDetailEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDetailZaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerDetailZaId
		{
			get
			{
				return this._CustomerDetailZaId;
			}
			set
			{
				if ((this._CustomerDetailZaId != value))
				{
					this.OnCustomerDetailZaIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerDetailZaId = value;
					this.SendPropertyChanged("CustomerDetailZaId");
					this.OnCustomerDetailZaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDetailId", DbType="Int NOT NULL")]
		public int CustomerDetailId
		{
			get
			{
				return this._CustomerDetailId;
			}
			set
			{
				if ((this._CustomerDetailId != value))
				{
					if (this._CustomerDetailEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerDetailId = value;
					this.SendPropertyChanged("CustomerDetailId");
					this.OnCustomerDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeLanguage", DbType="Int")]
		public System.Nullable<int> HomeLanguage
		{
			get
			{
				return this._HomeLanguage;
			}
			set
			{
				if ((this._HomeLanguage != value))
				{
					this.OnHomeLanguageChanging(value);
					this.SendPropertyChanging();
					this._HomeLanguage = value;
					this.SendPropertyChanged("HomeLanguage");
					this.OnHomeLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CustomerDetailsZa_CustomerDetailId", Storage="_CustomerDetailEntity", ThisKey="CustomerDetailId", OtherKey="CustomerDetailId", IsForeignKey=true)]
		public CustomerDetailEntity CustomerDetailEntity
		{
			get
			{
				return this._CustomerDetailEntity.Entity;
			}
			set
			{
				CustomerDetailEntity previousValue = this._CustomerDetailEntity.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetailEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetailEntity.Entity = null;
						previousValue.CustomerDetailsZaEntity = null;
					}
					this._CustomerDetailEntity.Entity = value;
					if ((value != null))
					{
						value.CustomerDetailsZaEntity = this;
						this._CustomerDetailId = value.CustomerDetailId;
					}
					else
					{
						this._CustomerDetailId = default(int);
					}
					this.SendPropertyChanged("CustomerDetailEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.CustomerLeads")]
	public partial class CustomerLeadEntity : DbEntity<CustomerLeadEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerLeadId;
		
		private System.Guid _ExternalId;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private System.DateTime _RejectedDate;
		
		private System.DateTime _CreatedOn;
		
		private string _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerLeadIdChanging(int value);
    partial void OnCustomerLeadIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRejectedDateChanging(System.DateTime value);
    partial void OnRejectedDateChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    #endregion
		
		public CustomerLeadEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLeadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerLeadId
		{
			get
			{
				return this._CustomerLeadId;
			}
			set
			{
				if ((this._CustomerLeadId != value))
				{
					this.OnCustomerLeadIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerLeadId = value;
					this.SendPropertyChanged("CustomerLeadId");
					this.OnCustomerLeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="NVarChar(50)")]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(16)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedDate", DbType="Date NOT NULL")]
		public System.DateTime RejectedDate
		{
			get
			{
				return this._RejectedDate;
			}
			set
			{
				if ((this._RejectedDate != value))
				{
					this.OnRejectedDateChanging(value);
					this.SendPropertyChanging();
					this._RejectedDate = value;
					this.SendPropertyChanged("RejectedDate");
					this.OnRejectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(200)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.ExtensionReminderPreferences")]
	public partial class ExtensionReminderPreferenceEntity : DbEntity<ExtensionReminderPreferenceEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtensionReminderPreferenceId;
		
		private System.Guid _AccountId;
		
		private System.Guid _ApplicationId;
		
		private int _ExtensionReminderPreference;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtensionReminderPreferenceIdChanging(int value);
    partial void OnExtensionReminderPreferenceIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnExtensionReminderPreferenceChanging(int value);
    partial void OnExtensionReminderPreferenceChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ExtensionReminderPreferenceEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionReminderPreferenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtensionReminderPreferenceId
		{
			get
			{
				return this._ExtensionReminderPreferenceId;
			}
			set
			{
				if ((this._ExtensionReminderPreferenceId != value))
				{
					this.OnExtensionReminderPreferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ExtensionReminderPreferenceId = value;
					this.SendPropertyChanged("ExtensionReminderPreferenceId");
					this.OnExtensionReminderPreferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionReminderPreference", DbType="Int NOT NULL")]
		public int ExtensionReminderPreference
		{
			get
			{
				return this._ExtensionReminderPreference;
			}
			set
			{
				if ((this._ExtensionReminderPreference != value))
				{
					this.OnExtensionReminderPreferenceChanging(value);
					this.SendPropertyChanging();
					this._ExtensionReminderPreference = value;
					this.SendPropertyChanged("ExtensionReminderPreference");
					this.OnExtensionReminderPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.LegalDocuments")]
	public partial class LegalDocumentEntity : DbEntity<LegalDocumentEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LegalDocumentId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private System.Guid _ApplicationId;
		
		private byte _DocumentType;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLegalDocumentIdChanging(int value);
    partial void OnLegalDocumentIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDocumentTypeChanging(byte value);
    partial void OnDocumentTypeChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public LegalDocumentEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalDocumentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LegalDocumentId
		{
			get
			{
				return this._LegalDocumentId;
			}
			set
			{
				if ((this._LegalDocumentId != value))
				{
					this.OnLegalDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._LegalDocumentId = value;
					this.SendPropertyChanged("LegalDocumentId");
					this.OnLegalDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="TinyInt NOT NULL")]
		public byte DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.MobilePhoneVerification")]
	public partial class MobilePhoneVerificationEntity : DbEntity<MobilePhoneVerificationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MobilePhoneVerificationId;
		
		private System.Guid _VerificationId;
		
		private System.Guid _AccountId;
		
		private string _MobilePhone;
		
		private string _Pin;
		
		private System.Nullable<System.DateTime> _MobileVerifiedOn;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobilePhoneVerificationIdChanging(int value);
    partial void OnMobilePhoneVerificationIdChanged();
    partial void OnVerificationIdChanging(System.Guid value);
    partial void OnVerificationIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPinChanging(string value);
    partial void OnPinChanged();
    partial void OnMobileVerifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnMobileVerifiedOnChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public MobilePhoneVerificationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhoneVerificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MobilePhoneVerificationId
		{
			get
			{
				return this._MobilePhoneVerificationId;
			}
			set
			{
				if ((this._MobilePhoneVerificationId != value))
				{
					this.OnMobilePhoneVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._MobilePhoneVerificationId = value;
					this.SendPropertyChanged("MobilePhoneVerificationId");
					this.OnMobilePhoneVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VerificationId
		{
			get
			{
				return this._VerificationId;
			}
			set
			{
				if ((this._VerificationId != value))
				{
					this.OnVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationId = value;
					this.SendPropertyChanged("VerificationId");
					this.OnVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileVerifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> MobileVerifiedOn
		{
			get
			{
				return this._MobileVerifiedOn;
			}
			set
			{
				if ((this._MobileVerifiedOn != value))
				{
					this.OnMobileVerifiedOnChanging(value);
					this.SendPropertyChanging();
					this._MobileVerifiedOn = value;
					this.SendPropertyChanged("MobileVerifiedOn");
					this.OnMobileVerifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.PhoneVerification")]
	public partial class PhoneVerificationEntity : DbEntity<PhoneVerificationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneVerificationId;
		
		private System.Guid _VerificationId;
		
		private System.Guid _AccountId;
		
		private string _Phone;
		
		private string _Pin;
		
		private System.Nullable<System.DateTime> _VerifiedOn;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneVerificationIdChanging(int value);
    partial void OnPhoneVerificationIdChanged();
    partial void OnVerificationIdChanging(System.Guid value);
    partial void OnVerificationIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPinChanging(string value);
    partial void OnPinChanged();
    partial void OnVerifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifiedOnChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public PhoneVerificationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneVerificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneVerificationId
		{
			get
			{
				return this._PhoneVerificationId;
			}
			set
			{
				if ((this._PhoneVerificationId != value))
				{
					this.OnPhoneVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneVerificationId = value;
					this.SendPropertyChanged("PhoneVerificationId");
					this.OnPhoneVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VerificationId
		{
			get
			{
				return this._VerificationId;
			}
			set
			{
				if ((this._VerificationId != value))
				{
					this.OnVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationId = value;
					this.SendPropertyChanged("VerificationId");
					this.OnVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> VerifiedOn
		{
			get
			{
				return this._VerifiedOn;
			}
			set
			{
				if ((this._VerifiedOn != value))
				{
					this.OnVerifiedOnChanging(value);
					this.SendPropertyChanging();
					this._VerifiedOn = value;
					this.SendPropertyChanged("VerifiedOn");
					this.OnVerifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="comms.VerificationPins")]
	public partial class VerificationPinEntity : DbEntity<VerificationPinEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VerificationPinId;
		
		private System.Guid _AccountId;
		
		private string _MobilePhone;
		
		private string _Pin;
		
		private System.Nullable<System.DateTime> _MobileVerifiedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVerificationPinIdChanging(int value);
    partial void OnVerificationPinIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPinChanging(string value);
    partial void OnPinChanged();
    partial void OnMobileVerifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnMobileVerifiedOnChanged();
    #endregion
		
		public VerificationPinEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationPinId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VerificationPinId
		{
			get
			{
				return this._VerificationPinId;
			}
			set
			{
				if ((this._VerificationPinId != value))
				{
					this.OnVerificationPinIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationPinId = value;
					this.SendPropertyChanged("VerificationPinId");
					this.OnVerificationPinIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileVerifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> MobileVerifiedOn
		{
			get
			{
				return this._MobileVerifiedOn;
			}
			set
			{
				if ((this._MobileVerifiedOn != value))
				{
					this.OnMobileVerifiedOnChanging(value);
					this.SendPropertyChanging();
					this._MobileVerifiedOn = value;
					this.SendPropertyChanged("MobileVerifiedOn");
					this.OnMobileVerifiedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
