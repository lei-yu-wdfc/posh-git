#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Ops
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ops")]
	public partial class OpsDatabase : DbDatabase<OpsDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountEntity(AccountEntity instance);
    partial void UpdateAccountEntity(AccountEntity instance);
    partial void DeleteAccountEntity(AccountEntity instance);
    partial void InsertApiClientEntity(ApiClientEntity instance);
    partial void UpdateApiClientEntity(ApiClientEntity instance);
    partial void DeleteApiClientEntity(ApiClientEntity instance);
    partial void InsertBinarySagaEntity(BinarySagaEntity instance);
    partial void UpdateBinarySagaEntity(BinarySagaEntity instance);
    partial void DeleteBinarySagaEntity(BinarySagaEntity instance);
    partial void InsertEndpointEntity(EndpointEntity instance);
    partial void UpdateEndpointEntity(EndpointEntity instance);
    partial void DeleteEndpointEntity(EndpointEntity instance);
    partial void InsertEndpointSettingEntity(EndpointSettingEntity instance);
    partial void UpdateEndpointSettingEntity(EndpointSettingEntity instance);
    partial void DeleteEndpointSettingEntity(EndpointSettingEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertPasswordRecoveryDetailEntity(PasswordRecoveryDetailEntity instance);
    partial void UpdatePasswordRecoveryDetailEntity(PasswordRecoveryDetailEntity instance);
    partial void DeletePasswordRecoveryDetailEntity(PasswordRecoveryDetailEntity instance);
    partial void InsertPwdResetKeyEntity(PwdResetKeyEntity instance);
    partial void UpdatePwdResetKeyEntity(PwdResetKeyEntity instance);
    partial void DeletePwdResetKeyEntity(PwdResetKeyEntity instance);
    partial void InsertServiceConfigurationEntity(ServiceConfigurationEntity instance);
    partial void UpdateServiceConfigurationEntity(ServiceConfigurationEntity instance);
    partial void DeleteServiceConfigurationEntity(ServiceConfigurationEntity instance);
    #endregion
		
		public OpsDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountEntity> Accounts
		{
			get
			{
				return this.GetTable<AccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<ApiClientEntity> ApiClients
		{
			get
			{
				return this.GetTable<ApiClientEntity>();
			}
		}
		
		public System.Data.Linq.Table<BinarySagaEntity> BinarySagas
		{
			get
			{
				return this.GetTable<BinarySagaEntity>();
			}
		}
		
		public System.Data.Linq.Table<EndpointEntity> Endpoints
		{
			get
			{
				return this.GetTable<EndpointEntity>();
			}
		}
		
		public System.Data.Linq.Table<EndpointSettingEntity> EndpointSettings
		{
			get
			{
				return this.GetTable<EndpointSettingEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<PasswordRecoveryDetailEntity> PasswordRecoveryDetails
		{
			get
			{
				return this.GetTable<PasswordRecoveryDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<PwdResetKeyEntity> PwdResetKeys
		{
			get
			{
				return this.GetTable<PwdResetKeyEntity>();
			}
		}
		
		public System.Data.Linq.Table<ServiceConfigurationEntity> ServiceConfigurations
		{
			get
			{
				return this.GetTable<ServiceConfigurationEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.Accounts")]
	public partial class AccountEntity : DbEntity<AccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private System.Guid _ExternalId;
		
		private string _Login;
		
		private System.DateTime _CreatedOn;
		
		private System.Data.Linq.Binary _Password;
		
		private System.Data.Linq.Binary _Salt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnSaltChanging(System.Data.Linq.Binary value);
    partial void OnSaltChanged();
    #endregion
		
		public AccountEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(64) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="VarBinary(8) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.ApiClients")]
	public partial class ApiClientEntity : DbEntity<ApiClientEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApiClientId;
		
		private string _Name;
		
		private System.Guid _AuthToken;
		
		private string _Description;
		
		private bool _Enabled;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApiClientIdChanging(int value);
    partial void OnApiClientIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAuthTokenChanging(System.Guid value);
    partial void OnAuthTokenChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ApiClientEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiClientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApiClientId
		{
			get
			{
				return this._ApiClientId;
			}
			set
			{
				if ((this._ApiClientId != value))
				{
					this.OnApiClientIdChanging(value);
					this.SendPropertyChanging();
					this._ApiClientId = value;
					this.SendPropertyChanged("ApiClientId");
					this.OnApiClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthToken", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AuthToken
		{
			get
			{
				return this._AuthToken;
			}
			set
			{
				if ((this._AuthToken != value))
				{
					this.OnAuthTokenChanging(value);
					this.SendPropertyChanging();
					this._AuthToken = value;
					this.SendPropertyChanged("AuthToken");
					this.OnAuthTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.BinarySagas")]
	public partial class BinarySagaEntity : DbEntity<BinarySagaEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BinarySagaId;
		
		private System.Guid _SagaId;
		
		private string _SagaType;
		
		private System.Data.Linq.Binary _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBinarySagaIdChanging(int value);
    partial void OnBinarySagaIdChanged();
    partial void OnSagaIdChanging(System.Guid value);
    partial void OnSagaIdChanged();
    partial void OnSagaTypeChanging(string value);
    partial void OnSagaTypeChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    #endregion
		
		public BinarySagaEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinarySagaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BinarySagaId
		{
			get
			{
				return this._BinarySagaId;
			}
			set
			{
				if ((this._BinarySagaId != value))
				{
					this.OnBinarySagaIdChanging(value);
					this.SendPropertyChanging();
					this._BinarySagaId = value;
					this.SendPropertyChanged("BinarySagaId");
					this.OnBinarySagaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SagaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SagaId
		{
			get
			{
				return this._SagaId;
			}
			set
			{
				if ((this._SagaId != value))
				{
					this.OnSagaIdChanging(value);
					this.SendPropertyChanging();
					this._SagaId = value;
					this.SendPropertyChanged("SagaId");
					this.OnSagaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SagaType", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string SagaType
		{
			get
			{
				return this._SagaType;
			}
			set
			{
				if ((this._SagaType != value))
				{
					this.OnSagaTypeChanging(value);
					this.SendPropertyChanging();
					this._SagaType = value;
					this.SendPropertyChanged("SagaType");
					this.OnSagaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.Endpoints")]
	public partial class EndpointEntity : DbEntity<EndpointEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EndpointId;
		
		private string _Name;
		
		private EntitySet<EndpointSettingEntity> _EndpointSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEndpointIdChanging(int value);
    partial void OnEndpointIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EndpointEntity()
		{
			this._EndpointSettings = new EntitySet<EndpointSettingEntity>(new Action<EndpointSettingEntity>(this.attach_EndpointSettings), new Action<EndpointSettingEntity>(this.detach_EndpointSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndpointId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EndpointId
		{
			get
			{
				return this._EndpointId;
			}
			set
			{
				if ((this._EndpointId != value))
				{
					this.OnEndpointIdChanging(value);
					this.SendPropertyChanging();
					this._EndpointId = value;
					this.SendPropertyChanged("EndpointId");
					this.OnEndpointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ops_EndpointSettings_EndpointId", Storage="_EndpointSettings", ThisKey="EndpointId", OtherKey="EndpointId", DeleteRule="NO ACTION")]
		public EntitySet<EndpointSettingEntity> EndpointSettings
		{
			get
			{
				return this._EndpointSettings;
			}
			set
			{
				this._EndpointSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EndpointSettings(EndpointSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.EndpointEntity = this;
		}
		
		private void detach_EndpointSettings(EndpointSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.EndpointEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.EndpointSettings")]
	public partial class EndpointSettingEntity : DbEntity<EndpointSettingEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EndpointSettingId;
		
		private System.Nullable<int> _EndpointId;
		
		private string _Key;
		
		private string _Value;
		
		private EntityRef<EndpointEntity> _EndpointEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEndpointSettingIdChanging(int value);
    partial void OnEndpointSettingIdChanged();
    partial void OnEndpointIdChanging(System.Nullable<int> value);
    partial void OnEndpointIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public EndpointSettingEntity()
		{
			this._EndpointEntity = default(EntityRef<EndpointEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndpointSettingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EndpointSettingId
		{
			get
			{
				return this._EndpointSettingId;
			}
			set
			{
				if ((this._EndpointSettingId != value))
				{
					this.OnEndpointSettingIdChanging(value);
					this.SendPropertyChanging();
					this._EndpointSettingId = value;
					this.SendPropertyChanged("EndpointSettingId");
					this.OnEndpointSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndpointId", DbType="Int")]
		public System.Nullable<int> EndpointId
		{
			get
			{
				return this._EndpointId;
			}
			set
			{
				if ((this._EndpointId != value))
				{
					if (this._EndpointEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndpointIdChanging(value);
					this.SendPropertyChanging();
					this._EndpointId = value;
					this.SendPropertyChanged("EndpointId");
					this.OnEndpointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ops_EndpointSettings_EndpointId", Storage="_EndpointEntity", ThisKey="EndpointId", OtherKey="EndpointId", IsForeignKey=true)]
		public EndpointEntity EndpointEntity
		{
			get
			{
				return this._EndpointEntity.Entity;
			}
			set
			{
				EndpointEntity previousValue = this._EndpointEntity.Entity;
				if (((previousValue != value) 
							|| (this._EndpointEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EndpointEntity.Entity = null;
						previousValue.EndpointSettings.Remove(this);
					}
					this._EndpointEntity.Entity = value;
					if ((value != null))
					{
						value.EndpointSettings.Add(this);
						this._EndpointId = value.EndpointId;
					}
					else
					{
						this._EndpointId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EndpointEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.PasswordRecoveryDetails")]
	public partial class PasswordRecoveryDetailEntity : DbEntity<PasswordRecoveryDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PasswordRecoveryDetailId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private string _SecretQuestion;
		
		private string _SecretAnswer;
		
		private System.Nullable<System.DateTime> _ExpiredOn;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPasswordRecoveryDetailIdChanging(int value);
    partial void OnPasswordRecoveryDetailIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnSecretQuestionChanging(string value);
    partial void OnSecretQuestionChanged();
    partial void OnSecretAnswerChanging(string value);
    partial void OnSecretAnswerChanged();
    partial void OnExpiredOnChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public PasswordRecoveryDetailEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordRecoveryDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PasswordRecoveryDetailId
		{
			get
			{
				return this._PasswordRecoveryDetailId;
			}
			set
			{
				if ((this._PasswordRecoveryDetailId != value))
				{
					this.OnPasswordRecoveryDetailIdChanging(value);
					this.SendPropertyChanging();
					this._PasswordRecoveryDetailId = value;
					this.SendPropertyChanged("PasswordRecoveryDetailId");
					this.OnPasswordRecoveryDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretQuestion", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string SecretQuestion
		{
			get
			{
				return this._SecretQuestion;
			}
			set
			{
				if ((this._SecretQuestion != value))
				{
					this.OnSecretQuestionChanging(value);
					this.SendPropertyChanging();
					this._SecretQuestion = value;
					this.SendPropertyChanged("SecretQuestion");
					this.OnSecretQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretAnswer", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string SecretAnswer
		{
			get
			{
				return this._SecretAnswer;
			}
			set
			{
				if ((this._SecretAnswer != value))
				{
					this.OnSecretAnswerChanging(value);
					this.SendPropertyChanging();
					this._SecretAnswer = value;
					this.SendPropertyChanged("SecretAnswer");
					this.OnSecretAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredOn
		{
			get
			{
				return this._ExpiredOn;
			}
			set
			{
				if ((this._ExpiredOn != value))
				{
					this.OnExpiredOnChanging(value);
					this.SendPropertyChanging();
					this._ExpiredOn = value;
					this.SendPropertyChanged("ExpiredOn");
					this.OnExpiredOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.PwdResetKeys")]
	public partial class PwdResetKeyEntity : DbEntity<PwdResetKeyEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PwdResetKeyId;
		
		private System.Guid _NotificationId;
		
		private string _UniqueKey;
		
		private System.Nullable<System.Guid> _AccountId;
		
		private System.DateTime _ExpireDate;
		
		private System.Nullable<System.DateTime> _ResetDate;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPwdResetKeyIdChanging(int value);
    partial void OnPwdResetKeyIdChanged();
    partial void OnNotificationIdChanging(System.Guid value);
    partial void OnNotificationIdChanged();
    partial void OnUniqueKeyChanging(string value);
    partial void OnUniqueKeyChanged();
    partial void OnAccountIdChanging(System.Nullable<System.Guid> value);
    partial void OnAccountIdChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnResetDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResetDateChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public PwdResetKeyEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwdResetKeyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PwdResetKeyId
		{
			get
			{
				return this._PwdResetKeyId;
			}
			set
			{
				if ((this._PwdResetKeyId != value))
				{
					this.OnPwdResetKeyIdChanging(value);
					this.SendPropertyChanging();
					this._PwdResetKeyId = value;
					this.SendPropertyChanged("PwdResetKeyId");
					this.OnPwdResetKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NotificationId
		{
			get
			{
				return this._NotificationId;
			}
			set
			{
				if ((this._NotificationId != value))
				{
					this.OnNotificationIdChanging(value);
					this.SendPropertyChanging();
					this._NotificationId = value;
					this.SendPropertyChanged("NotificationId");
					this.OnNotificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueKey", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string UniqueKey
		{
			get
			{
				return this._UniqueKey;
			}
			set
			{
				if ((this._UniqueKey != value))
				{
					this.OnUniqueKeyChanging(value);
					this.SendPropertyChanging();
					this._UniqueKey = value;
					this.SendPropertyChanged("UniqueKey");
					this.OnUniqueKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResetDate
		{
			get
			{
				return this._ResetDate;
			}
			set
			{
				if ((this._ResetDate != value))
				{
					this.OnResetDateChanging(value);
					this.SendPropertyChanging();
					this._ResetDate = value;
					this.SendPropertyChanged("ResetDate");
					this.OnResetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ops.ServiceConfigurations")]
	public partial class ServiceConfigurationEntity : DbEntity<ServiceConfigurationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceConfigurationId;
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceConfigurationIdChanging(int value);
    partial void OnServiceConfigurationIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ServiceConfigurationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceConfigurationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceConfigurationId
		{
			get
			{
				return this._ServiceConfigurationId;
			}
			set
			{
				if ((this._ServiceConfigurationId != value))
				{
					this.OnServiceConfigurationIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceConfigurationId = value;
					this.SendPropertyChanged("ServiceConfigurationId");
					this.OnServiceConfigurationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
