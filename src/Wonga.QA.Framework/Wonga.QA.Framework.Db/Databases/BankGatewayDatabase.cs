#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.BankGateway
{
	using Wonga.QA.Framework.Db;
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BankGateway")]
	public partial class BankGatewayDatabase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAcknowledge(Acknowledge instance);
    partial void UpdateAcknowledge(Acknowledge instance);
    partial void DeleteAcknowledge(Acknowledge instance);
    partial void InsertAcknowledgeType(AcknowledgeType instance);
    partial void UpdateAcknowledgeType(AcknowledgeType instance);
    partial void DeleteAcknowledgeType(AcknowledgeType instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertBankAccountDetail(BankAccountDetail instance);
    partial void UpdateBankAccountDetail(BankAccountDetail instance);
    partial void DeleteBankAccountDetail(BankAccountDetail instance);
    partial void InsertBankAccountVerification(BankAccountVerification instance);
    partial void UpdateBankAccountVerification(BankAccountVerification instance);
    partial void DeleteBankAccountVerification(BankAccountVerification instance);
    partial void InsertBankAccountVerificationResponse(BankAccountVerificationResponse instance);
    partial void UpdateBankAccountVerificationResponse(BankAccountVerificationResponse instance);
    partial void DeleteBankAccountVerificationResponse(BankAccountVerificationResponse instance);
    partial void InsertBankIntegrationHoliday(BankIntegrationHoliday instance);
    partial void UpdateBankIntegrationHoliday(BankIntegrationHoliday instance);
    partial void DeleteBankIntegrationHoliday(BankIntegrationHoliday instance);
    partial void InsertBankIntegration(BankIntegration instance);
    partial void UpdateBankIntegration(BankIntegration instance);
    partial void DeleteBankIntegration(BankIntegration instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertDirectDebit(DirectDebit instance);
    partial void UpdateDirectDebit(DirectDebit instance);
    partial void DeleteDirectDebit(DirectDebit instance);
    partial void InsertError(Error instance);
    partial void UpdateError(Error instance);
    partial void DeleteError(Error instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertNaedoDocType(NaedoDocType instance);
    partial void UpdateNaedoDocType(NaedoDocType instance);
    partial void DeleteNaedoDocType(NaedoDocType instance);
    partial void InsertOrderingClient(OrderingClient instance);
    partial void UpdateOrderingClient(OrderingClient instance);
    partial void DeleteOrderingClient(OrderingClient instance);
    partial void InsertPaymentSchedule(PaymentSchedule instance);
    partial void UpdatePaymentSchedule(PaymentSchedule instance);
    partial void DeletePaymentSchedule(PaymentSchedule instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertServiceType(ServiceType instance);
    partial void UpdateServiceType(ServiceType instance);
    partial void DeleteServiceType(ServiceType instance);
    partial void InsertSortCode(SortCode instance);
    partial void UpdateSortCode(SortCode instance);
    partial void DeleteSortCode(SortCode instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public BankGatewayDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankGatewayDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankGatewayDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankGatewayDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Acknowledge> Acknowledges
		{
			get
			{
				return this.GetTable<Acknowledge>().SetTable<Acknowledge>();
			}
		}
		
		public System.Data.Linq.Table<AcknowledgeType> AcknowledgeTypes
		{
			get
			{
				return this.GetTable<AcknowledgeType>().SetTable<AcknowledgeType>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>().SetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountDetail> BankAccountDetails
		{
			get
			{
				return this.GetTable<BankAccountDetail>().SetTable<BankAccountDetail>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountVerification> BankAccountVerifications
		{
			get
			{
				return this.GetTable<BankAccountVerification>().SetTable<BankAccountVerification>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountVerificationResponse> BankAccountVerificationResponses
		{
			get
			{
				return this.GetTable<BankAccountVerificationResponse>().SetTable<BankAccountVerificationResponse>();
			}
		}
		
		public System.Data.Linq.Table<BankIntegrationHoliday> BankIntegrationHolidays
		{
			get
			{
				return this.GetTable<BankIntegrationHoliday>().SetTable<BankIntegrationHoliday>();
			}
		}
		
		public System.Data.Linq.Table<BankIntegration> BankIntegrations
		{
			get
			{
				return this.GetTable<BankIntegration>().SetTable<BankIntegration>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>().SetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<DirectDebit> DirectDebits
		{
			get
			{
				return this.GetTable<DirectDebit>().SetTable<DirectDebit>();
			}
		}
		
		public System.Data.Linq.Table<Error> Errors
		{
			get
			{
				return this.GetTable<Error>().SetTable<Error>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>().SetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>().SetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<NaedoDocType> NaedoDocTypes
		{
			get
			{
				return this.GetTable<NaedoDocType>().SetTable<NaedoDocType>();
			}
		}
		
		public System.Data.Linq.Table<OrderingClient> OrderingClients
		{
			get
			{
				return this.GetTable<OrderingClient>().SetTable<OrderingClient>();
			}
		}
		
		public System.Data.Linq.Table<PaymentSchedule> PaymentSchedules
		{
			get
			{
				return this.GetTable<PaymentSchedule>().SetTable<PaymentSchedule>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>().SetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<ServiceType> ServiceTypes
		{
			get
			{
				return this.GetTable<ServiceType>().SetTable<ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<SortCode> SortCodes
		{
			get
			{
				return this.GetTable<SortCode>().SetTable<SortCode>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>().SetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Acknowledges")]
	public partial class Acknowledge : DbEntity<Acknowledge>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AcknowledgeId;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _FileContent;
		
		private System.Nullable<int> _TransactionID;
		
		private System.Nullable<int> _AcknowledgeTypeID;
		
		private string _HeaderRecord;
		
		private string _SummaryRecord;
		
		private string _ErrorRecord;
		
		private string _TrailerRecord;
		
		private bool _HasError;
		
		private System.Nullable<int> _ErrorCodeID;
		
		private string _ErrorMsg;
		
		private string _InfoMsg;
		
		private System.DateTime _CreationDate;
		
		private string _IncomingReference;
		
		private EntityRef<AcknowledgeType> _AcknowledgeType;
		
		private EntityRef<Error> _Error;
		
		private EntityRef<Transaction> _Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcknowledgeIdChanging(int value);
    partial void OnAcknowledgeIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(System.Data.Linq.Binary value);
    partial void OnFileContentChanged();
    partial void OnTransactionIDChanging(System.Nullable<int> value);
    partial void OnTransactionIDChanged();
    partial void OnAcknowledgeTypeIDChanging(System.Nullable<int> value);
    partial void OnAcknowledgeTypeIDChanged();
    partial void OnHeaderRecordChanging(string value);
    partial void OnHeaderRecordChanged();
    partial void OnSummaryRecordChanging(string value);
    partial void OnSummaryRecordChanged();
    partial void OnErrorRecordChanging(string value);
    partial void OnErrorRecordChanged();
    partial void OnTrailerRecordChanging(string value);
    partial void OnTrailerRecordChanged();
    partial void OnHasErrorChanging(bool value);
    partial void OnHasErrorChanged();
    partial void OnErrorCodeIDChanging(System.Nullable<int> value);
    partial void OnErrorCodeIDChanged();
    partial void OnErrorMsgChanging(string value);
    partial void OnErrorMsgChanged();
    partial void OnInfoMsgChanging(string value);
    partial void OnInfoMsgChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnIncomingReferenceChanging(string value);
    partial void OnIncomingReferenceChanged();
    #endregion
		
		public Acknowledge()
		{
			this._AcknowledgeType = default(EntityRef<AcknowledgeType>);
			this._Error = default(EntityRef<Error>);
			this._Transaction = default(EntityRef<Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AcknowledgeId
		{
			get
			{
				return this._AcknowledgeId;
			}
			set
			{
				if ((this._AcknowledgeId != value))
				{
					this.OnAcknowledgeIdChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeId = value;
					this.SendPropertyChanged("AcknowledgeId");
					this.OnAcknowledgeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int")]
		public System.Nullable<int> TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeTypeID", DbType="Int")]
		public System.Nullable<int> AcknowledgeTypeID
		{
			get
			{
				return this._AcknowledgeTypeID;
			}
			set
			{
				if ((this._AcknowledgeTypeID != value))
				{
					if (this._AcknowledgeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcknowledgeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeTypeID = value;
					this.SendPropertyChanged("AcknowledgeTypeID");
					this.OnAcknowledgeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderRecord", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string HeaderRecord
		{
			get
			{
				return this._HeaderRecord;
			}
			set
			{
				if ((this._HeaderRecord != value))
				{
					this.OnHeaderRecordChanging(value);
					this.SendPropertyChanging();
					this._HeaderRecord = value;
					this.SendPropertyChanged("HeaderRecord");
					this.OnHeaderRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryRecord", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SummaryRecord
		{
			get
			{
				return this._SummaryRecord;
			}
			set
			{
				if ((this._SummaryRecord != value))
				{
					this.OnSummaryRecordChanging(value);
					this.SendPropertyChanging();
					this._SummaryRecord = value;
					this.SendPropertyChanged("SummaryRecord");
					this.OnSummaryRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorRecord", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrorRecord
		{
			get
			{
				return this._ErrorRecord;
			}
			set
			{
				if ((this._ErrorRecord != value))
				{
					this.OnErrorRecordChanging(value);
					this.SendPropertyChanging();
					this._ErrorRecord = value;
					this.SendPropertyChanged("ErrorRecord");
					this.OnErrorRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrailerRecord", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string TrailerRecord
		{
			get
			{
				return this._TrailerRecord;
			}
			set
			{
				if ((this._TrailerRecord != value))
				{
					this.OnTrailerRecordChanging(value);
					this.SendPropertyChanging();
					this._TrailerRecord = value;
					this.SendPropertyChanged("TrailerRecord");
					this.OnTrailerRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit NOT NULL")]
		public bool HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCodeID", DbType="Int")]
		public System.Nullable<int> ErrorCodeID
		{
			get
			{
				return this._ErrorCodeID;
			}
			set
			{
				if ((this._ErrorCodeID != value))
				{
					if (this._Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnErrorCodeIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorCodeID = value;
					this.SendPropertyChanged("ErrorCodeID");
					this.OnErrorCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this.OnErrorMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrorMsg = value;
					this.SendPropertyChanged("ErrorMsg");
					this.OnErrorMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoMsg", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InfoMsg
		{
			get
			{
				return this._InfoMsg;
			}
			set
			{
				if ((this._InfoMsg != value))
				{
					this.OnInfoMsgChanging(value);
					this.SendPropertyChanging();
					this._InfoMsg = value;
					this.SendPropertyChanged("InfoMsg");
					this.OnInfoMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomingReference", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string IncomingReference
		{
			get
			{
				return this._IncomingReference;
			}
			set
			{
				if ((this._IncomingReference != value))
				{
					this.OnIncomingReferenceChanging(value);
					this.SendPropertyChanging();
					this._IncomingReference = value;
					this.SendPropertyChanged("IncomingReference");
					this.OnIncomingReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcknowledgeType_Acknowledges_FK1", Storage="_AcknowledgeType", ThisKey="AcknowledgeTypeID", OtherKey="AcknowledgeTypeId", IsForeignKey=true)]
		public AcknowledgeType AcknowledgeType
		{
			get
			{
				return this._AcknowledgeType.Entity;
			}
			set
			{
				AcknowledgeType previousValue = this._AcknowledgeType.Entity;
				if (((previousValue != value) 
							|| (this._AcknowledgeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcknowledgeType.Entity = null;
						previousValue.Acknowledges.Remove(this);
					}
					this._AcknowledgeType.Entity = value;
					if ((value != null))
					{
						value.Acknowledges.Add(this);
						this._AcknowledgeTypeID = value.AcknowledgeTypeId;
					}
					else
					{
						this._AcknowledgeTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AcknowledgeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ErrorCodes_Acknowledges_FK1", Storage="_Error", ThisKey="ErrorCodeID", OtherKey="ErrorId", IsForeignKey=true)]
		public Error Error
		{
			get
			{
				return this._Error.Entity;
			}
			set
			{
				Error previousValue = this._Error.Entity;
				if (((previousValue != value) 
							|| (this._Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Error.Entity = null;
						previousValue.Acknowledges.Remove(this);
					}
					this._Error.Entity = value;
					if ((value != null))
					{
						value.Acknowledges.Add(this);
						this._ErrorCodeID = value.ErrorId;
					}
					else
					{
						this._ErrorCodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Error");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transactions_Acknowledges_FK1", Storage="_Transaction", ThisKey="TransactionID", OtherKey="TransactionId", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.Acknowledges.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.Acknowledges.Add(this);
						this._TransactionID = value.TransactionId;
					}
					else
					{
						this._TransactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.AcknowledgeTypes")]
	public partial class AcknowledgeType : DbEntity<AcknowledgeType>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AcknowledgeTypeId;
		
		private string _Name;
		
		private string _Description;
		
		private int _BankIntegrationId;
		
		private string _Identifier;
		
		private EntitySet<Acknowledge> _Acknowledges;
		
		private EntitySet<Error> _Errors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcknowledgeTypeIdChanging(int value);
    partial void OnAcknowledgeTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBankIntegrationIdChanging(int value);
    partial void OnBankIntegrationIdChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    #endregion
		
		public AcknowledgeType()
		{
			this._Acknowledges = new EntitySet<Acknowledge>(new Action<Acknowledge>(this.attach_Acknowledges), new Action<Acknowledge>(this.detach_Acknowledges));
			this._Errors = new EntitySet<Error>(new Action<Error>(this.attach_Errors), new Action<Error>(this.detach_Errors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AcknowledgeTypeId
		{
			get
			{
				return this._AcknowledgeTypeId;
			}
			set
			{
				if ((this._AcknowledgeTypeId != value))
				{
					this.OnAcknowledgeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeTypeId = value;
					this.SendPropertyChanged("AcknowledgeTypeId");
					this.OnAcknowledgeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIntegrationId", DbType="Int NOT NULL")]
		public int BankIntegrationId
		{
			get
			{
				return this._BankIntegrationId;
			}
			set
			{
				if ((this._BankIntegrationId != value))
				{
					this.OnBankIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._BankIntegrationId = value;
					this.SendPropertyChanged("BankIntegrationId");
					this.OnBankIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="VarChar(250)")]
		public string Identifier
		{
			get
			{
				return this._Identifier;
			}
			set
			{
				if ((this._Identifier != value))
				{
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcknowledgeType_Acknowledges_FK1", Storage="_Acknowledges", ThisKey="AcknowledgeTypeId", OtherKey="AcknowledgeTypeID", DeleteRule="NO ACTION")]
		public EntitySet<Acknowledge> Acknowledges
		{
			get
			{
				return this._Acknowledges;
			}
			set
			{
				this._Acknowledges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcknowledgeType_ErrorCodes_FK1", Storage="_Errors", ThisKey="AcknowledgeTypeId", OtherKey="AcknowledgeTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Error> Errors
		{
			get
			{
				return this._Errors;
			}
			set
			{
				this._Errors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.AcknowledgeType = this;
		}
		
		private void detach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.AcknowledgeType = null;
		}
		
		private void attach_Errors(Error entity)
		{
			this.SendPropertyChanging();
			entity.AcknowledgeType = this;
		}
		
		private void detach_Errors(Error entity)
		{
			this.SendPropertyChanging();
			entity.AcknowledgeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Address")]
	public partial class Address : DbEntity<Address>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private string _Country;
		
		private string _City;
		
		private string _Street;
		
		private string _HouseNumberOrName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseNumberOrNameChanging(string value);
    partial void OnHouseNumberOrNameChanged();
    #endregion
		
		public Address()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(250)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(250)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNumberOrName", DbType="NVarChar(250)")]
		public string HouseNumberOrName
		{
			get
			{
				return this._HouseNumberOrName;
			}
			set
			{
				if ((this._HouseNumberOrName != value))
				{
					this.OnHouseNumberOrNameChanging(value);
					this.SendPropertyChanging();
					this._HouseNumberOrName = value;
					this.SendPropertyChanged("HouseNumberOrName");
					this.OnHouseNumberOrNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.BankAccountDetails")]
	public partial class BankAccountDetail : DbEntity<BankAccountDetail>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountDetailId;
		
		private System.Nullable<int> _AccountType;
		
		private System.Data.Linq.Binary _AccountNumber;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _EmailAddress;
		
		private string _RemittanceInformation;
		
		private System.DateTime _CreationDate;
		
		private string _NationalNumber;
		
		private string _BankCode;
		
		private string _CompanyName;
		
		private string _HolderName;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _Town;
		
		private string _Country;
		
		private string _County;
		
		private string _PostCode;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<BankAccountVerification> _BankAccountVerifications;
		
		private EntityRef<DirectDebit> _DirectDebit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountDetailIdChanging(int value);
    partial void OnBankAccountDetailIdChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    partial void OnAccountNumberChanging(System.Data.Linq.Binary value);
    partial void OnAccountNumberChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnRemittanceInformationChanging(string value);
    partial void OnRemittanceInformationChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnNationalNumberChanging(string value);
    partial void OnNationalNumberChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    #endregion
		
		public BankAccountDetail()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._BankAccountVerifications = new EntitySet<BankAccountVerification>(new Action<BankAccountVerification>(this.attach_BankAccountVerifications), new Action<BankAccountVerification>(this.detach_BankAccountVerifications));
			this._DirectDebit = default(EntityRef<DirectDebit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankAccountDetailId
		{
			get
			{
				return this._BankAccountDetailId;
			}
			set
			{
				if ((this._BankAccountDetailId != value))
				{
					this.OnBankAccountDetailIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountDetailId = value;
					this.SendPropertyChanged("BankAccountDetailId");
					this.OnBankAccountDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarBinary(250) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(250)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(250)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(250)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceInformation", DbType="NVarChar(16)")]
		public string RemittanceInformation
		{
			get
			{
				return this._RemittanceInformation;
			}
			set
			{
				if ((this._RemittanceInformation != value))
				{
					this.OnRemittanceInformationChanging(value);
					this.SendPropertyChanging();
					this._RemittanceInformation = value;
					this.SendPropertyChanged("RemittanceInformation");
					this.OnRemittanceInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalNumber", DbType="VarChar(20)")]
		public string NationalNumber
		{
			get
			{
				return this._NationalNumber;
			}
			set
			{
				if ((this._NationalNumber != value))
				{
					this.OnNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._NationalNumber = value;
					this.SendPropertyChanged("NationalNumber");
					this.OnNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(255)")]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(40)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(40)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(40)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountDetail_Transactions_FK1", Storage="_Transactions", ThisKey="BankAccountDetailId", OtherKey="BankAccountDetailID", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerification_BankAccountDetails_BankAccountDetailId_FK1", Storage="_BankAccountVerifications", ThisKey="BankAccountDetailId", OtherKey="BankAccountDetailId", DeleteRule="NO ACTION")]
		public EntitySet<BankAccountVerification> BankAccountVerifications
		{
			get
			{
				return this._BankAccountVerifications;
			}
			set
			{
				this._BankAccountVerifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DirectDebits_BankAccountDetails", Storage="_DirectDebit", ThisKey="BankAccountDetailId", OtherKey="DirectDebitId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public DirectDebit DirectDebit
		{
			get
			{
				return this._DirectDebit.Entity;
			}
			set
			{
				DirectDebit previousValue = this._DirectDebit.Entity;
				if (((previousValue != value) 
							|| (this._DirectDebit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DirectDebit.Entity = null;
						previousValue.BankAccountDetail = null;
					}
					this._DirectDebit.Entity = value;
					if ((value != null))
					{
						value.BankAccountDetail = this;
					}
					this.SendPropertyChanged("DirectDebit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountDetail = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountDetail = null;
		}
		
		private void attach_BankAccountVerifications(BankAccountVerification entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountDetail = this;
		}
		
		private void detach_BankAccountVerifications(BankAccountVerification entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.BankAccountVerification")]
	public partial class BankAccountVerification : DbEntity<BankAccountVerification>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountVerificationId;
		
		private string _SenderReference;
		
		private System.Nullable<int> _FileId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _BankAccountDetailId;
		
		private EntityRef<BankAccountDetail> _BankAccountDetail;
		
		private EntityRef<File> _File;
		
		private EntitySet<BankAccountVerificationResponse> _BankAccountVerificationResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountVerificationIdChanging(int value);
    partial void OnBankAccountVerificationIdChanged();
    partial void OnSenderReferenceChanging(string value);
    partial void OnSenderReferenceChanged();
    partial void OnFileIdChanging(System.Nullable<int> value);
    partial void OnFileIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnBankAccountDetailIdChanging(System.Nullable<int> value);
    partial void OnBankAccountDetailIdChanged();
    #endregion
		
		public BankAccountVerification()
		{
			this._BankAccountDetail = default(EntityRef<BankAccountDetail>);
			this._File = default(EntityRef<File>);
			this._BankAccountVerificationResponses = new EntitySet<BankAccountVerificationResponse>(new Action<BankAccountVerificationResponse>(this.attach_BankAccountVerificationResponses), new Action<BankAccountVerificationResponse>(this.detach_BankAccountVerificationResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountVerificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankAccountVerificationId
		{
			get
			{
				return this._BankAccountVerificationId;
			}
			set
			{
				if ((this._BankAccountVerificationId != value))
				{
					this.OnBankAccountVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountVerificationId = value;
					this.SendPropertyChanged("BankAccountVerificationId");
					this.OnBankAccountVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderReference
		{
			get
			{
				return this._SenderReference;
			}
			set
			{
				if ((this._SenderReference != value))
				{
					this.OnSenderReferenceChanging(value);
					this.SendPropertyChanging();
					this._SenderReference = value;
					this.SendPropertyChanged("SenderReference");
					this.OnSenderReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int")]
		public System.Nullable<int> FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountDetailId", DbType="Int")]
		public System.Nullable<int> BankAccountDetailId
		{
			get
			{
				return this._BankAccountDetailId;
			}
			set
			{
				if ((this._BankAccountDetailId != value))
				{
					if (this._BankAccountDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountDetailIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountDetailId = value;
					this.SendPropertyChanged("BankAccountDetailId");
					this.OnBankAccountDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerification_BankAccountDetails_BankAccountDetailId_FK1", Storage="_BankAccountDetail", ThisKey="BankAccountDetailId", OtherKey="BankAccountDetailId", IsForeignKey=true)]
		public BankAccountDetail BankAccountDetail
		{
			get
			{
				return this._BankAccountDetail.Entity;
			}
			set
			{
				BankAccountDetail previousValue = this._BankAccountDetail.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountDetail.Entity = null;
						previousValue.BankAccountVerifications.Remove(this);
					}
					this._BankAccountDetail.Entity = value;
					if ((value != null))
					{
						value.BankAccountVerifications.Add(this);
						this._BankAccountDetailId = value.BankAccountDetailId;
					}
					else
					{
						this._BankAccountDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccountDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerification_Files_FileId_FK1", Storage="_File", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.BankAccountVerifications.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.BankAccountVerifications.Add(this);
						this._FileId = value.FileId;
					}
					else
					{
						this._FileId = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerificationResponses_BankAccountVerification_BankAccountVerificationI" +
			"d_FK", Storage="_BankAccountVerificationResponses", ThisKey="BankAccountVerificationId", OtherKey="BankAccountVerificationId", DeleteRule="NO ACTION")]
		public EntitySet<BankAccountVerificationResponse> BankAccountVerificationResponses
		{
			get
			{
				return this._BankAccountVerificationResponses;
			}
			set
			{
				this._BankAccountVerificationResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankAccountVerificationResponses(BankAccountVerificationResponse entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountVerification = this;
		}
		
		private void detach_BankAccountVerificationResponses(BankAccountVerificationResponse entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountVerification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.BankAccountVerificationResponses")]
	public partial class BankAccountVerificationResponse : DbEntity<BankAccountVerificationResponse>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountVerificationResponseId;
		
		private System.Nullable<int> _BankAccountVerificationId;
		
		private System.Nullable<bool> _IsValidAccountNumber;
		
		private System.Nullable<bool> _IsMatchNationalNumber;
		
		private System.Nullable<bool> _IsMatchLastName;
		
		private System.Nullable<bool> _IsActiveAccountNumber;
		
		private string _ErrorMessage;
		
		private string _RawResponse;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<bool> _IsActiveMoreThanThreeMonths;
		
		private System.Nullable<bool> _AcceptsCredits;
		
		private System.Nullable<bool> _AcceptsDebits;
		
		private EntityRef<BankAccountVerification> _BankAccountVerification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountVerificationResponseIdChanging(int value);
    partial void OnBankAccountVerificationResponseIdChanged();
    partial void OnBankAccountVerificationIdChanging(System.Nullable<int> value);
    partial void OnBankAccountVerificationIdChanged();
    partial void OnIsValidAccountNumberChanging(System.Nullable<bool> value);
    partial void OnIsValidAccountNumberChanged();
    partial void OnIsMatchNationalNumberChanging(System.Nullable<bool> value);
    partial void OnIsMatchNationalNumberChanged();
    partial void OnIsMatchLastNameChanging(System.Nullable<bool> value);
    partial void OnIsMatchLastNameChanged();
    partial void OnIsActiveAccountNumberChanging(System.Nullable<bool> value);
    partial void OnIsActiveAccountNumberChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnRawResponseChanging(string value);
    partial void OnRawResponseChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveMoreThanThreeMonthsChanging(System.Nullable<bool> value);
    partial void OnIsActiveMoreThanThreeMonthsChanged();
    partial void OnAcceptsCreditsChanging(System.Nullable<bool> value);
    partial void OnAcceptsCreditsChanged();
    partial void OnAcceptsDebitsChanging(System.Nullable<bool> value);
    partial void OnAcceptsDebitsChanged();
    #endregion
		
		public BankAccountVerificationResponse()
		{
			this._BankAccountVerification = default(EntityRef<BankAccountVerification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountVerificationResponseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankAccountVerificationResponseId
		{
			get
			{
				return this._BankAccountVerificationResponseId;
			}
			set
			{
				if ((this._BankAccountVerificationResponseId != value))
				{
					this.OnBankAccountVerificationResponseIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountVerificationResponseId = value;
					this.SendPropertyChanged("BankAccountVerificationResponseId");
					this.OnBankAccountVerificationResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountVerificationId", DbType="Int")]
		public System.Nullable<int> BankAccountVerificationId
		{
			get
			{
				return this._BankAccountVerificationId;
			}
			set
			{
				if ((this._BankAccountVerificationId != value))
				{
					if (this._BankAccountVerification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountVerificationId = value;
					this.SendPropertyChanged("BankAccountVerificationId");
					this.OnBankAccountVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidAccountNumber", DbType="Bit")]
		public System.Nullable<bool> IsValidAccountNumber
		{
			get
			{
				return this._IsValidAccountNumber;
			}
			set
			{
				if ((this._IsValidAccountNumber != value))
				{
					this.OnIsValidAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._IsValidAccountNumber = value;
					this.SendPropertyChanged("IsValidAccountNumber");
					this.OnIsValidAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatchNationalNumber", DbType="Bit")]
		public System.Nullable<bool> IsMatchNationalNumber
		{
			get
			{
				return this._IsMatchNationalNumber;
			}
			set
			{
				if ((this._IsMatchNationalNumber != value))
				{
					this.OnIsMatchNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._IsMatchNationalNumber = value;
					this.SendPropertyChanged("IsMatchNationalNumber");
					this.OnIsMatchNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatchLastName", DbType="Bit")]
		public System.Nullable<bool> IsMatchLastName
		{
			get
			{
				return this._IsMatchLastName;
			}
			set
			{
				if ((this._IsMatchLastName != value))
				{
					this.OnIsMatchLastNameChanging(value);
					this.SendPropertyChanging();
					this._IsMatchLastName = value;
					this.SendPropertyChanged("IsMatchLastName");
					this.OnIsMatchLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveAccountNumber", DbType="Bit")]
		public System.Nullable<bool> IsActiveAccountNumber
		{
			get
			{
				return this._IsActiveAccountNumber;
			}
			set
			{
				if ((this._IsActiveAccountNumber != value))
				{
					this.OnIsActiveAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._IsActiveAccountNumber = value;
					this.SendPropertyChanged("IsActiveAccountNumber");
					this.OnIsActiveAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(50)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawResponse", DbType="NVarChar(300)")]
		public string RawResponse
		{
			get
			{
				return this._RawResponse;
			}
			set
			{
				if ((this._RawResponse != value))
				{
					this.OnRawResponseChanging(value);
					this.SendPropertyChanging();
					this._RawResponse = value;
					this.SendPropertyChanged("RawResponse");
					this.OnRawResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveMoreThanThreeMonths", DbType="Bit")]
		public System.Nullable<bool> IsActiveMoreThanThreeMonths
		{
			get
			{
				return this._IsActiveMoreThanThreeMonths;
			}
			set
			{
				if ((this._IsActiveMoreThanThreeMonths != value))
				{
					this.OnIsActiveMoreThanThreeMonthsChanging(value);
					this.SendPropertyChanging();
					this._IsActiveMoreThanThreeMonths = value;
					this.SendPropertyChanged("IsActiveMoreThanThreeMonths");
					this.OnIsActiveMoreThanThreeMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsCredits", DbType="Bit")]
		public System.Nullable<bool> AcceptsCredits
		{
			get
			{
				return this._AcceptsCredits;
			}
			set
			{
				if ((this._AcceptsCredits != value))
				{
					this.OnAcceptsCreditsChanging(value);
					this.SendPropertyChanging();
					this._AcceptsCredits = value;
					this.SendPropertyChanged("AcceptsCredits");
					this.OnAcceptsCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsDebits", DbType="Bit")]
		public System.Nullable<bool> AcceptsDebits
		{
			get
			{
				return this._AcceptsDebits;
			}
			set
			{
				if ((this._AcceptsDebits != value))
				{
					this.OnAcceptsDebitsChanging(value);
					this.SendPropertyChanging();
					this._AcceptsDebits = value;
					this.SendPropertyChanged("AcceptsDebits");
					this.OnAcceptsDebitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerificationResponses_BankAccountVerification_BankAccountVerificationI" +
			"d_FK", Storage="_BankAccountVerification", ThisKey="BankAccountVerificationId", OtherKey="BankAccountVerificationId", IsForeignKey=true)]
		public BankAccountVerification BankAccountVerification
		{
			get
			{
				return this._BankAccountVerification.Entity;
			}
			set
			{
				BankAccountVerification previousValue = this._BankAccountVerification.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountVerification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountVerification.Entity = null;
						previousValue.BankAccountVerificationResponses.Remove(this);
					}
					this._BankAccountVerification.Entity = value;
					if ((value != null))
					{
						value.BankAccountVerificationResponses.Add(this);
						this._BankAccountVerificationId = value.BankAccountVerificationId;
					}
					else
					{
						this._BankAccountVerificationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccountVerification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.BankIntegrationHolidays")]
	public partial class BankIntegrationHoliday : DbEntity<BankIntegrationHoliday>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankIntegrationHolidayId;
		
		private System.DateTime _HolidayDate;
		
		private int _BankIntegrationId;
		
		private EntityRef<BankIntegration> _BankIntegration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIntegrationHolidayIdChanging(int value);
    partial void OnBankIntegrationHolidayIdChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    partial void OnBankIntegrationIdChanging(int value);
    partial void OnBankIntegrationIdChanged();
    #endregion
		
		public BankIntegrationHoliday()
		{
			this._BankIntegration = default(EntityRef<BankIntegration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIntegrationHolidayId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankIntegrationHolidayId
		{
			get
			{
				return this._BankIntegrationHolidayId;
			}
			set
			{
				if ((this._BankIntegrationHolidayId != value))
				{
					this.OnBankIntegrationHolidayIdChanging(value);
					this.SendPropertyChanging();
					this._BankIntegrationHolidayId = value;
					this.SendPropertyChanged("BankIntegrationHolidayId");
					this.OnBankIntegrationHolidayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIntegrationId", DbType="Int NOT NULL")]
		public int BankIntegrationId
		{
			get
			{
				return this._BankIntegrationId;
			}
			set
			{
				if ((this._BankIntegrationId != value))
				{
					if (this._BankIntegration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._BankIntegrationId = value;
					this.SendPropertyChanged("BankIntegrationId");
					this.OnBankIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BankIntegrationHolidays_BankIntegrations", Storage="_BankIntegration", ThisKey="BankIntegrationId", OtherKey="BankIntegrationId", IsForeignKey=true)]
		public BankIntegration BankIntegration
		{
			get
			{
				return this._BankIntegration.Entity;
			}
			set
			{
				BankIntegration previousValue = this._BankIntegration.Entity;
				if (((previousValue != value) 
							|| (this._BankIntegration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankIntegration.Entity = null;
						previousValue.BankIntegrationHolidays.Remove(this);
					}
					this._BankIntegration.Entity = value;
					if ((value != null))
					{
						value.BankIntegrationHolidays.Add(this);
						this._BankIntegrationId = value.BankIntegrationId;
					}
					else
					{
						this._BankIntegrationId = default(int);
					}
					this.SendPropertyChanged("BankIntegration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.BankIntegrations")]
	public partial class BankIntegration : DbEntity<BankIntegration>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankIntegrationId;
		
		private string _Description;
		
		private int _PollingInterval;
		
		private bool _Preferred;
		
		private System.DateTime _MondayToFridayStartTime;
		
		private System.DateTime _MondayToFridayEndTime;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _SaturdayStartTime;
		
		private System.Nullable<System.DateTime> _SaturdayEndTime;
		
		private System.Nullable<System.DateTime> _SundayStartTime;
		
		private System.Nullable<System.DateTime> _SundayEndTime;
		
		private string _BatchMessageType;
		
		private EntitySet<BankIntegrationHoliday> _BankIntegrationHolidays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIntegrationIdChanging(int value);
    partial void OnBankIntegrationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPollingIntervalChanging(int value);
    partial void OnPollingIntervalChanged();
    partial void OnPreferredChanging(bool value);
    partial void OnPreferredChanged();
    partial void OnMondayToFridayStartTimeChanging(System.DateTime value);
    partial void OnMondayToFridayStartTimeChanged();
    partial void OnMondayToFridayEndTimeChanging(System.DateTime value);
    partial void OnMondayToFridayEndTimeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSaturdayStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSaturdayStartTimeChanged();
    partial void OnSaturdayEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSaturdayEndTimeChanged();
    partial void OnSundayStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSundayStartTimeChanged();
    partial void OnSundayEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSundayEndTimeChanged();
    partial void OnBatchMessageTypeChanging(string value);
    partial void OnBatchMessageTypeChanged();
    #endregion
		
		public BankIntegration()
		{
			this._BankIntegrationHolidays = new EntitySet<BankIntegrationHoliday>(new Action<BankIntegrationHoliday>(this.attach_BankIntegrationHolidays), new Action<BankIntegrationHoliday>(this.detach_BankIntegrationHolidays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIntegrationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankIntegrationId
		{
			get
			{
				return this._BankIntegrationId;
			}
			set
			{
				if ((this._BankIntegrationId != value))
				{
					this.OnBankIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._BankIntegrationId = value;
					this.SendPropertyChanged("BankIntegrationId");
					this.OnBankIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollingInterval", DbType="Int NOT NULL")]
		public int PollingInterval
		{
			get
			{
				return this._PollingInterval;
			}
			set
			{
				if ((this._PollingInterval != value))
				{
					this.OnPollingIntervalChanging(value);
					this.SendPropertyChanging();
					this._PollingInterval = value;
					this.SendPropertyChanged("PollingInterval");
					this.OnPollingIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preferred", DbType="Bit NOT NULL")]
		public bool Preferred
		{
			get
			{
				return this._Preferred;
			}
			set
			{
				if ((this._Preferred != value))
				{
					this.OnPreferredChanging(value);
					this.SendPropertyChanging();
					this._Preferred = value;
					this.SendPropertyChanged("Preferred");
					this.OnPreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MondayToFridayStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime MondayToFridayStartTime
		{
			get
			{
				return this._MondayToFridayStartTime;
			}
			set
			{
				if ((this._MondayToFridayStartTime != value))
				{
					this.OnMondayToFridayStartTimeChanging(value);
					this.SendPropertyChanging();
					this._MondayToFridayStartTime = value;
					this.SendPropertyChanged("MondayToFridayStartTime");
					this.OnMondayToFridayStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MondayToFridayEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime MondayToFridayEndTime
		{
			get
			{
				return this._MondayToFridayEndTime;
			}
			set
			{
				if ((this._MondayToFridayEndTime != value))
				{
					this.OnMondayToFridayEndTimeChanging(value);
					this.SendPropertyChanging();
					this._MondayToFridayEndTime = value;
					this.SendPropertyChanged("MondayToFridayEndTime");
					this.OnMondayToFridayEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaturdayStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaturdayStartTime
		{
			get
			{
				return this._SaturdayStartTime;
			}
			set
			{
				if ((this._SaturdayStartTime != value))
				{
					this.OnSaturdayStartTimeChanging(value);
					this.SendPropertyChanging();
					this._SaturdayStartTime = value;
					this.SendPropertyChanged("SaturdayStartTime");
					this.OnSaturdayStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaturdayEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaturdayEndTime
		{
			get
			{
				return this._SaturdayEndTime;
			}
			set
			{
				if ((this._SaturdayEndTime != value))
				{
					this.OnSaturdayEndTimeChanging(value);
					this.SendPropertyChanging();
					this._SaturdayEndTime = value;
					this.SendPropertyChanged("SaturdayEndTime");
					this.OnSaturdayEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SundayStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SundayStartTime
		{
			get
			{
				return this._SundayStartTime;
			}
			set
			{
				if ((this._SundayStartTime != value))
				{
					this.OnSundayStartTimeChanging(value);
					this.SendPropertyChanging();
					this._SundayStartTime = value;
					this.SendPropertyChanged("SundayStartTime");
					this.OnSundayStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SundayEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SundayEndTime
		{
			get
			{
				return this._SundayEndTime;
			}
			set
			{
				if ((this._SundayEndTime != value))
				{
					this.OnSundayEndTimeChanging(value);
					this.SendPropertyChanging();
					this._SundayEndTime = value;
					this.SendPropertyChanged("SundayEndTime");
					this.OnSundayEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchMessageType", DbType="VarChar(200)")]
		public string BatchMessageType
		{
			get
			{
				return this._BatchMessageType;
			}
			set
			{
				if ((this._BatchMessageType != value))
				{
					this.OnBatchMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._BatchMessageType = value;
					this.SendPropertyChanged("BatchMessageType");
					this.OnBatchMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BankIntegrationHolidays_BankIntegrations", Storage="_BankIntegrationHolidays", ThisKey="BankIntegrationId", OtherKey="BankIntegrationId", DeleteRule="NO ACTION")]
		public EntitySet<BankIntegrationHoliday> BankIntegrationHolidays
		{
			get
			{
				return this._BankIntegrationHolidays;
			}
			set
			{
				this._BankIntegrationHolidays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankIntegrationHolidays(BankIntegrationHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BankIntegration = this;
		}
		
		private void detach_BankIntegrationHolidays(BankIntegrationHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BankIntegration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Banks")]
	public partial class Bank : DbEntity<Bank>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankId;
		
		private string _BankName;
		
		private string _Description;
		
		private EntitySet<SortCode> _SortCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Bank()
		{
			this._SortCodes = new EntitySet<SortCode>(new Action<SortCode>(this.attach_SortCodes), new Action<SortCode>(this.detach_SortCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banks_SortCodes_FK1", Storage="_SortCodes", ThisKey="BankId", OtherKey="BankID", DeleteRule="NO ACTION")]
		public EntitySet<SortCode> SortCodes
		{
			get
			{
				return this._SortCodes;
			}
			set
			{
				this._SortCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SortCodes(SortCode entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_SortCodes(SortCode entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.DirectDebits")]
	public partial class DirectDebit : DbEntity<DirectDebit>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectDebitId;
		
		private System.Guid _ApplicationId;
		
		private System.Guid _AccountId;
		
		private string _Reference;
		
		private System.Nullable<System.Guid> _DebtorId;
		
		private System.Nullable<System.Guid> _PaymentPlanId;
		
		private System.DateTime _CreationDate;
		
		private System.Nullable<int> _BankAccountDetailId;
		
		private System.Nullable<int> _PaymentScheduleId;
		
		private string _SenderReference;
		
		private EntityRef<BankAccountDetail> _BankAccountDetail;
		
		private EntityRef<PaymentSchedule> _PaymentSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectDebitIdChanging(int value);
    partial void OnDirectDebitIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnDebtorIdChanging(System.Nullable<System.Guid> value);
    partial void OnDebtorIdChanged();
    partial void OnPaymentPlanIdChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentPlanIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnBankAccountDetailIdChanging(System.Nullable<int> value);
    partial void OnBankAccountDetailIdChanged();
    partial void OnPaymentScheduleIdChanging(System.Nullable<int> value);
    partial void OnPaymentScheduleIdChanged();
    partial void OnSenderReferenceChanging(string value);
    partial void OnSenderReferenceChanged();
    #endregion
		
		public DirectDebit()
		{
			this._BankAccountDetail = default(EntityRef<BankAccountDetail>);
			this._PaymentSchedule = default(EntityRef<PaymentSchedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectDebitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectDebitId
		{
			get
			{
				return this._DirectDebitId;
			}
			set
			{
				if ((this._DirectDebitId != value))
				{
					if (this._BankAccountDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectDebitIdChanging(value);
					this.SendPropertyChanging();
					this._DirectDebitId = value;
					this.SendPropertyChanged("DirectDebitId");
					this.OnDirectDebitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(255)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DebtorId
		{
			get
			{
				return this._DebtorId;
			}
			set
			{
				if ((this._DebtorId != value))
				{
					this.OnDebtorIdChanging(value);
					this.SendPropertyChanging();
					this._DebtorId = value;
					this.SendPropertyChanged("DebtorId");
					this.OnDebtorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentPlanId
		{
			get
			{
				return this._PaymentPlanId;
			}
			set
			{
				if ((this._PaymentPlanId != value))
				{
					this.OnPaymentPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanId = value;
					this.SendPropertyChanged("PaymentPlanId");
					this.OnPaymentPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountDetailId", DbType="Int")]
		public System.Nullable<int> BankAccountDetailId
		{
			get
			{
				return this._BankAccountDetailId;
			}
			set
			{
				if ((this._BankAccountDetailId != value))
				{
					this.OnBankAccountDetailIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountDetailId = value;
					this.SendPropertyChanged("BankAccountDetailId");
					this.OnBankAccountDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentScheduleId", DbType="Int")]
		public System.Nullable<int> PaymentScheduleId
		{
			get
			{
				return this._PaymentScheduleId;
			}
			set
			{
				if ((this._PaymentScheduleId != value))
				{
					if (this._PaymentSchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentScheduleId = value;
					this.SendPropertyChanged("PaymentScheduleId");
					this.OnPaymentScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderReference
		{
			get
			{
				return this._SenderReference;
			}
			set
			{
				if ((this._SenderReference != value))
				{
					this.OnSenderReferenceChanging(value);
					this.SendPropertyChanging();
					this._SenderReference = value;
					this.SendPropertyChanged("SenderReference");
					this.OnSenderReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DirectDebits_BankAccountDetails", Storage="_BankAccountDetail", ThisKey="DirectDebitId", OtherKey="BankAccountDetailId", IsForeignKey=true)]
		public BankAccountDetail BankAccountDetail
		{
			get
			{
				return this._BankAccountDetail.Entity;
			}
			set
			{
				BankAccountDetail previousValue = this._BankAccountDetail.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountDetail.Entity = null;
						previousValue.DirectDebit = null;
					}
					this._BankAccountDetail.Entity = value;
					if ((value != null))
					{
						value.DirectDebit = this;
						this._DirectDebitId = value.BankAccountDetailId;
					}
					else
					{
						this._DirectDebitId = default(int);
					}
					this.SendPropertyChanged("BankAccountDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DirectDebits_PaymentSchedules", Storage="_PaymentSchedule", ThisKey="PaymentScheduleId", OtherKey="PaymentScheduleId", IsForeignKey=true)]
		public PaymentSchedule PaymentSchedule
		{
			get
			{
				return this._PaymentSchedule.Entity;
			}
			set
			{
				PaymentSchedule previousValue = this._PaymentSchedule.Entity;
				if (((previousValue != value) 
							|| (this._PaymentSchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentSchedule.Entity = null;
						previousValue.DirectDebits.Remove(this);
					}
					this._PaymentSchedule.Entity = value;
					if ((value != null))
					{
						value.DirectDebits.Add(this);
						this._PaymentScheduleId = value.PaymentScheduleId;
					}
					else
					{
						this._PaymentScheduleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentSchedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Errors")]
	public partial class Error : DbEntity<Error>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorId;
		
		private System.Nullable<int> _AcknowledgeTypeId;
		
		private string _ErrorCode;
		
		private string _ErrorMessage;
		
		private EntityRef<AcknowledgeType> _AcknowledgeType;
		
		private EntitySet<Acknowledge> _Acknowledges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIdChanging(int value);
    partial void OnErrorIdChanged();
    partial void OnAcknowledgeTypeIdChanging(System.Nullable<int> value);
    partial void OnAcknowledgeTypeIdChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public Error()
		{
			this._AcknowledgeType = default(EntityRef<AcknowledgeType>);
			this._Acknowledges = new EntitySet<Acknowledge>(new Action<Acknowledge>(this.attach_Acknowledges), new Action<Acknowledge>(this.detach_Acknowledges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorId
		{
			get
			{
				return this._ErrorId;
			}
			set
			{
				if ((this._ErrorId != value))
				{
					this.OnErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorId = value;
					this.SendPropertyChanged("ErrorId");
					this.OnErrorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgeTypeId", DbType="Int")]
		public System.Nullable<int> AcknowledgeTypeId
		{
			get
			{
				return this._AcknowledgeTypeId;
			}
			set
			{
				if ((this._AcknowledgeTypeId != value))
				{
					if (this._AcknowledgeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcknowledgeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgeTypeId = value;
					this.SendPropertyChanged("AcknowledgeTypeId");
					this.OnAcknowledgeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcknowledgeType_ErrorCodes_FK1", Storage="_AcknowledgeType", ThisKey="AcknowledgeTypeId", OtherKey="AcknowledgeTypeId", IsForeignKey=true)]
		public AcknowledgeType AcknowledgeType
		{
			get
			{
				return this._AcknowledgeType.Entity;
			}
			set
			{
				AcknowledgeType previousValue = this._AcknowledgeType.Entity;
				if (((previousValue != value) 
							|| (this._AcknowledgeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcknowledgeType.Entity = null;
						previousValue.Errors.Remove(this);
					}
					this._AcknowledgeType.Entity = value;
					if ((value != null))
					{
						value.Errors.Add(this);
						this._AcknowledgeTypeId = value.AcknowledgeTypeId;
					}
					else
					{
						this._AcknowledgeTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AcknowledgeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ErrorCodes_Acknowledges_FK1", Storage="_Acknowledges", ThisKey="ErrorId", OtherKey="ErrorCodeID", DeleteRule="NO ACTION")]
		public EntitySet<Acknowledge> Acknowledges
		{
			get
			{
				return this._Acknowledges;
			}
			set
			{
				this._Acknowledges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.Error = this;
		}
		
		private void detach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.Error = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Files")]
	public partial class File : DbEntity<File>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private System.DateTime _CreationDate;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _FileContent;
		
		private bool _IsSent;
		
		private System.Nullable<int> _ServiceTypeId;
		
		private System.Nullable<int> _FileSequence;
		
		private EntitySet<BankAccountVerification> _BankAccountVerifications;
		
		private EntityRef<ServiceType> _ServiceType;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(System.Data.Linq.Binary value);
    partial void OnFileContentChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    partial void OnServiceTypeIdChanging(System.Nullable<int> value);
    partial void OnServiceTypeIdChanged();
    partial void OnFileSequenceChanging(System.Nullable<int> value);
    partial void OnFileSequenceChanged();
    #endregion
		
		public File()
		{
			this._BankAccountVerifications = new EntitySet<BankAccountVerification>(new Action<BankAccountVerification>(this.attach_BankAccountVerifications), new Action<BankAccountVerification>(this.detach_BankAccountVerifications));
			this._ServiceType = default(EntityRef<ServiceType>);
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeId", DbType="Int")]
		public System.Nullable<int> ServiceTypeId
		{
			get
			{
				return this._ServiceTypeId;
			}
			set
			{
				if ((this._ServiceTypeId != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeId = value;
					this.SendPropertyChanged("ServiceTypeId");
					this.OnServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSequence", DbType="Int")]
		public System.Nullable<int> FileSequence
		{
			get
			{
				return this._FileSequence;
			}
			set
			{
				if ((this._FileSequence != value))
				{
					this.OnFileSequenceChanging(value);
					this.SendPropertyChanging();
					this._FileSequence = value;
					this.SendPropertyChanged("FileSequence");
					this.OnFileSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountVerification_Files_FileId_FK1", Storage="_BankAccountVerifications", ThisKey="FileId", OtherKey="FileId", DeleteRule="NO ACTION")]
		public EntitySet<BankAccountVerification> BankAccountVerifications
		{
			get
			{
				return this._BankAccountVerifications;
			}
			set
			{
				this._BankAccountVerifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Files_FK1", Storage="_ServiceType", ThisKey="ServiceTypeId", OtherKey="ServiceTypeId", IsForeignKey=true)]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._ServiceTypeId = value.ServiceTypeId;
					}
					else
					{
						this._ServiceTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transactions_Files_FileId_FK1", Storage="_Transactions", ThisKey="FileId", OtherKey="FileId", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankAccountVerifications(BankAccountVerification entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_BankAccountVerifications(BankAccountVerification entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.NaedoDocTypes")]
	public partial class NaedoDocType : DbEntity<NaedoDocType>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NaedoDocTypeId;
		
		private string _DocType;
		
		private System.Nullable<int> _TrackingDays;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNaedoDocTypeIdChanging(int value);
    partial void OnNaedoDocTypeIdChanged();
    partial void OnDocTypeChanging(string value);
    partial void OnDocTypeChanged();
    partial void OnTrackingDaysChanging(System.Nullable<int> value);
    partial void OnTrackingDaysChanged();
    #endregion
		
		public NaedoDocType()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaedoDocTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NaedoDocTypeId
		{
			get
			{
				return this._NaedoDocTypeId;
			}
			set
			{
				if ((this._NaedoDocTypeId != value))
				{
					this.OnNaedoDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NaedoDocTypeId = value;
					this.SendPropertyChanged("NaedoDocTypeId");
					this.OnNaedoDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDays", DbType="Int")]
		public System.Nullable<int> TrackingDays
		{
			get
			{
				return this._TrackingDays;
			}
			set
			{
				if ((this._TrackingDays != value))
				{
					this.OnTrackingDaysChanging(value);
					this.SendPropertyChanging();
					this._TrackingDays = value;
					this.SendPropertyChanged("TrackingDays");
					this.OnTrackingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_NaedoDocType", Storage="_Transactions", ThisKey="NaedoDocTypeId", OtherKey="NaedoDocTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.NaedoDocType = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.NaedoDocType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.OrderingClients")]
	public partial class OrderingClient : DbEntity<OrderingClient>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderingClientId;
		
		private string _CustomerId;
		
		private string _Name;
		
		private string _AccountNumberChaps;
		
		private string _AccountNumberFaster;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _MaxAmount;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Login;
		
		private string _Password;
		
		private System.Nullable<int> _BankIntegrationId;
		
		private string _AccountSortCode;
		
		private System.Nullable<int> _AccountType;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderingClientIdChanging(int value);
    partial void OnOrderingClientIdChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccountNumberChapsChanging(string value);
    partial void OnAccountNumberChapsChanged();
    partial void OnAccountNumberFasterChanging(string value);
    partial void OnAccountNumberFasterChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnMaxAmountChanging(System.Nullable<decimal> value);
    partial void OnMaxAmountChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnBankIntegrationIdChanging(System.Nullable<int> value);
    partial void OnBankIntegrationIdChanged();
    partial void OnAccountSortCodeChanging(string value);
    partial void OnAccountSortCodeChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    #endregion
		
		public OrderingClient()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingClientId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderingClientId
		{
			get
			{
				return this._OrderingClientId;
			}
			set
			{
				if ((this._OrderingClientId != value))
				{
					this.OnOrderingClientIdChanging(value);
					this.SendPropertyChanging();
					this._OrderingClientId = value;
					this.SendPropertyChanged("OrderingClientId");
					this.OnOrderingClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumberChaps", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string AccountNumberChaps
		{
			get
			{
				return this._AccountNumberChaps;
			}
			set
			{
				if ((this._AccountNumberChaps != value))
				{
					this.OnAccountNumberChapsChanging(value);
					this.SendPropertyChanging();
					this._AccountNumberChaps = value;
					this.SendPropertyChanged("AccountNumberChaps");
					this.OnAccountNumberChapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumberFaster", DbType="VarChar(35)")]
		public string AccountNumberFaster
		{
			get
			{
				return this._AccountNumberFaster;
			}
			set
			{
				if ((this._AccountNumberFaster != value))
				{
					this.OnAccountNumberFasterChanging(value);
					this.SendPropertyChanging();
					this._AccountNumberFaster = value;
					this.SendPropertyChanged("AccountNumberFaster");
					this.OnAccountNumberFasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(100)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAmount", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxAmount
		{
			get
			{
				return this._MaxAmount;
			}
			set
			{
				if ((this._MaxAmount != value))
				{
					this.OnMaxAmountChanging(value);
					this.SendPropertyChanging();
					this._MaxAmount = value;
					this.SendPropertyChanged("MaxAmount");
					this.OnMaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIntegrationId", DbType="Int")]
		public System.Nullable<int> BankIntegrationId
		{
			get
			{
				return this._BankIntegrationId;
			}
			set
			{
				if ((this._BankIntegrationId != value))
				{
					this.OnBankIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._BankIntegrationId = value;
					this.SendPropertyChanged("BankIntegrationId");
					this.OnBankIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSortCode", DbType="VarChar(6)")]
		public string AccountSortCode
		{
			get
			{
				return this._AccountSortCode;
			}
			set
			{
				if ((this._AccountSortCode != value))
				{
					this.OnAccountSortCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountSortCode = value;
					this.SendPropertyChanged("AccountSortCode");
					this.OnAccountSortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderingClient_Transactions_FK1", Storage="_Transactions", ThisKey="OrderingClientId", OtherKey="OrderingClientID", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.OrderingClient = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.OrderingClient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.PaymentSchedules")]
	public partial class PaymentSchedule : DbEntity<PaymentSchedule>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentScheduleId;
		
		private decimal _TotalAmount;
		
		private decimal _RegularAmount;
		
		private decimal _LastAmount;
		
		private int _PaymentFrequency;
		
		private System.Nullable<int> _DayOfWeekForPayment;
		
		private int _NumberOfPayments;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _CreationDate;
		
		private EntitySet<DirectDebit> _DirectDebits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentScheduleIdChanging(int value);
    partial void OnPaymentScheduleIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnRegularAmountChanging(decimal value);
    partial void OnRegularAmountChanged();
    partial void OnLastAmountChanging(decimal value);
    partial void OnLastAmountChanged();
    partial void OnPaymentFrequencyChanging(int value);
    partial void OnPaymentFrequencyChanged();
    partial void OnDayOfWeekForPaymentChanging(System.Nullable<int> value);
    partial void OnDayOfWeekForPaymentChanged();
    partial void OnNumberOfPaymentsChanging(int value);
    partial void OnNumberOfPaymentsChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public PaymentSchedule()
		{
			this._DirectDebits = new EntitySet<DirectDebit>(new Action<DirectDebit>(this.attach_DirectDebits), new Action<DirectDebit>(this.detach_DirectDebits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentScheduleId
		{
			get
			{
				return this._PaymentScheduleId;
			}
			set
			{
				if ((this._PaymentScheduleId != value))
				{
					this.OnPaymentScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentScheduleId = value;
					this.SendPropertyChanged("PaymentScheduleId");
					this.OnPaymentScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal RegularAmount
		{
			get
			{
				return this._RegularAmount;
			}
			set
			{
				if ((this._RegularAmount != value))
				{
					this.OnRegularAmountChanging(value);
					this.SendPropertyChanging();
					this._RegularAmount = value;
					this.SendPropertyChanged("RegularAmount");
					this.OnRegularAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal LastAmount
		{
			get
			{
				return this._LastAmount;
			}
			set
			{
				if ((this._LastAmount != value))
				{
					this.OnLastAmountChanging(value);
					this.SendPropertyChanging();
					this._LastAmount = value;
					this.SendPropertyChanged("LastAmount");
					this.OnLastAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFrequency", DbType="Int NOT NULL")]
		public int PaymentFrequency
		{
			get
			{
				return this._PaymentFrequency;
			}
			set
			{
				if ((this._PaymentFrequency != value))
				{
					this.OnPaymentFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PaymentFrequency = value;
					this.SendPropertyChanged("PaymentFrequency");
					this.OnPaymentFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeekForPayment", DbType="Int")]
		public System.Nullable<int> DayOfWeekForPayment
		{
			get
			{
				return this._DayOfWeekForPayment;
			}
			set
			{
				if ((this._DayOfWeekForPayment != value))
				{
					this.OnDayOfWeekForPaymentChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeekForPayment = value;
					this.SendPropertyChanged("DayOfWeekForPayment");
					this.OnDayOfWeekForPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPayments", DbType="Int NOT NULL")]
		public int NumberOfPayments
		{
			get
			{
				return this._NumberOfPayments;
			}
			set
			{
				if ((this._NumberOfPayments != value))
				{
					this.OnNumberOfPaymentsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPayments = value;
					this.SendPropertyChanged("NumberOfPayments");
					this.OnNumberOfPaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_DirectDebits_PaymentSchedules", Storage="_DirectDebits", ThisKey="PaymentScheduleId", OtherKey="PaymentScheduleId", DeleteRule="NO ACTION")]
		public EntitySet<DirectDebit> DirectDebits
		{
			get
			{
				return this._DirectDebits;
			}
			set
			{
				this._DirectDebits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DirectDebits(DirectDebit entity)
		{
			this.SendPropertyChanging();
			entity.PaymentSchedule = this;
		}
		
		private void detach_DirectDebits(DirectDebit entity)
		{
			this.SendPropertyChanging();
			entity.PaymentSchedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.PaymentTypes")]
	public partial class PaymentType : DbEntity<PaymentType>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentTypeId;
		
		private string _Name;
		
		private string _Definition;
		
		private EntitySet<SortCode> _SortCodes;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public PaymentType()
		{
			this._SortCodes = new EntitySet<SortCode>(new Action<SortCode>(this.attach_SortCodes), new Action<SortCode>(this.detach_SortCodes));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="VarChar(250)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_SortCodes_FK1", Storage="_SortCodes", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId", DeleteRule="NO ACTION")]
		public EntitySet<SortCode> SortCodes
		{
			get
			{
				return this._SortCodes;
			}
			set
			{
				this._SortCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_Transactions_FK1", Storage="_Transactions", ThisKey="PaymentTypeId", OtherKey="PaymentTypeID", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SortCodes(SortCode entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_SortCodes(SortCode entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.ServiceTypes")]
	public partial class ServiceType : DbEntity<ServiceType>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceTypeId;
		
		private string _Name;
		
		private string _Definition;
		
		private System.Nullable<int> _FileSequence;
		
		private System.Nullable<int> _FileNameCounter;
		
		private EntitySet<File> _Files;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceTypeIdChanging(int value);
    partial void OnServiceTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnFileSequenceChanging(System.Nullable<int> value);
    partial void OnFileSequenceChanged();
    partial void OnFileNameCounterChanging(System.Nullable<int> value);
    partial void OnFileNameCounterChanged();
    #endregion
		
		public ServiceType()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ServiceTypeId
		{
			get
			{
				return this._ServiceTypeId;
			}
			set
			{
				if ((this._ServiceTypeId != value))
				{
					this.OnServiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeId = value;
					this.SendPropertyChanged("ServiceTypeId");
					this.OnServiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="VarChar(250)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSequence", DbType="Int")]
		public System.Nullable<int> FileSequence
		{
			get
			{
				return this._FileSequence;
			}
			set
			{
				if ((this._FileSequence != value))
				{
					this.OnFileSequenceChanging(value);
					this.SendPropertyChanging();
					this._FileSequence = value;
					this.SendPropertyChanged("FileSequence");
					this.OnFileSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNameCounter", DbType="Int")]
		public System.Nullable<int> FileNameCounter
		{
			get
			{
				return this._FileNameCounter;
			}
			set
			{
				if ((this._FileNameCounter != value))
				{
					this.OnFileNameCounterChanging(value);
					this.SendPropertyChanging();
					this._FileNameCounter = value;
					this.SendPropertyChanged("FileNameCounter");
					this.OnFileNameCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Files_FK1", Storage="_Files", ThisKey="ServiceTypeId", OtherKey="ServiceTypeId", DeleteRule="NO ACTION")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Transactions_FK1", Storage="_Transactions", ThisKey="ServiceTypeId", OtherKey="ServiceTypeID", DeleteRule="NO ACTION")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.SortCodes")]
	public partial class SortCode : DbEntity<SortCode>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SortCodeId;
		
		private System.Nullable<int> _BankID;
		
		private int _PaymentTypeId;
		
		private int _SortCodeColumn;
		
		private System.DateTime _CreationDate;
		
		private EntityRef<Bank> _Bank;
		
		private EntityRef<PaymentType> _PaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSortCodeIdChanging(int value);
    partial void OnSortCodeIdChanged();
    partial void OnBankIDChanging(System.Nullable<int> value);
    partial void OnBankIDChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnSortCodeColumnChanging(int value);
    partial void OnSortCodeColumnChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public SortCode()
		{
			this._Bank = default(EntityRef<Bank>);
			this._PaymentType = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCodeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SortCodeId
		{
			get
			{
				return this._SortCodeId;
			}
			set
			{
				if ((this._SortCodeId != value))
				{
					this.OnSortCodeIdChanging(value);
					this.SendPropertyChanging();
					this._SortCodeId = value;
					this.SendPropertyChanged("SortCodeId");
					this.OnSortCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCodeColumn", DbType="Int NOT NULL")]
		public int SortCodeColumn
		{
			get
			{
				return this._SortCodeColumn;
			}
			set
			{
				if ((this._SortCodeColumn != value))
				{
					this.OnSortCodeColumnChanging(value);
					this.SendPropertyChanging();
					this._SortCodeColumn = value;
					this.SendPropertyChanged("SortCodeColumn");
					this.OnSortCodeColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Banks_SortCodes_FK1", Storage="_Bank", ThisKey="BankID", OtherKey="BankId", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.SortCodes.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.SortCodes.Add(this);
						this._BankID = value.BankId;
					}
					else
					{
						this._BankID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_SortCodes_FK1", Storage="_PaymentType", ThisKey="PaymentTypeId", OtherKey="PaymentTypeId", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.SortCodes.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.SortCodes.Add(this);
						this._PaymentTypeId = value.PaymentTypeId;
					}
					else
					{
						this._PaymentTypeId = default(int);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bankgateway.Transactions")]
	public partial class Transaction : DbEntity<Transaction>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionId;
		
		private string _SenderReference;
		
		private System.DateTime _ValueDate;
		
		private decimal _Amount;
		
		private string _Currency;
		
		private System.Nullable<int> _OrderingClientID;
		
		private System.Nullable<int> _BankAccountDetailID;
		
		private System.Nullable<int> _TransactionStatus;
		
		private System.Nullable<int> _PaymentTypeID;
		
		private System.Nullable<int> _ServiceTypeID;
		
		private System.DateTime _SendingTime;
		
		private System.Nullable<int> _PaymentCount;
		
		private System.DateTime _CreationDate;
		
		private System.Nullable<int> _FileId;
		
		private System.Guid _ApplicationId;
		
		private System.Nullable<int> _TrackingDays;
		
		private System.Nullable<int> _NaedoDocTypeId;
		
		private EntityRef<BankAccountDetail> _BankAccountDetail;
		
		private EntityRef<NaedoDocType> _NaedoDocType;
		
		private EntityRef<OrderingClient> _OrderingClient;
		
		private EntityRef<PaymentType> _PaymentType;
		
		private EntityRef<ServiceType> _ServiceType;
		
		private EntitySet<Acknowledge> _Acknowledges;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnSenderReferenceChanging(string value);
    partial void OnSenderReferenceChanged();
    partial void OnValueDateChanging(System.DateTime value);
    partial void OnValueDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnOrderingClientIDChanging(System.Nullable<int> value);
    partial void OnOrderingClientIDChanged();
    partial void OnBankAccountDetailIDChanging(System.Nullable<int> value);
    partial void OnBankAccountDetailIDChanged();
    partial void OnTransactionStatusChanging(System.Nullable<int> value);
    partial void OnTransactionStatusChanged();
    partial void OnPaymentTypeIDChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIDChanged();
    partial void OnServiceTypeIDChanging(System.Nullable<int> value);
    partial void OnServiceTypeIDChanged();
    partial void OnSendingTimeChanging(System.DateTime value);
    partial void OnSendingTimeChanged();
    partial void OnPaymentCountChanging(System.Nullable<int> value);
    partial void OnPaymentCountChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnFileIdChanging(System.Nullable<int> value);
    partial void OnFileIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnTrackingDaysChanging(System.Nullable<int> value);
    partial void OnTrackingDaysChanged();
    partial void OnNaedoDocTypeIdChanging(System.Nullable<int> value);
    partial void OnNaedoDocTypeIdChanged();
    #endregion
		
		public Transaction()
		{
			this._BankAccountDetail = default(EntityRef<BankAccountDetail>);
			this._NaedoDocType = default(EntityRef<NaedoDocType>);
			this._OrderingClient = default(EntityRef<OrderingClient>);
			this._PaymentType = default(EntityRef<PaymentType>);
			this._ServiceType = default(EntityRef<ServiceType>);
			this._Acknowledges = new EntitySet<Acknowledge>(new Action<Acknowledge>(this.attach_Acknowledges), new Action<Acknowledge>(this.detach_Acknowledges));
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderReference
		{
			get
			{
				return this._SenderReference;
			}
			set
			{
				if ((this._SenderReference != value))
				{
					this.OnSenderReferenceChanging(value);
					this.SendPropertyChanging();
					this._SenderReference = value;
					this.SendPropertyChanged("SenderReference");
					this.OnSenderReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDate", DbType="DateTime NOT NULL")]
		public System.DateTime ValueDate
		{
			get
			{
				return this._ValueDate;
			}
			set
			{
				if ((this._ValueDate != value))
				{
					this.OnValueDateChanging(value);
					this.SendPropertyChanging();
					this._ValueDate = value;
					this.SendPropertyChanged("ValueDate");
					this.OnValueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderingClientID", DbType="Int")]
		public System.Nullable<int> OrderingClientID
		{
			get
			{
				return this._OrderingClientID;
			}
			set
			{
				if ((this._OrderingClientID != value))
				{
					if (this._OrderingClient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderingClientIDChanging(value);
					this.SendPropertyChanging();
					this._OrderingClientID = value;
					this.SendPropertyChanged("OrderingClientID");
					this.OnOrderingClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountDetailID", DbType="Int")]
		public System.Nullable<int> BankAccountDetailID
		{
			get
			{
				return this._BankAccountDetailID;
			}
			set
			{
				if ((this._BankAccountDetailID != value))
				{
					if (this._BankAccountDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountDetailIDChanging(value);
					this.SendPropertyChanging();
					this._BankAccountDetailID = value;
					this.SendPropertyChanged("BankAccountDetailID");
					this.OnBankAccountDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatus", DbType="Int")]
		public System.Nullable<int> TransactionStatus
		{
			get
			{
				return this._TransactionStatus;
			}
			set
			{
				if ((this._TransactionStatus != value))
				{
					this.OnTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatus = value;
					this.SendPropertyChanged("TransactionStatus");
					this.OnTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int")]
		public System.Nullable<int> PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeID", DbType="Int")]
		public System.Nullable<int> ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeID = value;
					this.SendPropertyChanged("ServiceTypeID");
					this.OnServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendingTime
		{
			get
			{
				return this._SendingTime;
			}
			set
			{
				if ((this._SendingTime != value))
				{
					this.OnSendingTimeChanging(value);
					this.SendPropertyChanging();
					this._SendingTime = value;
					this.SendPropertyChanged("SendingTime");
					this.OnSendingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCount", DbType="Int")]
		public System.Nullable<int> PaymentCount
		{
			get
			{
				return this._PaymentCount;
			}
			set
			{
				if ((this._PaymentCount != value))
				{
					this.OnPaymentCountChanging(value);
					this.SendPropertyChanging();
					this._PaymentCount = value;
					this.SendPropertyChanged("PaymentCount");
					this.OnPaymentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int")]
		public System.Nullable<int> FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDays", DbType="Int")]
		public System.Nullable<int> TrackingDays
		{
			get
			{
				return this._TrackingDays;
			}
			set
			{
				if ((this._TrackingDays != value))
				{
					this.OnTrackingDaysChanging(value);
					this.SendPropertyChanging();
					this._TrackingDays = value;
					this.SendPropertyChanged("TrackingDays");
					this.OnTrackingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaedoDocTypeId", DbType="Int")]
		public System.Nullable<int> NaedoDocTypeId
		{
			get
			{
				return this._NaedoDocTypeId;
			}
			set
			{
				if ((this._NaedoDocTypeId != value))
				{
					if (this._NaedoDocType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNaedoDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NaedoDocTypeId = value;
					this.SendPropertyChanged("NaedoDocTypeId");
					this.OnNaedoDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccountDetail_Transactions_FK1", Storage="_BankAccountDetail", ThisKey="BankAccountDetailID", OtherKey="BankAccountDetailId", IsForeignKey=true)]
		public BankAccountDetail BankAccountDetail
		{
			get
			{
				return this._BankAccountDetail.Entity;
			}
			set
			{
				BankAccountDetail previousValue = this._BankAccountDetail.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountDetail.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._BankAccountDetail.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._BankAccountDetailID = value.BankAccountDetailId;
					}
					else
					{
						this._BankAccountDetailID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccountDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_NaedoDocType", Storage="_NaedoDocType", ThisKey="NaedoDocTypeId", OtherKey="NaedoDocTypeId", IsForeignKey=true)]
		public NaedoDocType NaedoDocType
		{
			get
			{
				return this._NaedoDocType.Entity;
			}
			set
			{
				NaedoDocType previousValue = this._NaedoDocType.Entity;
				if (((previousValue != value) 
							|| (this._NaedoDocType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NaedoDocType.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._NaedoDocType.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._NaedoDocTypeId = value.NaedoDocTypeId;
					}
					else
					{
						this._NaedoDocTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NaedoDocType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderingClient_Transactions_FK1", Storage="_OrderingClient", ThisKey="OrderingClientID", OtherKey="OrderingClientId", IsForeignKey=true)]
		public OrderingClient OrderingClient
		{
			get
			{
				return this._OrderingClient.Entity;
			}
			set
			{
				OrderingClient previousValue = this._OrderingClient.Entity;
				if (((previousValue != value) 
							|| (this._OrderingClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderingClient.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._OrderingClient.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._OrderingClientID = value.OrderingClientId;
					}
					else
					{
						this._OrderingClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderingClient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_Transactions_FK1", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="PaymentTypeId", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._PaymentTypeID = value.PaymentTypeId;
					}
					else
					{
						this._PaymentTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Transactions_FK1", Storage="_ServiceType", ThisKey="ServiceTypeID", OtherKey="ServiceTypeId", IsForeignKey=true)]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._ServiceTypeID = value.ServiceTypeId;
					}
					else
					{
						this._ServiceTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transactions_Acknowledges_FK1", Storage="_Acknowledges", ThisKey="TransactionId", OtherKey="TransactionID", DeleteRule="NO ACTION")]
		public EntitySet<Acknowledge> Acknowledges
		{
			get
			{
				return this._Acknowledges;
			}
			set
			{
				this._Acknowledges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transactions_Files_FileId_FK1", Storage="_File", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._FileId = value.FileId;
					}
					else
					{
						this._FileId = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_Acknowledges(Acknowledge entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
	}
}
#pragma warning restore 1591
