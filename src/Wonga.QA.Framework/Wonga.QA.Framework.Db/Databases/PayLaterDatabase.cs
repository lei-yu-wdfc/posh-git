#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.PayLater
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PayLater")]
	public partial class PayLaterDatabase : DbDatabase<PayLaterDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__RefactorLog(__RefactorLog instance);
    partial void Update__RefactorLog(__RefactorLog instance);
    partial void Delete__RefactorLog(__RefactorLog instance);
    partial void InsertApplicationEntity(ApplicationEntity instance);
    partial void UpdateApplicationEntity(ApplicationEntity instance);
    partial void DeleteApplicationEntity(ApplicationEntity instance);
    partial void InsertArrearEntity(ArrearEntity instance);
    partial void UpdateArrearEntity(ArrearEntity instance);
    partial void DeleteArrearEntity(ArrearEntity instance);
    partial void InsertDBProjDeploy(DBProjDeploy instance);
    partial void UpdateDBProjDeploy(DBProjDeploy instance);
    partial void DeleteDBProjDeploy(DBProjDeploy instance);
    partial void InsertInstallmentEntity(InstallmentEntity instance);
    partial void UpdateInstallmentEntity(InstallmentEntity instance);
    partial void DeleteInstallmentEntity(InstallmentEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertTransactionEntity(TransactionEntity instance);
    partial void UpdateTransactionEntity(TransactionEntity instance);
    partial void DeleteTransactionEntity(TransactionEntity instance);
    partial void InsertValidTransactionTypeEntity(ValidTransactionTypeEntity instance);
    partial void UpdateValidTransactionTypeEntity(ValidTransactionTypeEntity instance);
    partial void DeleteValidTransactionTypeEntity(ValidTransactionTypeEntity instance);
    #endregion
		
		public PayLaterDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PayLaterDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PayLaterDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PayLaterDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__RefactorLog> @__RefactorLogs
		{
			get
			{
				return this.GetTable<@__RefactorLog>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationEntity> Applications
		{
			get
			{
				return this.GetTable<ApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<ArrearEntity> Arrears
		{
			get
			{
				return this.GetTable<ArrearEntity>();
			}
		}
		
		public System.Data.Linq.Table<DBProjDeploy> DBProjDeploys
		{
			get
			{
				return this.GetTable<DBProjDeploy>();
			}
		}
		
		public System.Data.Linq.Table<InstallmentEntity> Installments
		{
			get
			{
				return this.GetTable<InstallmentEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<TransactionEntity> Transactions
		{
			get
			{
				return this.GetTable<TransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ValidTransactionTypeEntity> ValidTransactionTypes
		{
			get
			{
				return this.GetTable<ValidTransactionTypeEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__RefactorLog")]
	public partial class @__RefactorLog : DbEntity<@__RefactorLog>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperationKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationKeyChanging(System.Guid value);
    partial void OnOperationKeyChanged();
    #endregion
		
		public @__RefactorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperationKey
		{
			get
			{
				return this._OperationKey;
			}
			set
			{
				if ((this._OperationKey != value))
				{
					this.OnOperationKeyChanging(value);
					this.SendPropertyChanging();
					this._OperationKey = value;
					this.SendPropertyChanged("OperationKey");
					this.OnOperationKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="paylater.Applications")]
	public partial class ApplicationEntity : DbEntity<ApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationId;
		
		private System.Guid _ExternalId;
		
		private System.Guid _AccountId;
		
		private int _Currency;
		
		private System.Guid _PaymentCardGuid;
		
		private System.DateTime _ApplicationDate;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private System.Nullable<System.DateTime> _ClosedOn;
		
		private System.DateTime _CreatedOn;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _CanceledOn;
		
		private System.Nullable<System.DateTime> _AcceptedOn;
		
		private System.Nullable<System.DateTime> _DeclinedOn;
		
		private System.Nullable<System.DateTime> _AbandonedOn;
		
		private string _ApplicationReference;
		
		private decimal _TotalAmount;
		
		private System.Guid _MerchantId;
		
		private decimal _PenaltyAmount;
		
		private decimal _TransactionFee;
		
		private decimal _TransactionFeeDiscount;
		
		private EntityRef<ArrearEntity> _ArrearEntity;
		
		private EntitySet<InstallmentEntity> _Installments;
		
		private EntitySet<TransactionEntity> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPaymentCardGuidChanging(System.Guid value);
    partial void OnPaymentCardGuidChanged();
    partial void OnApplicationDateChanging(System.DateTime value);
    partial void OnApplicationDateChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnClosedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedOnChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCanceledOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCanceledOnChanged();
    partial void OnAcceptedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedOnChanged();
    partial void OnDeclinedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnDeclinedOnChanged();
    partial void OnAbandonedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAbandonedOnChanged();
    partial void OnApplicationReferenceChanging(string value);
    partial void OnApplicationReferenceChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnMerchantIdChanging(System.Guid value);
    partial void OnMerchantIdChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    partial void OnTransactionFeeChanging(decimal value);
    partial void OnTransactionFeeChanged();
    partial void OnTransactionFeeDiscountChanging(decimal value);
    partial void OnTransactionFeeDiscountChanged();
    #endregion
		
		public ApplicationEntity()
		{
			this._ArrearEntity = default(EntityRef<ArrearEntity>);
			this._Installments = new EntitySet<InstallmentEntity>(new Action<InstallmentEntity>(this.attach_Installments), new Action<InstallmentEntity>(this.detach_Installments));
			this._Transactions = new EntitySet<TransactionEntity>(new Action<TransactionEntity>(this.attach_Transactions), new Action<TransactionEntity>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PaymentCardGuid
		{
			get
			{
				return this._PaymentCardGuid;
			}
			set
			{
				if ((this._PaymentCardGuid != value))
				{
					this.OnPaymentCardGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardGuid = value;
					this.SendPropertyChanged("PaymentCardGuid");
					this.OnPaymentCardGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ClosedOn
		{
			get
			{
				return this._ClosedOn;
			}
			set
			{
				if ((this._ClosedOn != value))
				{
					this.OnClosedOnChanging(value);
					this.SendPropertyChanging();
					this._ClosedOn = value;
					this.SendPropertyChanged("ClosedOn");
					this.OnClosedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanceledOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CanceledOn
		{
			get
			{
				return this._CanceledOn;
			}
			set
			{
				if ((this._CanceledOn != value))
				{
					this.OnCanceledOnChanging(value);
					this.SendPropertyChanging();
					this._CanceledOn = value;
					this.SendPropertyChanged("CanceledOn");
					this.OnCanceledOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AcceptedOn
		{
			get
			{
				return this._AcceptedOn;
			}
			set
			{
				if ((this._AcceptedOn != value))
				{
					this.OnAcceptedOnChanging(value);
					this.SendPropertyChanging();
					this._AcceptedOn = value;
					this.SendPropertyChanged("AcceptedOn");
					this.OnAcceptedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclinedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeclinedOn
		{
			get
			{
				return this._DeclinedOn;
			}
			set
			{
				if ((this._DeclinedOn != value))
				{
					this.OnDeclinedOnChanging(value);
					this.SendPropertyChanging();
					this._DeclinedOn = value;
					this.SendPropertyChanged("DeclinedOn");
					this.OnDeclinedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbandonedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AbandonedOn
		{
			get
			{
				return this._AbandonedOn;
			}
			set
			{
				if ((this._AbandonedOn != value))
				{
					this.OnAbandonedOnChanging(value);
					this.SendPropertyChanging();
					this._AbandonedOn = value;
					this.SendPropertyChanged("AbandonedOn");
					this.OnAbandonedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationReference", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string ApplicationReference
		{
			get
			{
				return this._ApplicationReference;
			}
			set
			{
				if ((this._ApplicationReference != value))
				{
					this.OnApplicationReferenceChanging(value);
					this.SendPropertyChanging();
					this._ApplicationReference = value;
					this.SendPropertyChanged("ApplicationReference");
					this.OnApplicationReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(9,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(9,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionFee", DbType="Decimal(9,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TransactionFee
		{
			get
			{
				return this._TransactionFee;
			}
			set
			{
				if ((this._TransactionFee != value))
				{
					this.OnTransactionFeeChanging(value);
					this.SendPropertyChanging();
					this._TransactionFee = value;
					this.SendPropertyChanged("TransactionFee");
					this.OnTransactionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionFeeDiscount", DbType="Decimal(9,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TransactionFeeDiscount
		{
			get
			{
				return this._TransactionFeeDiscount;
			}
			set
			{
				if ((this._TransactionFeeDiscount != value))
				{
					this.OnTransactionFeeDiscountChanging(value);
					this.SendPropertyChanging();
					this._TransactionFeeDiscount = value;
					this.SendPropertyChanged("TransactionFeeDiscount");
					this.OnTransactionFeeDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Arrears_Applications", Storage="_ArrearEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public ArrearEntity ArrearEntity
		{
			get
			{
				return this._ArrearEntity.Entity;
			}
			set
			{
				ArrearEntity previousValue = this._ArrearEntity.Entity;
				if (((previousValue != value) 
							|| (this._ArrearEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArrearEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._ArrearEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("ArrearEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Installments_Applications", Storage="_Installments", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<InstallmentEntity> Installments
		{
			get
			{
				return this._Installments;
			}
			set
			{
				this._Installments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Applications", Storage="_Transactions", ThisKey="ApplicationId", OtherKey="ApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<TransactionEntity> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Installments(InstallmentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Installments(InstallmentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_Transactions(TransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="paylater.Arrears")]
	public partial class ArrearEntity : DbEntity<ArrearEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArrearId;
		
		private int _ApplicationId;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArrearIdChanging(int value);
    partial void OnArrearIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public ArrearEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrearId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArrearId
		{
			get
			{
				return this._ArrearId;
			}
			set
			{
				if ((this._ArrearId != value))
				{
					this.OnArrearIdChanging(value);
					this.SendPropertyChanging();
					this._ArrearId = value;
					this.SendPropertyChanged("ArrearId");
					this.OnArrearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Arrears_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.ArrearEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.ArrearEntity = this;
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBProjDeploy")]
	public partial class DBProjDeploy : DbEntity<DBProjDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    #endregion
		
		public DBProjDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="VarChar(255)")]
		public string Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="paylater.Installments")]
	public partial class InstallmentEntity : DbEntity<InstallmentEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstallmentId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private System.DateTime _PaymentDate;
		
		private decimal _Amount;
		
		private int _Currency;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _FailedOn;
		
		private System.Nullable<System.DateTime> _SucceededOn;
		
		private string _Status;
		
		private decimal _PaidAmount;
		
		private decimal _DiscardAmount;
		
		private decimal _PenaltyAmount;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstallmentIdChanging(int value);
    partial void OnInstallmentIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnFailedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnFailedOnChanged();
    partial void OnSucceededOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSucceededOnChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnDiscardAmountChanging(decimal value);
    partial void OnDiscardAmountChanged();
    partial void OnPenaltyAmountChanging(decimal value);
    partial void OnPenaltyAmountChanged();
    #endregion
		
		public InstallmentEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstallmentId
		{
			get
			{
				return this._InstallmentId;
			}
			set
			{
				if ((this._InstallmentId != value))
				{
					this.OnInstallmentIdChanging(value);
					this.SendPropertyChanging();
					this._InstallmentId = value;
					this.SendPropertyChanged("InstallmentId");
					this.OnInstallmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> FailedOn
		{
			get
			{
				return this._FailedOn;
			}
			set
			{
				if ((this._FailedOn != value))
				{
					this.OnFailedOnChanging(value);
					this.SendPropertyChanging();
					this._FailedOn = value;
					this.SendPropertyChanged("FailedOn");
					this.OnFailedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SucceededOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SucceededOn
		{
			get
			{
				return this._SucceededOn;
			}
			set
			{
				if ((this._SucceededOn != value))
				{
					this.OnSucceededOnChanging(value);
					this.SendPropertyChanging();
					this._SucceededOn = value;
					this.SendPropertyChanged("SucceededOn");
					this.OnSucceededOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscardAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal DiscardAmount
		{
			get
			{
				return this._DiscardAmount;
			}
			set
			{
				if ((this._DiscardAmount != value))
				{
					this.OnDiscardAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscardAmount = value;
					this.SendPropertyChanged("DiscardAmount");
					this.OnDiscardAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Installments_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Installments.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Installments.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private string _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32)")]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="paylater.Transactions")]
	public partial class TransactionEntity : DbEntity<TransactionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionId;
		
		private System.Guid _ExternalId;
		
		private int _ApplicationId;
		
		private System.DateTime _PostedOn;
		
		private byte _Scope;
		
		private string _Type;
		
		private decimal _Amount;
		
		private int _Currency;
		
		private System.Nullable<System.Guid> _ComponentTransactionId;
		
		private string _Reference;
		
		private System.DateTime _CreatedOn;
		
		private string _SalesForceUsername;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIdChanging(int value);
    partial void OnTransactionIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnPostedOnChanging(System.DateTime value);
    partial void OnPostedOnChanged();
    partial void OnScopeChanging(byte value);
    partial void OnScopeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnComponentTransactionIdChanging(System.Nullable<System.Guid> value);
    partial void OnComponentTransactionIdChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnSalesForceUsernameChanging(string value);
    partial void OnSalesForceUsernameChanged();
    #endregion
		
		public TransactionEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedOn", DbType="DateTime NOT NULL")]
		public System.DateTime PostedOn
		{
			get
			{
				return this._PostedOn;
			}
			set
			{
				if ((this._PostedOn != value))
				{
					this.OnPostedOnChanging(value);
					this.SendPropertyChanging();
					this._PostedOn = value;
					this.SendPropertyChanged("PostedOn");
					this.OnPostedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scope", DbType="TinyInt NOT NULL")]
		public byte Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentTransactionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComponentTransactionId
		{
			get
			{
				return this._ComponentTransactionId;
			}
			set
			{
				if ((this._ComponentTransactionId != value))
				{
					this.OnComponentTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentTransactionId = value;
					this.SendPropertyChanged("ComponentTransactionId");
					this.OnComponentTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(50)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesForceUsername", DbType="NVarChar(80)")]
		public string SalesForceUsername
		{
			get
			{
				return this._SalesForceUsername;
			}
			set
			{
				if ((this._SalesForceUsername != value))
				{
					this.OnSalesForceUsernameChanging(value);
					this.SendPropertyChanging();
					this._SalesForceUsername = value;
					this.SendPropertyChanged("SalesForceUsername");
					this.OnSalesForceUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Transactions_Applications", Storage="_ApplicationEntity", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="paylater.ValidTransactionTypes")]
	public partial class ValidTransactionTypeEntity : DbEntity<ValidTransactionTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ValidTransactionTypeId;
		
		private string _Type;
		
		private string _ValidScope;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValidTransactionTypeIdChanging(int value);
    partial void OnValidTransactionTypeIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValidScopeChanging(string value);
    partial void OnValidScopeChanged();
    #endregion
		
		public ValidTransactionTypeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTransactionTypeId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ValidTransactionTypeId
		{
			get
			{
				return this._ValidTransactionTypeId;
			}
			set
			{
				if ((this._ValidTransactionTypeId != value))
				{
					this.OnValidTransactionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ValidTransactionTypeId = value;
					this.SendPropertyChanged("ValidTransactionTypeId");
					this.OnValidTransactionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidScope", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ValidScope
		{
			get
			{
				return this._ValidScope;
			}
			set
			{
				if ((this._ValidScope != value))
				{
					this.OnValidScopeChanging(value);
					this.SendPropertyChanging();
					this._ValidScope = value;
					this.SendPropertyChanged("ValidScope");
					this.OnValidScopeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
