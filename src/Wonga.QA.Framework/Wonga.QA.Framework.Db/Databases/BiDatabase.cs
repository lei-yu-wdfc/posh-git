#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Bi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bi")]
	public partial class BiDatabase : DbDatabase<BiDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__RefactorLog(__RefactorLog instance);
    partial void Update__RefactorLog(__RefactorLog instance);
    partial void Delete__RefactorLog(__RefactorLog instance);
    partial void InsertAccountEntity(AccountEntity instance);
    partial void UpdateAccountEntity(AccountEntity instance);
    partial void DeleteAccountEntity(AccountEntity instance);
    partial void InsertAffiliateEntity(AffiliateEntity instance);
    partial void UpdateAffiliateEntity(AffiliateEntity instance);
    partial void DeleteAffiliateEntity(AffiliateEntity instance);
    partial void InsertAggregationBuildExecutionEntity(AggregationBuildExecutionEntity instance);
    partial void UpdateAggregationBuildExecutionEntity(AggregationBuildExecutionEntity instance);
    partial void DeleteAggregationBuildExecutionEntity(AggregationBuildExecutionEntity instance);
    partial void InsertAggregationBuildLogEntity(AggregationBuildLogEntity instance);
    partial void UpdateAggregationBuildLogEntity(AggregationBuildLogEntity instance);
    partial void DeleteAggregationBuildLogEntity(AggregationBuildLogEntity instance);
    partial void InsertAggregationBuildStepEntity(AggregationBuildStepEntity instance);
    partial void UpdateAggregationBuildStepEntity(AggregationBuildStepEntity instance);
    partial void DeleteAggregationBuildStepEntity(AggregationBuildStepEntity instance);
    partial void InsertApiClientEntity(ApiClientEntity instance);
    partial void UpdateApiClientEntity(ApiClientEntity instance);
    partial void DeleteApiClientEntity(ApiClientEntity instance);
    partial void InsertApplicationEntity(ApplicationEntity instance);
    partial void UpdateApplicationEntity(ApplicationEntity instance);
    partial void DeleteApplicationEntity(ApplicationEntity instance);
    partial void InsertApplicationDeclinedReasonEntity(ApplicationDeclinedReasonEntity instance);
    partial void UpdateApplicationDeclinedReasonEntity(ApplicationDeclinedReasonEntity instance);
    partial void DeleteApplicationDeclinedReasonEntity(ApplicationDeclinedReasonEntity instance);
    partial void InsertBankAccountEntity(BankAccountEntity instance);
    partial void UpdateBankAccountEntity(BankAccountEntity instance);
    partial void DeleteBankAccountEntity(BankAccountEntity instance);
    partial void InsertBankGateWayTransactionEntity(BankGateWayTransactionEntity instance);
    partial void UpdateBankGateWayTransactionEntity(BankGateWayTransactionEntity instance);
    partial void DeleteBankGateWayTransactionEntity(BankGateWayTransactionEntity instance);
    partial void InsertCollectionMethodEntity(CollectionMethodEntity instance);
    partial void UpdateCollectionMethodEntity(CollectionMethodEntity instance);
    partial void DeleteCollectionMethodEntity(CollectionMethodEntity instance);
    partial void InsertCurrencyEntity(CurrencyEntity instance);
    partial void UpdateCurrencyEntity(CurrencyEntity instance);
    partial void DeleteCurrencyEntity(CurrencyEntity instance);
    partial void InsertDateEntity(DateEntity instance);
    partial void UpdateDateEntity(DateEntity instance);
    partial void DeleteDateEntity(DateEntity instance);
    partial void InsertEquifaxSagaEntity(EquifaxSagaEntity instance);
    partial void UpdateEquifaxSagaEntity(EquifaxSagaEntity instance);
    partial void DeleteEquifaxSagaEntity(EquifaxSagaEntity instance);
    partial void InsertFAddPaymentCardEntity(FAddPaymentCardEntity instance);
    partial void UpdateFAddPaymentCardEntity(FAddPaymentCardEntity instance);
    partial void DeleteFAddPaymentCardEntity(FAddPaymentCardEntity instance);
    partial void InsertFAggApplicationEntity(FAggApplicationEntity instance);
    partial void UpdateFAggApplicationEntity(FAggApplicationEntity instance);
    partial void DeleteFAggApplicationEntity(FAggApplicationEntity instance);
    partial void InsertFAggLoanNumberEntity(FAggLoanNumberEntity instance);
    partial void UpdateFAggLoanNumberEntity(FAggLoanNumberEntity instance);
    partial void DeleteFAggLoanNumberEntity(FAggLoanNumberEntity instance);
    partial void InsertFAggTransactionAllocationEntity(FAggTransactionAllocationEntity instance);
    partial void UpdateFAggTransactionAllocationEntity(FAggTransactionAllocationEntity instance);
    partial void DeleteFAggTransactionAllocationEntity(FAggTransactionAllocationEntity instance);
    partial void InsertFBankAccountVerificationEntity(FBankAccountVerificationEntity instance);
    partial void UpdateFBankAccountVerificationEntity(FBankAccountVerificationEntity instance);
    partial void DeleteFBankAccountVerificationEntity(FBankAccountVerificationEntity instance);
    partial void InsertFCreateFixedTermLoanApplicationEntity(FCreateFixedTermLoanApplicationEntity instance);
    partial void UpdateFCreateFixedTermLoanApplicationEntity(FCreateFixedTermLoanApplicationEntity instance);
    partial void DeleteFCreateFixedTermLoanApplicationEntity(FCreateFixedTermLoanApplicationEntity instance);
    partial void InsertFCreateFixedTermLoanExtensionEntity(FCreateFixedTermLoanExtensionEntity instance);
    partial void UpdateFCreateFixedTermLoanExtensionEntity(FCreateFixedTermLoanExtensionEntity instance);
    partial void DeleteFCreateFixedTermLoanExtensionEntity(FCreateFixedTermLoanExtensionEntity instance);
    partial void InsertFCreateFixedTermLoanTopupEntity(FCreateFixedTermLoanTopupEntity instance);
    partial void UpdateFCreateFixedTermLoanTopupEntity(FCreateFixedTermLoanTopupEntity instance);
    partial void DeleteFCreateFixedTermLoanTopupEntity(FCreateFixedTermLoanTopupEntity instance);
    partial void InsertFCreateTransactionEntity(FCreateTransactionEntity instance);
    partial void UpdateFCreateTransactionEntity(FCreateTransactionEntity instance);
    partial void DeleteFCreateTransactionEntity(FCreateTransactionEntity instance);
    partial void InsertFEquifaxResponseEntity(FEquifaxResponseEntity instance);
    partial void UpdateFEquifaxResponseEntity(FEquifaxResponseEntity instance);
    partial void DeleteFEquifaxResponseEntity(FEquifaxResponseEntity instance);
    partial void InsertFExtendLoanEntity(FExtendLoanEntity instance);
    partial void UpdateFExtendLoanEntity(FExtendLoanEntity instance);
    partial void DeleteFExtendLoanEntity(FExtendLoanEntity instance);
    partial void InsertFIApplicationAcceptedEntity(FIApplicationAcceptedEntity instance);
    partial void UpdateFIApplicationAcceptedEntity(FIApplicationAcceptedEntity instance);
    partial void DeleteFIApplicationAcceptedEntity(FIApplicationAcceptedEntity instance);
    partial void InsertFIApplicationClosedEntity(FIApplicationClosedEntity instance);
    partial void UpdateFIApplicationClosedEntity(FIApplicationClosedEntity instance);
    partial void DeleteFIApplicationClosedEntity(FIApplicationClosedEntity instance);
    partial void InsertFIApplicationDeclinedEntity(FIApplicationDeclinedEntity instance);
    partial void UpdateFIApplicationDeclinedEntity(FIApplicationDeclinedEntity instance);
    partial void DeleteFIApplicationDeclinedEntity(FIApplicationDeclinedEntity instance);
    partial void InsertFIFixedTermApplicationAddedEntity(FIFixedTermApplicationAddedEntity instance);
    partial void UpdateFIFixedTermApplicationAddedEntity(FIFixedTermApplicationAddedEntity instance);
    partial void DeleteFIFixedTermApplicationAddedEntity(FIFixedTermApplicationAddedEntity instance);
    partial void InsertFixedTermLoanExtensionEntity(FixedTermLoanExtensionEntity instance);
    partial void UpdateFixedTermLoanExtensionEntity(FixedTermLoanExtensionEntity instance);
    partial void DeleteFixedTermLoanExtensionEntity(FixedTermLoanExtensionEntity instance);
    partial void InsertFixedTermLoanTopUpEntity(FixedTermLoanTopUpEntity instance);
    partial void UpdateFixedTermLoanTopUpEntity(FixedTermLoanTopUpEntity instance);
    partial void DeleteFixedTermLoanTopUpEntity(FixedTermLoanTopUpEntity instance);
    partial void InsertFMessageTypeEntity(FMessageTypeEntity instance);
    partial void UpdateFMessageTypeEntity(FMessageTypeEntity instance);
    partial void DeleteFMessageTypeEntity(FMessageTypeEntity instance);
    partial void InsertFPaymentCollectionEntity(FPaymentCollectionEntity instance);
    partial void UpdateFPaymentCollectionEntity(FPaymentCollectionEntity instance);
    partial void DeleteFPaymentCollectionEntity(FPaymentCollectionEntity instance);
    partial void InsertFPaymentSentMessageEntity(FPaymentSentMessageEntity instance);
    partial void UpdateFPaymentSentMessageEntity(FPaymentSentMessageEntity instance);
    partial void DeleteFPaymentSentMessageEntity(FPaymentSentMessageEntity instance);
    partial void InsertFRepayLoanEntity(FRepayLoanEntity instance);
    partial void UpdateFRepayLoanEntity(FRepayLoanEntity instance);
    partial void DeleteFRepayLoanEntity(FRepayLoanEntity instance);
    partial void InsertFSignApplicationEntity(FSignApplicationEntity instance);
    partial void UpdateFSignApplicationEntity(FSignApplicationEntity instance);
    partial void DeleteFSignApplicationEntity(FSignApplicationEntity instance);
    partial void InsertFSignFixedTermLoanExtensionEntity(FSignFixedTermLoanExtensionEntity instance);
    partial void UpdateFSignFixedTermLoanExtensionEntity(FSignFixedTermLoanExtensionEntity instance);
    partial void DeleteFSignFixedTermLoanExtensionEntity(FSignFixedTermLoanExtensionEntity instance);
    partial void InsertFSignFixedTermLoanTopupEntity(FSignFixedTermLoanTopupEntity instance);
    partial void UpdateFSignFixedTermLoanTopupEntity(FSignFixedTermLoanTopupEntity instance);
    partial void DeleteFSignFixedTermLoanTopupEntity(FSignFixedTermLoanTopupEntity instance);
    partial void InsertFSubmitCounterOfferEntity(FSubmitCounterOfferEntity instance);
    partial void UpdateFSubmitCounterOfferEntity(FSubmitCounterOfferEntity instance);
    partial void DeleteFSubmitCounterOfferEntity(FSubmitCounterOfferEntity instance);
    partial void InsertFTransactionLedgerEntity(FTransactionLedgerEntity instance);
    partial void UpdateFTransactionLedgerEntity(FTransactionLedgerEntity instance);
    partial void DeleteFTransactionLedgerEntity(FTransactionLedgerEntity instance);
    partial void InsertFTransactionRequestEntity(FTransactionRequestEntity instance);
    partial void UpdateFTransactionRequestEntity(FTransactionRequestEntity instance);
    partial void DeleteFTransactionRequestEntity(FTransactionRequestEntity instance);
    partial void InsertFTransactionRequestDetailEntity(FTransactionRequestDetailEntity instance);
    partial void UpdateFTransactionRequestDetailEntity(FTransactionRequestDetailEntity instance);
    partial void DeleteFTransactionRequestDetailEntity(FTransactionRequestDetailEntity instance);
    partial void InsertFTransunionResponseEntity(FTransunionResponseEntity instance);
    partial void UpdateFTransunionResponseEntity(FTransunionResponseEntity instance);
    partial void DeleteFTransunionResponseEntity(FTransunionResponseEntity instance);
    partial void InsertFUpdateDailyAccruedInterestEntity(FUpdateDailyAccruedInterestEntity instance);
    partial void UpdateFUpdateDailyAccruedInterestEntity(FUpdateDailyAccruedInterestEntity instance);
    partial void DeleteFUpdateDailyAccruedInterestEntity(FUpdateDailyAccruedInterestEntity instance);
    partial void InsertLnEntity(LnEntity instance);
    partial void UpdateLnEntity(LnEntity instance);
    partial void DeleteLnEntity(LnEntity instance);
    partial void InsertLogMessageSourceEntity(LogMessageSourceEntity instance);
    partial void UpdateLogMessageSourceEntity(LogMessageSourceEntity instance);
    partial void DeleteLogMessageSourceEntity(LogMessageSourceEntity instance);
    partial void InsertLogMessageTypeEntity(LogMessageTypeEntity instance);
    partial void UpdateLogMessageTypeEntity(LogMessageTypeEntity instance);
    partial void DeleteLogMessageTypeEntity(LogMessageTypeEntity instance);
    partial void InsertMergeLogEntity(MergeLogEntity instance);
    partial void UpdateMergeLogEntity(MergeLogEntity instance);
    partial void DeleteMergeLogEntity(MergeLogEntity instance);
    partial void InsertMessageArchiveEntity(MessageArchiveEntity instance);
    partial void UpdateMessageArchiveEntity(MessageArchiveEntity instance);
    partial void DeleteMessageArchiveEntity(MessageArchiveEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertPaymentCardEntity(PaymentCardEntity instance);
    partial void UpdatePaymentCardEntity(PaymentCardEntity instance);
    partial void DeletePaymentCardEntity(PaymentCardEntity instance);
    partial void InsertPaymentCollectionEntity(PaymentCollectionEntity instance);
    partial void UpdatePaymentCollectionEntity(PaymentCollectionEntity instance);
    partial void DeletePaymentCollectionEntity(PaymentCollectionEntity instance);
    partial void InsertPaymentCollectionAgencyEntity(PaymentCollectionAgencyEntity instance);
    partial void UpdatePaymentCollectionAgencyEntity(PaymentCollectionAgencyEntity instance);
    partial void DeletePaymentCollectionAgencyEntity(PaymentCollectionAgencyEntity instance);
    partial void InsertPaymentCollectionStatus(PaymentCollectionStatus instance);
    partial void UpdatePaymentCollectionStatus(PaymentCollectionStatus instance);
    partial void DeletePaymentCollectionStatus(PaymentCollectionStatus instance);
    partial void InsertPaymentCollectionTypeEntity(PaymentCollectionTypeEntity instance);
    partial void UpdatePaymentCollectionTypeEntity(PaymentCollectionTypeEntity instance);
    partial void DeletePaymentCollectionTypeEntity(PaymentCollectionTypeEntity instance);
    partial void InsertProcessMessageLogEntity(ProcessMessageLogEntity instance);
    partial void UpdateProcessMessageLogEntity(ProcessMessageLogEntity instance);
    partial void DeleteProcessMessageLogEntity(ProcessMessageLogEntity instance);
    partial void InsertPromoCodeEntity(PromoCodeEntity instance);
    partial void UpdatePromoCodeEntity(PromoCodeEntity instance);
    partial void DeletePromoCodeEntity(PromoCodeEntity instance);
    partial void InsertRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void UpdateRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void DeleteRepaymentRequestEntity(RepaymentRequestEntity instance);
    partial void InsertServiceBrokerLogEntity(ServiceBrokerLogEntity instance);
    partial void UpdateServiceBrokerLogEntity(ServiceBrokerLogEntity instance);
    partial void DeleteServiceBrokerLogEntity(ServiceBrokerLogEntity instance);
    partial void InsertTimeEntity(TimeEntity instance);
    partial void UpdateTimeEntity(TimeEntity instance);
    partial void DeleteTimeEntity(TimeEntity instance);
    partial void InsertTransactionEntity(TransactionEntity instance);
    partial void UpdateTransactionEntity(TransactionEntity instance);
    partial void DeleteTransactionEntity(TransactionEntity instance);
    partial void InsertTransactionScopeEntity(TransactionScopeEntity instance);
    partial void UpdateTransactionScopeEntity(TransactionScopeEntity instance);
    partial void DeleteTransactionScopeEntity(TransactionScopeEntity instance);
    partial void InsertTransactionStatus(TransactionStatus instance);
    partial void UpdateTransactionStatus(TransactionStatus instance);
    partial void DeleteTransactionStatus(TransactionStatus instance);
    partial void InsertTransactionTypeEntity(TransactionTypeEntity instance);
    partial void UpdateTransactionTypeEntity(TransactionTypeEntity instance);
    partial void DeleteTransactionTypeEntity(TransactionTypeEntity instance);
    partial void InsertTransunionConsumerEntity(TransunionConsumerEntity instance);
    partial void UpdateTransunionConsumerEntity(TransunionConsumerEntity instance);
    partial void DeleteTransunionConsumerEntity(TransunionConsumerEntity instance);
    partial void InsertTransunionResponseEntity(TransunionResponseEntity instance);
    partial void UpdateTransunionResponseEntity(TransunionResponseEntity instance);
    partial void DeleteTransunionResponseEntity(TransunionResponseEntity instance);
    partial void InsertTransunionResponseStatus(TransunionResponseStatus instance);
    partial void UpdateTransunionResponseStatus(TransunionResponseStatus instance);
    partial void DeleteTransunionResponseStatus(TransunionResponseStatus instance);
    partial void InsertTransunionSagaEntity(TransunionSagaEntity instance);
    partial void UpdateTransunionSagaEntity(TransunionSagaEntity instance);
    partial void DeleteTransunionSagaEntity(TransunionSagaEntity instance);
    partial void InsertUserEntity(UserEntity instance);
    partial void UpdateUserEntity(UserEntity instance);
    partial void DeleteUserEntity(UserEntity instance);
    partial void InsertUserActionEntity(UserActionEntity instance);
    partial void UpdateUserActionEntity(UserActionEntity instance);
    partial void DeleteUserActionEntity(UserActionEntity instance);
    partial void InsertWongaMessageEntity(WongaMessageEntity instance);
    partial void UpdateWongaMessageEntity(WongaMessageEntity instance);
    partial void DeleteWongaMessageEntity(WongaMessageEntity instance);
    #endregion
		
		public BiDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BiDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BiDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BiDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__RefactorLog> @__RefactorLogs
		{
			get
			{
				return this.GetTable<@__RefactorLog>();
			}
		}
		
		public System.Data.Linq.Table<AccountEntity> Accounts
		{
			get
			{
				return this.GetTable<AccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateEntity> Affiliates
		{
			get
			{
				return this.GetTable<AffiliateEntity>();
			}
		}
		
		public System.Data.Linq.Table<AggregationBuildExecutionEntity> AggregationBuildExecutions
		{
			get
			{
				return this.GetTable<AggregationBuildExecutionEntity>();
			}
		}
		
		public System.Data.Linq.Table<AggregationBuildLogEntity> AggregationBuildLogs
		{
			get
			{
				return this.GetTable<AggregationBuildLogEntity>();
			}
		}
		
		public System.Data.Linq.Table<AggregationBuildStepEntity> AggregationBuildSteps
		{
			get
			{
				return this.GetTable<AggregationBuildStepEntity>();
			}
		}
		
		public System.Data.Linq.Table<ApiClientEntity> ApiClients
		{
			get
			{
				return this.GetTable<ApiClientEntity>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationEntity> Applications
		{
			get
			{
				return this.GetTable<ApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationDeclinedReasonEntity> ApplicationDeclinedReasons
		{
			get
			{
				return this.GetTable<ApplicationDeclinedReasonEntity>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountEntity> BankAccounts
		{
			get
			{
				return this.GetTable<BankAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<BankGateWayTransactionEntity> BankGateWayTransactions
		{
			get
			{
				return this.GetTable<BankGateWayTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<CollectionMethodEntity> CollectionMethods
		{
			get
			{
				return this.GetTable<CollectionMethodEntity>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyEntity> Currencies
		{
			get
			{
				return this.GetTable<CurrencyEntity>();
			}
		}
		
		public System.Data.Linq.Table<DateEntity> Dates
		{
			get
			{
				return this.GetTable<DateEntity>();
			}
		}
		
		public System.Data.Linq.Table<EquifaxSagaEntity> EquifaxSagas
		{
			get
			{
				return this.GetTable<EquifaxSagaEntity>();
			}
		}
		
		public System.Data.Linq.Table<FAddPaymentCardEntity> FAddPaymentCards
		{
			get
			{
				return this.GetTable<FAddPaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this.GetTable<FAggApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<FAggLoanNumberEntity> FAggLoanNumbers
		{
			get
			{
				return this.GetTable<FAggLoanNumberEntity>();
			}
		}
		
		public System.Data.Linq.Table<FAggTransactionAllocationEntity> FAggTransactionAllocations
		{
			get
			{
				return this.GetTable<FAggTransactionAllocationEntity>();
			}
		}
		
		public System.Data.Linq.Table<FBankAccountVerificationEntity> FBankAccountVerifications
		{
			get
			{
				return this.GetTable<FBankAccountVerificationEntity>();
			}
		}
		
		public System.Data.Linq.Table<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this.GetTable<FCreateFixedTermLoanApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<FCreateFixedTermLoanExtensionEntity> FCreateFixedTermLoanExtensions
		{
			get
			{
				return this.GetTable<FCreateFixedTermLoanExtensionEntity>();
			}
		}
		
		public System.Data.Linq.Table<FCreateFixedTermLoanTopupEntity> FCreateFixedTermLoanTopups
		{
			get
			{
				return this.GetTable<FCreateFixedTermLoanTopupEntity>();
			}
		}
		
		public System.Data.Linq.Table<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this.GetTable<FCreateTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<FEquifaxResponseEntity> FEquifaxResponses
		{
			get
			{
				return this.GetTable<FEquifaxResponseEntity>();
			}
		}
		
		public System.Data.Linq.Table<FExtendLoanEntity> FExtendLoans
		{
			get
			{
				return this.GetTable<FExtendLoanEntity>();
			}
		}
		
		public System.Data.Linq.Table<FIApplicationAcceptedEntity> FIApplicationAccepteds
		{
			get
			{
				return this.GetTable<FIApplicationAcceptedEntity>();
			}
		}
		
		public System.Data.Linq.Table<FIApplicationClosedEntity> FIApplicationCloseds
		{
			get
			{
				return this.GetTable<FIApplicationClosedEntity>();
			}
		}
		
		public System.Data.Linq.Table<FIApplicationDeclinedEntity> FIApplicationDeclineds
		{
			get
			{
				return this.GetTable<FIApplicationDeclinedEntity>();
			}
		}
		
		public System.Data.Linq.Table<FIFixedTermApplicationAddedEntity> FIFixedTermApplicationAddeds
		{
			get
			{
				return this.GetTable<FIFixedTermApplicationAddedEntity>();
			}
		}
		
		public System.Data.Linq.Table<FixedTermLoanExtensionEntity> FixedTermLoanExtensions
		{
			get
			{
				return this.GetTable<FixedTermLoanExtensionEntity>();
			}
		}
		
		public System.Data.Linq.Table<FixedTermLoanTopUpEntity> FixedTermLoanTopUps
		{
			get
			{
				return this.GetTable<FixedTermLoanTopUpEntity>();
			}
		}
		
		public System.Data.Linq.Table<FMessageTypeEntity> FMessageTypes
		{
			get
			{
				return this.GetTable<FMessageTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this.GetTable<FPaymentCollectionEntity>();
			}
		}
		
		public System.Data.Linq.Table<FPaymentSentMessageEntity> FPaymentSentMessages
		{
			get
			{
				return this.GetTable<FPaymentSentMessageEntity>();
			}
		}
		
		public System.Data.Linq.Table<FRepayLoanEntity> FRepayLoans
		{
			get
			{
				return this.GetTable<FRepayLoanEntity>();
			}
		}
		
		public System.Data.Linq.Table<FSignApplicationEntity> FSignApplications
		{
			get
			{
				return this.GetTable<FSignApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<FSignFixedTermLoanExtensionEntity> FSignFixedTermLoanExtensions
		{
			get
			{
				return this.GetTable<FSignFixedTermLoanExtensionEntity>();
			}
		}
		
		public System.Data.Linq.Table<FSignFixedTermLoanTopupEntity> FSignFixedTermLoanTopups
		{
			get
			{
				return this.GetTable<FSignFixedTermLoanTopupEntity>();
			}
		}
		
		public System.Data.Linq.Table<FSubmitCounterOfferEntity> FSubmitCounterOffers
		{
			get
			{
				return this.GetTable<FSubmitCounterOfferEntity>();
			}
		}
		
		public System.Data.Linq.Table<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this.GetTable<FTransactionLedgerEntity>();
			}
		}
		
		public System.Data.Linq.Table<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this.GetTable<FTransactionRequestEntity>();
			}
		}
		
		public System.Data.Linq.Table<FTransactionRequestDetailEntity> FTransactionRequestDetails
		{
			get
			{
				return this.GetTable<FTransactionRequestDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this.GetTable<FTransunionResponseEntity>();
			}
		}
		
		public System.Data.Linq.Table<FUpdateDailyAccruedInterestEntity> FUpdateDailyAccruedInterests
		{
			get
			{
				return this.GetTable<FUpdateDailyAccruedInterestEntity>();
			}
		}
		
		public System.Data.Linq.Table<LnEntity> Lns
		{
			get
			{
				return this.GetTable<LnEntity>();
			}
		}
		
		public System.Data.Linq.Table<LogMessageSourceEntity> LogMessageSources
		{
			get
			{
				return this.GetTable<LogMessageSourceEntity>();
			}
		}
		
		public System.Data.Linq.Table<LogMessageTypeEntity> LogMessageTypes
		{
			get
			{
				return this.GetTable<LogMessageTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<MergeLogEntity> MergeLogs
		{
			get
			{
				return this.GetTable<MergeLogEntity>();
			}
		}
		
		public System.Data.Linq.Table<MessageArchiveEntity> MessageArchives
		{
			get
			{
				return this.GetTable<MessageArchiveEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<NationalHolidayEntity> NationalHolidays
		{
			get
			{
				return this.GetTable<NationalHolidayEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCardEntity> PaymentCards
		{
			get
			{
				return this.GetTable<PaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCollectionEntity> PaymentCollections
		{
			get
			{
				return this.GetTable<PaymentCollectionEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCollectionAgencyEntity> PaymentCollectionAgencies
		{
			get
			{
				return this.GetTable<PaymentCollectionAgencyEntity>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCollectionStatus> PaymentCollectionStatus
		{
			get
			{
				return this.GetTable<PaymentCollectionStatus>();
			}
		}
		
		public System.Data.Linq.Table<PaymentCollectionTypeEntity> PaymentCollectionTypes
		{
			get
			{
				return this.GetTable<PaymentCollectionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ProcessMessageLogEntity> ProcessMessageLogs
		{
			get
			{
				return this.GetTable<ProcessMessageLogEntity>();
			}
		}
		
		public System.Data.Linq.Table<PromoCodeEntity> PromoCodes
		{
			get
			{
				return this.GetTable<PromoCodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentRequestEntity> RepaymentRequests
		{
			get
			{
				return this.GetTable<RepaymentRequestEntity>();
			}
		}
		
		public System.Data.Linq.Table<ServiceBrokerLogEntity> ServiceBrokerLogs
		{
			get
			{
				return this.GetTable<ServiceBrokerLogEntity>();
			}
		}
		
		public System.Data.Linq.Table<TimeEntity> Times
		{
			get
			{
				return this.GetTable<TimeEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionEntity> Transactions
		{
			get
			{
				return this.GetTable<TransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionScopeEntity> TransactionScopes
		{
			get
			{
				return this.GetTable<TransactionScopeEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionStatus> TransactionStatus
		{
			get
			{
				return this.GetTable<TransactionStatus>();
			}
		}
		
		public System.Data.Linq.Table<TransactionTypeEntity> TransactionTypes
		{
			get
			{
				return this.GetTable<TransactionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransunionConsumerEntity> TransunionConsumers
		{
			get
			{
				return this.GetTable<TransunionConsumerEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransunionResponseEntity> TransunionResponses
		{
			get
			{
				return this.GetTable<TransunionResponseEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransunionResponseStatus> TransunionResponseStatus
		{
			get
			{
				return this.GetTable<TransunionResponseStatus>();
			}
		}
		
		public System.Data.Linq.Table<TransunionSagaEntity> TransunionSagas
		{
			get
			{
				return this.GetTable<TransunionSagaEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEntity> Users
		{
			get
			{
				return this.GetTable<UserEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserActionEntity> UserActions
		{
			get
			{
				return this.GetTable<UserActionEntity>();
			}
		}
		
		public System.Data.Linq.Table<WongaMessageEntity> WongaMessages
		{
			get
			{
				return this.GetTable<WongaMessageEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__RefactorLog")]
	public partial class @__RefactorLog : DbEntity<@__RefactorLog>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperationKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationKeyChanging(System.Guid value);
    partial void OnOperationKeyChanged();
    #endregion
		
		public @__RefactorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperationKey
		{
			get
			{
				return this._OperationKey;
			}
			set
			{
				if ((this._OperationKey != value))
				{
					this.OnOperationKeyChanging(value);
					this.SendPropertyChanging();
					this._OperationKey = value;
					this.SendPropertyChanged("OperationKey");
					this.OnOperationKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Account")]
	public partial class AccountEntity : DbEntity<AccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountSKey;
		
		private System.Guid _AccountNKey;
		
		private bool _AcceptMarketingContact;
		
		private System.DateTime _DateOfBirth;
		
		private string _Gender;
		
		private string _NationalNumber;
		
		private string _Title;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MiddleName;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _WorkPhone;
		
		private string _Email;
		
		private string _Flat;
		
		private string _HouseName;
		
		private string _HouseNumber;
		
		private string _Street;
		
		private string _Postcode;
		
		private string _Town;
		
		private string _District;
		
		private string _County;
		
		private string _Country;
		
		private short _Dependants;
		
		private string _MaritalStatus;
		
		private string _OccupancyStatus;
		
		private string _VehicleRegistration;
		
		private System.Nullable<System.DateTime> _SCDEffectiveDateTime;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FAddPaymentCardEntity> _FAddPaymentCards;
		
		private EntitySet<FAggApplicationEntity> _FAggApplications;
		
		private EntitySet<FAggLoanNumberEntity> _FAggLoanNumbers;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
		private EntitySet<FCreateFixedTermLoanExtensionEntity> _FCreateFixedTermLoanExtensions;
		
		private EntitySet<FCreateFixedTermLoanTopupEntity> _FCreateFixedTermLoanTopups;
		
		private EntitySet<FEquifaxResponseEntity> _FEquifaxResponses;
		
		private EntitySet<FIApplicationAcceptedEntity> _FIApplicationAccepteds;
		
		private EntitySet<FIApplicationClosedEntity> _FIApplicationCloseds;
		
		private EntitySet<FIApplicationDeclinedEntity> _FIApplicationDeclineds;
		
		private EntitySet<FIFixedTermApplicationAddedEntity> _FIFixedTermApplicationAddeds;
		
		private EntitySet<FSignApplicationEntity> _FSignApplications;
		
		private EntitySet<FSignFixedTermLoanExtensionEntity> _FSignFixedTermLoanExtensions;
		
		private EntitySet<FSignFixedTermLoanTopupEntity> _FSignFixedTermLoanTopups;
		
		private EntitySet<FSubmitCounterOfferEntity> _FSubmitCounterOffers;
		
		private EntitySet<FTransunionResponseEntity> _FTransunionResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnAccountNKeyChanging(System.Guid value);
    partial void OnAccountNKeyChanged();
    partial void OnAcceptMarketingContactChanging(bool value);
    partial void OnAcceptMarketingContactChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnNationalNumberChanging(string value);
    partial void OnNationalNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnHouseNameChanging(string value);
    partial void OnHouseNameChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnDependantsChanging(short value);
    partial void OnDependantsChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnOccupancyStatusChanging(string value);
    partial void OnOccupancyStatusChanged();
    partial void OnVehicleRegistrationChanging(string value);
    partial void OnVehicleRegistrationChanged();
    partial void OnSCDEffectiveDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSCDEffectiveDateTimeChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public AccountEntity()
		{
			this._FAddPaymentCards = new EntitySet<FAddPaymentCardEntity>(new Action<FAddPaymentCardEntity>(this.attach_FAddPaymentCards), new Action<FAddPaymentCardEntity>(this.detach_FAddPaymentCards));
			this._FAggApplications = new EntitySet<FAggApplicationEntity>(new Action<FAggApplicationEntity>(this.attach_FAggApplications), new Action<FAggApplicationEntity>(this.detach_FAggApplications));
			this._FAggLoanNumbers = new EntitySet<FAggLoanNumberEntity>(new Action<FAggLoanNumberEntity>(this.attach_FAggLoanNumbers), new Action<FAggLoanNumberEntity>(this.detach_FAggLoanNumbers));
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			this._FCreateFixedTermLoanExtensions = new EntitySet<FCreateFixedTermLoanExtensionEntity>(new Action<FCreateFixedTermLoanExtensionEntity>(this.attach_FCreateFixedTermLoanExtensions), new Action<FCreateFixedTermLoanExtensionEntity>(this.detach_FCreateFixedTermLoanExtensions));
			this._FCreateFixedTermLoanTopups = new EntitySet<FCreateFixedTermLoanTopupEntity>(new Action<FCreateFixedTermLoanTopupEntity>(this.attach_FCreateFixedTermLoanTopups), new Action<FCreateFixedTermLoanTopupEntity>(this.detach_FCreateFixedTermLoanTopups));
			this._FEquifaxResponses = new EntitySet<FEquifaxResponseEntity>(new Action<FEquifaxResponseEntity>(this.attach_FEquifaxResponses), new Action<FEquifaxResponseEntity>(this.detach_FEquifaxResponses));
			this._FIApplicationAccepteds = new EntitySet<FIApplicationAcceptedEntity>(new Action<FIApplicationAcceptedEntity>(this.attach_FIApplicationAccepteds), new Action<FIApplicationAcceptedEntity>(this.detach_FIApplicationAccepteds));
			this._FIApplicationCloseds = new EntitySet<FIApplicationClosedEntity>(new Action<FIApplicationClosedEntity>(this.attach_FIApplicationCloseds), new Action<FIApplicationClosedEntity>(this.detach_FIApplicationCloseds));
			this._FIApplicationDeclineds = new EntitySet<FIApplicationDeclinedEntity>(new Action<FIApplicationDeclinedEntity>(this.attach_FIApplicationDeclineds), new Action<FIApplicationDeclinedEntity>(this.detach_FIApplicationDeclineds));
			this._FIFixedTermApplicationAddeds = new EntitySet<FIFixedTermApplicationAddedEntity>(new Action<FIFixedTermApplicationAddedEntity>(this.attach_FIFixedTermApplicationAddeds), new Action<FIFixedTermApplicationAddedEntity>(this.detach_FIFixedTermApplicationAddeds));
			this._FSignApplications = new EntitySet<FSignApplicationEntity>(new Action<FSignApplicationEntity>(this.attach_FSignApplications), new Action<FSignApplicationEntity>(this.detach_FSignApplications));
			this._FSignFixedTermLoanExtensions = new EntitySet<FSignFixedTermLoanExtensionEntity>(new Action<FSignFixedTermLoanExtensionEntity>(this.attach_FSignFixedTermLoanExtensions), new Action<FSignFixedTermLoanExtensionEntity>(this.detach_FSignFixedTermLoanExtensions));
			this._FSignFixedTermLoanTopups = new EntitySet<FSignFixedTermLoanTopupEntity>(new Action<FSignFixedTermLoanTopupEntity>(this.attach_FSignFixedTermLoanTopups), new Action<FSignFixedTermLoanTopupEntity>(this.detach_FSignFixedTermLoanTopups));
			this._FSubmitCounterOffers = new EntitySet<FSubmitCounterOfferEntity>(new Action<FSubmitCounterOfferEntity>(this.attach_FSubmitCounterOffers), new Action<FSubmitCounterOfferEntity>(this.detach_FSubmitCounterOffers));
			this._FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_FTransunionResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountNKey
		{
			get
			{
				return this._AccountNKey;
			}
			set
			{
				if ((this._AccountNKey != value))
				{
					this.OnAccountNKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountNKey = value;
					this.SendPropertyChanged("AccountNKey");
					this.OnAccountNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptMarketingContact", DbType="Bit NOT NULL")]
		public bool AcceptMarketingContact
		{
			get
			{
				return this._AcceptMarketingContact;
			}
			set
			{
				if ((this._AcceptMarketingContact != value))
				{
					this.OnAcceptMarketingContactChanging(value);
					this.SendPropertyChanging();
					this._AcceptMarketingContact = value;
					this.SendPropertyChanged("AcceptMarketingContact");
					this.OnAcceptMarketingContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalNumber", DbType="NVarChar(50)")]
		public string NationalNumber
		{
			get
			{
				return this._NationalNumber;
			}
			set
			{
				if ((this._NationalNumber != value))
				{
					this.OnNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._NationalNumber = value;
					this.SendPropertyChanged("NationalNumber");
					this.OnNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string HouseName
		{
			get
			{
				return this._HouseName;
			}
			set
			{
				if ((this._HouseName != value))
				{
					this.OnHouseNameChanging(value);
					this.SendPropertyChanging();
					this._HouseName = value;
					this.SendPropertyChanged("HouseName");
					this.OnHouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNumber", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dependants", DbType="SmallInt NOT NULL")]
		public short Dependants
		{
			get
			{
				return this._Dependants;
			}
			set
			{
				if ((this._Dependants != value))
				{
					this.OnDependantsChanging(value);
					this.SendPropertyChanging();
					this._Dependants = value;
					this.SendPropertyChanged("Dependants");
					this.OnDependantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupancyStatus", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string OccupancyStatus
		{
			get
			{
				return this._OccupancyStatus;
			}
			set
			{
				if ((this._OccupancyStatus != value))
				{
					this.OnOccupancyStatusChanging(value);
					this.SendPropertyChanging();
					this._OccupancyStatus = value;
					this.SendPropertyChanged("OccupancyStatus");
					this.OnOccupancyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleRegistration", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string VehicleRegistration
		{
			get
			{
				return this._VehicleRegistration;
			}
			set
			{
				if ((this._VehicleRegistration != value))
				{
					this.OnVehicleRegistrationChanging(value);
					this.SendPropertyChanging();
					this._VehicleRegistration = value;
					this.SendPropertyChanged("VehicleRegistration");
					this.OnVehicleRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCDEffectiveDateTime", DbType="DateTime2(7)")]
		public System.Nullable<System.DateTime> SCDEffectiveDateTime
		{
			get
			{
				return this._SCDEffectiveDateTime;
			}
			set
			{
				if ((this._SCDEffectiveDateTime != value))
				{
					this.OnSCDEffectiveDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SCDEffectiveDateTime = value;
					this.SendPropertyChanged("SCDEffectiveDateTime");
					this.OnSCDEffectiveDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biAccount", Storage="_FAddPaymentCards", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAddPaymentCardEntity> FAddPaymentCards
		{
			get
			{
				return this._FAddPaymentCards;
			}
			set
			{
				this._FAddPaymentCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biAccount", Storage="_FAggApplications", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this._FAggApplications;
			}
			set
			{
				this._FAggApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggLoanNumber_REF_biAccount", Storage="_FAggLoanNumbers", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggLoanNumberEntity> FAggLoanNumbers
		{
			get
			{
				return this._FAggLoanNumbers;
			}
			set
			{
				this._FAggLoanNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biAccount", Storage="_FCreateFixedTermLoanApplications", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biAccount", Storage="_FCreateFixedTermLoanExtensions", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanExtensionEntity> FCreateFixedTermLoanExtensions
		{
			get
			{
				return this._FCreateFixedTermLoanExtensions;
			}
			set
			{
				this._FCreateFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biAccount", Storage="_FCreateFixedTermLoanTopups", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanTopupEntity> FCreateFixedTermLoanTopups
		{
			get
			{
				return this._FCreateFixedTermLoanTopups;
			}
			set
			{
				this._FCreateFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biAccount", Storage="_FEquifaxResponses", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FEquifaxResponseEntity> FEquifaxResponses
		{
			get
			{
				return this._FEquifaxResponses;
			}
			set
			{
				this._FEquifaxResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biAccount", Storage="_FIApplicationAccepteds", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationAcceptedEntity> FIApplicationAccepteds
		{
			get
			{
				return this._FIApplicationAccepteds;
			}
			set
			{
				this._FIApplicationAccepteds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biAccount", Storage="_FIApplicationCloseds", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationClosedEntity> FIApplicationCloseds
		{
			get
			{
				return this._FIApplicationCloseds;
			}
			set
			{
				this._FIApplicationCloseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biAccount", Storage="_FIApplicationDeclineds", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationDeclinedEntity> FIApplicationDeclineds
		{
			get
			{
				return this._FIApplicationDeclineds;
			}
			set
			{
				this._FIApplicationDeclineds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biAccount", Storage="_FIFixedTermApplicationAddeds", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIFixedTermApplicationAddedEntity> FIFixedTermApplicationAddeds
		{
			get
			{
				return this._FIFixedTermApplicationAddeds;
			}
			set
			{
				this._FIFixedTermApplicationAddeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biAccount", Storage="_FSignApplications", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignApplicationEntity> FSignApplications
		{
			get
			{
				return this._FSignApplications;
			}
			set
			{
				this._FSignApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biAccount", Storage="_FSignFixedTermLoanExtensions", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanExtensionEntity> FSignFixedTermLoanExtensions
		{
			get
			{
				return this._FSignFixedTermLoanExtensions;
			}
			set
			{
				this._FSignFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biAccount", Storage="_FSignFixedTermLoanTopups", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanTopupEntity> FSignFixedTermLoanTopups
		{
			get
			{
				return this._FSignFixedTermLoanTopups;
			}
			set
			{
				this._FSignFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biAccount", Storage="_FSubmitCounterOffers", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSubmitCounterOfferEntity> FSubmitCounterOffers
		{
			get
			{
				return this._FSubmitCounterOffers;
			}
			set
			{
				this._FSubmitCounterOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biAccount", Storage="_FTransunionResponses", ThisKey="AccountSKey", OtherKey="AccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this._FTransunionResponses;
			}
			set
			{
				this._FTransunionResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FAggLoanNumbers(FAggLoanNumberEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FAggLoanNumbers(FAggLoanNumberEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FEquifaxResponses(FEquifaxResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FEquifaxResponses(FEquifaxResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FIApplicationAccepteds(FIApplicationAcceptedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FIApplicationAccepteds(FIApplicationAcceptedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FIFixedTermApplicationAddeds(FIFixedTermApplicationAddedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FIFixedTermApplicationAddeds(FIFixedTermApplicationAddedEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FSubmitCounterOffers(FSubmitCounterOfferEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FSubmitCounterOffers(FSubmitCounterOfferEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
		
		private void attach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = this;
		}
		
		private void detach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Affiliate")]
	public partial class AffiliateEntity : DbEntity<AffiliateEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _AffiliateSKey;
		
		private string _AffiliateNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FAggApplicationEntity> _FAggApplications;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAffiliateSKeyChanging(short value);
    partial void OnAffiliateSKeyChanged();
    partial void OnAffiliateNKeyChanging(string value);
    partial void OnAffiliateNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public AffiliateEntity()
		{
			this._FAggApplications = new EntitySet<FAggApplicationEntity>(new Action<FAggApplicationEntity>(this.attach_FAggApplications), new Action<FAggApplicationEntity>(this.detach_FAggApplications));
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateSKey", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short AffiliateSKey
		{
			get
			{
				return this._AffiliateSKey;
			}
			set
			{
				if ((this._AffiliateSKey != value))
				{
					this.OnAffiliateSKeyChanging(value);
					this.SendPropertyChanging();
					this._AffiliateSKey = value;
					this.SendPropertyChanged("AffiliateSKey");
					this.OnAffiliateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AffiliateNKey
		{
			get
			{
				return this._AffiliateNKey;
			}
			set
			{
				if ((this._AffiliateNKey != value))
				{
					this.OnAffiliateNKeyChanging(value);
					this.SendPropertyChanging();
					this._AffiliateNKey = value;
					this.SendPropertyChanged("AffiliateNKey");
					this.OnAffiliateNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biAffiliate", Storage="_FAggApplications", ThisKey="AffiliateSKey", OtherKey="AffiliateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this._FAggApplications;
			}
			set
			{
				this._FAggApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biAffiliate", Storage="_FCreateFixedTermLoanApplications", ThisKey="AffiliateSKey", OtherKey="AffiliateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = this;
		}
		
		private void detach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.AggregationBuildExecution")]
	public partial class AggregationBuildExecutionEntity : DbEntity<AggregationBuildExecutionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AggregationBuildExecutionId;
		
		private System.DateTime _AggregationBuildExecutionStartTime;
		
		private System.Nullable<System.DateTime> _AggregationBuildExecutionEndTime;
		
		private EntitySet<AggregationBuildLogEntity> _AggregationBuildLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAggregationBuildExecutionIdChanging(int value);
    partial void OnAggregationBuildExecutionIdChanged();
    partial void OnAggregationBuildExecutionStartTimeChanging(System.DateTime value);
    partial void OnAggregationBuildExecutionStartTimeChanged();
    partial void OnAggregationBuildExecutionEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAggregationBuildExecutionEndTimeChanged();
    #endregion
		
		public AggregationBuildExecutionEntity()
		{
			this._AggregationBuildLogs = new EntitySet<AggregationBuildLogEntity>(new Action<AggregationBuildLogEntity>(this.attach_AggregationBuildLogs), new Action<AggregationBuildLogEntity>(this.detach_AggregationBuildLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildExecutionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AggregationBuildExecutionId
		{
			get
			{
				return this._AggregationBuildExecutionId;
			}
			set
			{
				if ((this._AggregationBuildExecutionId != value))
				{
					this.OnAggregationBuildExecutionIdChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildExecutionId = value;
					this.SendPropertyChanged("AggregationBuildExecutionId");
					this.OnAggregationBuildExecutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildExecutionStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime AggregationBuildExecutionStartTime
		{
			get
			{
				return this._AggregationBuildExecutionStartTime;
			}
			set
			{
				if ((this._AggregationBuildExecutionStartTime != value))
				{
					this.OnAggregationBuildExecutionStartTimeChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildExecutionStartTime = value;
					this.SendPropertyChanged("AggregationBuildExecutionStartTime");
					this.OnAggregationBuildExecutionStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildExecutionEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AggregationBuildExecutionEndTime
		{
			get
			{
				return this._AggregationBuildExecutionEndTime;
			}
			set
			{
				if ((this._AggregationBuildExecutionEndTime != value))
				{
					this.OnAggregationBuildExecutionEndTimeChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildExecutionEndTime = value;
					this.SendPropertyChanged("AggregationBuildExecutionEndTime");
					this.OnAggregationBuildExecutionEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biAggregationBuildExecution", Storage="_AggregationBuildLogs", ThisKey="AggregationBuildExecutionId", OtherKey="AggregationBuildExecutionId", DeleteRule="NO ACTION")]
		public EntitySet<AggregationBuildLogEntity> AggregationBuildLogs
		{
			get
			{
				return this._AggregationBuildLogs;
			}
			set
			{
				this._AggregationBuildLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.AggregationBuildExecutionEntity = this;
		}
		
		private void detach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.AggregationBuildExecutionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.AggregationBuildLog")]
	public partial class AggregationBuildLogEntity : DbEntity<AggregationBuildLogEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AggregationBuildLogId;
		
		private int _AggregationBuildExecutionId;
		
		private System.Nullable<short> _AggregationBuildStepId;
		
		private short _LogMessageSourceId;
		
		private byte _LogMessageTypeId;
		
		private string _LogMessage;
		
		private int _AggregationBuildTimeTakenMS;
		
		private System.Nullable<int> _BuildStepTimeTakenMS;
		
		private System.Nullable<int> _InsertCount;
		
		private System.Nullable<int> _UpdateCount;
		
		private System.DateTime _LogTimestamp;
		
		private EntityRef<AggregationBuildExecutionEntity> _AggregationBuildExecutionEntity;
		
		private EntityRef<LogMessageSourceEntity> _LogMessageSourceEntity;
		
		private EntityRef<LogMessageTypeEntity> _LogMessageTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAggregationBuildLogIdChanging(long value);
    partial void OnAggregationBuildLogIdChanged();
    partial void OnAggregationBuildExecutionIdChanging(int value);
    partial void OnAggregationBuildExecutionIdChanged();
    partial void OnAggregationBuildStepIdChanging(System.Nullable<short> value);
    partial void OnAggregationBuildStepIdChanged();
    partial void OnLogMessageSourceIdChanging(short value);
    partial void OnLogMessageSourceIdChanged();
    partial void OnLogMessageTypeIdChanging(byte value);
    partial void OnLogMessageTypeIdChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnAggregationBuildTimeTakenMSChanging(int value);
    partial void OnAggregationBuildTimeTakenMSChanged();
    partial void OnBuildStepTimeTakenMSChanging(System.Nullable<int> value);
    partial void OnBuildStepTimeTakenMSChanged();
    partial void OnInsertCountChanging(System.Nullable<int> value);
    partial void OnInsertCountChanged();
    partial void OnUpdateCountChanging(System.Nullable<int> value);
    partial void OnUpdateCountChanged();
    partial void OnLogTimestampChanging(System.DateTime value);
    partial void OnLogTimestampChanged();
    #endregion
		
		public AggregationBuildLogEntity()
		{
			this._AggregationBuildExecutionEntity = default(EntityRef<AggregationBuildExecutionEntity>);
			this._LogMessageSourceEntity = default(EntityRef<LogMessageSourceEntity>);
			this._LogMessageTypeEntity = default(EntityRef<LogMessageTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildLogId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AggregationBuildLogId
		{
			get
			{
				return this._AggregationBuildLogId;
			}
			set
			{
				if ((this._AggregationBuildLogId != value))
				{
					this.OnAggregationBuildLogIdChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildLogId = value;
					this.SendPropertyChanged("AggregationBuildLogId");
					this.OnAggregationBuildLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildExecutionId", DbType="Int NOT NULL")]
		public int AggregationBuildExecutionId
		{
			get
			{
				return this._AggregationBuildExecutionId;
			}
			set
			{
				if ((this._AggregationBuildExecutionId != value))
				{
					if (this._AggregationBuildExecutionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAggregationBuildExecutionIdChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildExecutionId = value;
					this.SendPropertyChanged("AggregationBuildExecutionId");
					this.OnAggregationBuildExecutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildStepId", DbType="SmallInt")]
		public System.Nullable<short> AggregationBuildStepId
		{
			get
			{
				return this._AggregationBuildStepId;
			}
			set
			{
				if ((this._AggregationBuildStepId != value))
				{
					this.OnAggregationBuildStepIdChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildStepId = value;
					this.SendPropertyChanged("AggregationBuildStepId");
					this.OnAggregationBuildStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageSourceId", DbType="SmallInt NOT NULL")]
		public short LogMessageSourceId
		{
			get
			{
				return this._LogMessageSourceId;
			}
			set
			{
				if ((this._LogMessageSourceId != value))
				{
					if (this._LogMessageSourceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogMessageSourceIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageSourceId = value;
					this.SendPropertyChanged("LogMessageSourceId");
					this.OnLogMessageSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageTypeId", DbType="TinyInt NOT NULL")]
		public byte LogMessageTypeId
		{
			get
			{
				return this._LogMessageTypeId;
			}
			set
			{
				if ((this._LogMessageTypeId != value))
				{
					if (this._LogMessageTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogMessageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageTypeId = value;
					this.SendPropertyChanged("LogMessageTypeId");
					this.OnLogMessageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildTimeTakenMS", DbType="Int NOT NULL")]
		public int AggregationBuildTimeTakenMS
		{
			get
			{
				return this._AggregationBuildTimeTakenMS;
			}
			set
			{
				if ((this._AggregationBuildTimeTakenMS != value))
				{
					this.OnAggregationBuildTimeTakenMSChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildTimeTakenMS = value;
					this.SendPropertyChanged("AggregationBuildTimeTakenMS");
					this.OnAggregationBuildTimeTakenMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildStepTimeTakenMS", DbType="Int")]
		public System.Nullable<int> BuildStepTimeTakenMS
		{
			get
			{
				return this._BuildStepTimeTakenMS;
			}
			set
			{
				if ((this._BuildStepTimeTakenMS != value))
				{
					this.OnBuildStepTimeTakenMSChanging(value);
					this.SendPropertyChanging();
					this._BuildStepTimeTakenMS = value;
					this.SendPropertyChanged("BuildStepTimeTakenMS");
					this.OnBuildStepTimeTakenMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertCount", DbType="Int")]
		public System.Nullable<int> InsertCount
		{
			get
			{
				return this._InsertCount;
			}
			set
			{
				if ((this._InsertCount != value))
				{
					this.OnInsertCountChanging(value);
					this.SendPropertyChanging();
					this._InsertCount = value;
					this.SendPropertyChanged("InsertCount");
					this.OnInsertCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCount", DbType="Int")]
		public System.Nullable<int> UpdateCount
		{
			get
			{
				return this._UpdateCount;
			}
			set
			{
				if ((this._UpdateCount != value))
				{
					this.OnUpdateCountChanging(value);
					this.SendPropertyChanging();
					this._UpdateCount = value;
					this.SendPropertyChanged("UpdateCount");
					this.OnUpdateCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTimestamp", DbType="DateTime2(0) NOT NULL")]
		public System.DateTime LogTimestamp
		{
			get
			{
				return this._LogTimestamp;
			}
			set
			{
				if ((this._LogTimestamp != value))
				{
					this.OnLogTimestampChanging(value);
					this.SendPropertyChanging();
					this._LogTimestamp = value;
					this.SendPropertyChanged("LogTimestamp");
					this.OnLogTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biAggregationBuildExecution", Storage="_AggregationBuildExecutionEntity", ThisKey="AggregationBuildExecutionId", OtherKey="AggregationBuildExecutionId", IsForeignKey=true)]
		public AggregationBuildExecutionEntity AggregationBuildExecutionEntity
		{
			get
			{
				return this._AggregationBuildExecutionEntity.Entity;
			}
			set
			{
				AggregationBuildExecutionEntity previousValue = this._AggregationBuildExecutionEntity.Entity;
				if (((previousValue != value) 
							|| (this._AggregationBuildExecutionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AggregationBuildExecutionEntity.Entity = null;
						previousValue.AggregationBuildLogs.Remove(this);
					}
					this._AggregationBuildExecutionEntity.Entity = value;
					if ((value != null))
					{
						value.AggregationBuildLogs.Add(this);
						this._AggregationBuildExecutionId = value.AggregationBuildExecutionId;
					}
					else
					{
						this._AggregationBuildExecutionId = default(int);
					}
					this.SendPropertyChanged("AggregationBuildExecutionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biLogMessageSource", Storage="_LogMessageSourceEntity", ThisKey="LogMessageSourceId", OtherKey="LogMessageSourceId", IsForeignKey=true)]
		public LogMessageSourceEntity LogMessageSourceEntity
		{
			get
			{
				return this._LogMessageSourceEntity.Entity;
			}
			set
			{
				LogMessageSourceEntity previousValue = this._LogMessageSourceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LogMessageSourceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogMessageSourceEntity.Entity = null;
						previousValue.AggregationBuildLogs.Remove(this);
					}
					this._LogMessageSourceEntity.Entity = value;
					if ((value != null))
					{
						value.AggregationBuildLogs.Add(this);
						this._LogMessageSourceId = value.LogMessageSourceId;
					}
					else
					{
						this._LogMessageSourceId = default(short);
					}
					this.SendPropertyChanged("LogMessageSourceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biLogMessageType", Storage="_LogMessageTypeEntity", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", IsForeignKey=true)]
		public LogMessageTypeEntity LogMessageTypeEntity
		{
			get
			{
				return this._LogMessageTypeEntity.Entity;
			}
			set
			{
				LogMessageTypeEntity previousValue = this._LogMessageTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._LogMessageTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogMessageTypeEntity.Entity = null;
						previousValue.AggregationBuildLogs.Remove(this);
					}
					this._LogMessageTypeEntity.Entity = value;
					if ((value != null))
					{
						value.AggregationBuildLogs.Add(this);
						this._LogMessageTypeId = value.LogMessageTypeId;
					}
					else
					{
						this._LogMessageTypeId = default(byte);
					}
					this.SendPropertyChanged("LogMessageTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.AggregationBuildStep")]
	public partial class AggregationBuildStepEntity : DbEntity<AggregationBuildStepEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _AggregationBuildStepId;
		
		private string _AggregationBuildStepName;
		
		private bool _AggregationBuildStepEnabled;
		
		private short _AggregationBuildStepOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAggregationBuildStepIdChanging(short value);
    partial void OnAggregationBuildStepIdChanged();
    partial void OnAggregationBuildStepNameChanging(string value);
    partial void OnAggregationBuildStepNameChanged();
    partial void OnAggregationBuildStepEnabledChanging(bool value);
    partial void OnAggregationBuildStepEnabledChanged();
    partial void OnAggregationBuildStepOrderChanging(short value);
    partial void OnAggregationBuildStepOrderChanged();
    #endregion
		
		public AggregationBuildStepEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildStepId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short AggregationBuildStepId
		{
			get
			{
				return this._AggregationBuildStepId;
			}
			set
			{
				if ((this._AggregationBuildStepId != value))
				{
					this.OnAggregationBuildStepIdChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildStepId = value;
					this.SendPropertyChanged("AggregationBuildStepId");
					this.OnAggregationBuildStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildStepName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AggregationBuildStepName
		{
			get
			{
				return this._AggregationBuildStepName;
			}
			set
			{
				if ((this._AggregationBuildStepName != value))
				{
					this.OnAggregationBuildStepNameChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildStepName = value;
					this.SendPropertyChanged("AggregationBuildStepName");
					this.OnAggregationBuildStepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildStepEnabled", DbType="Bit NOT NULL")]
		public bool AggregationBuildStepEnabled
		{
			get
			{
				return this._AggregationBuildStepEnabled;
			}
			set
			{
				if ((this._AggregationBuildStepEnabled != value))
				{
					this.OnAggregationBuildStepEnabledChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildStepEnabled = value;
					this.SendPropertyChanged("AggregationBuildStepEnabled");
					this.OnAggregationBuildStepEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregationBuildStepOrder", DbType="SmallInt NOT NULL")]
		public short AggregationBuildStepOrder
		{
			get
			{
				return this._AggregationBuildStepOrder;
			}
			set
			{
				if ((this._AggregationBuildStepOrder != value))
				{
					this.OnAggregationBuildStepOrderChanging(value);
					this.SendPropertyChanging();
					this._AggregationBuildStepOrder = value;
					this.SendPropertyChanged("AggregationBuildStepOrder");
					this.OnAggregationBuildStepOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.ApiClient")]
	public partial class ApiClientEntity : DbEntity<ApiClientEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApiClientSKey;
		
		private System.Guid _ApiClientNKey;
		
		private string _ApiClientName;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApiClientSKeyChanging(int value);
    partial void OnApiClientSKeyChanged();
    partial void OnApiClientNKeyChanging(System.Guid value);
    partial void OnApiClientNKeyChanged();
    partial void OnApiClientNameChanging(string value);
    partial void OnApiClientNameChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public ApiClientEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiClientSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApiClientSKey
		{
			get
			{
				return this._ApiClientSKey;
			}
			set
			{
				if ((this._ApiClientSKey != value))
				{
					this.OnApiClientSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiClientSKey = value;
					this.SendPropertyChanged("ApiClientSKey");
					this.OnApiClientSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiClientNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApiClientNKey
		{
			get
			{
				return this._ApiClientNKey;
			}
			set
			{
				if ((this._ApiClientNKey != value))
				{
					this.OnApiClientNKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiClientNKey = value;
					this.SendPropertyChanged("ApiClientNKey");
					this.OnApiClientNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiClientName", DbType="NVarChar(100)")]
		public string ApiClientName
		{
			get
			{
				return this._ApiClientName;
			}
			set
			{
				if ((this._ApiClientName != value))
				{
					this.OnApiClientNameChanging(value);
					this.SendPropertyChanging();
					this._ApiClientName = value;
					this.SendPropertyChanged("ApiClientName");
					this.OnApiClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Application")]
	public partial class ApplicationEntity : DbEntity<ApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private System.Guid _ApplicationNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<BankGateWayTransactionEntity> _BankGateWayTransactions;
		
		private EntitySet<FAggApplicationEntity> _FAggApplications;
		
		private EntityRef<FBankAccountVerificationEntity> _FBankAccountVerificationEntity;
		
		private EntityRef<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplicationEntity;
		
		private EntitySet<FCreateFixedTermLoanExtensionEntity> _FCreateFixedTermLoanExtensions;
		
		private EntitySet<FCreateFixedTermLoanTopupEntity> _FCreateFixedTermLoanTopups;
		
		private EntitySet<FCreateTransactionEntity> _FCreateTransactions;
		
		private EntitySet<FExtendLoanEntity> _FExtendLoans;
		
		private EntityRef<FIApplicationAcceptedEntity> _FIApplicationAcceptedEntity;
		
		private EntitySet<FIApplicationClosedEntity> _FIApplicationCloseds;
		
		private EntityRef<FIApplicationDeclinedEntity> _FIApplicationDeclinedEntity;
		
		private EntityRef<FIFixedTermApplicationAddedEntity> _FIFixedTermApplicationAddedEntity;
		
		private EntitySet<FPaymentCollectionEntity> _FPaymentCollections;
		
		private EntitySet<FRepayLoanEntity> _FRepayLoans;
		
		private EntitySet<FSignApplicationEntity> _FSignApplications;
		
		private EntitySet<FSignFixedTermLoanExtensionEntity> _FSignFixedTermLoanExtensions;
		
		private EntitySet<FSignFixedTermLoanTopupEntity> _FSignFixedTermLoanTopups;
		
		private EntityRef<FSubmitCounterOfferEntity> _FSubmitCounterOfferEntity;
		
		private EntitySet<FTransactionLedgerEntity> _FTransactionLedgers;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
		private EntitySet<FUpdateDailyAccruedInterestEntity> _FUpdateDailyAccruedInterests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnApplicationNKeyChanging(System.Guid value);
    partial void OnApplicationNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public ApplicationEntity()
		{
			this._BankGateWayTransactions = new EntitySet<BankGateWayTransactionEntity>(new Action<BankGateWayTransactionEntity>(this.attach_BankGateWayTransactions), new Action<BankGateWayTransactionEntity>(this.detach_BankGateWayTransactions));
			this._FAggApplications = new EntitySet<FAggApplicationEntity>(new Action<FAggApplicationEntity>(this.attach_FAggApplications), new Action<FAggApplicationEntity>(this.detach_FAggApplications));
			this._FBankAccountVerificationEntity = default(EntityRef<FBankAccountVerificationEntity>);
			this._FCreateFixedTermLoanApplicationEntity = default(EntityRef<FCreateFixedTermLoanApplicationEntity>);
			this._FCreateFixedTermLoanExtensions = new EntitySet<FCreateFixedTermLoanExtensionEntity>(new Action<FCreateFixedTermLoanExtensionEntity>(this.attach_FCreateFixedTermLoanExtensions), new Action<FCreateFixedTermLoanExtensionEntity>(this.detach_FCreateFixedTermLoanExtensions));
			this._FCreateFixedTermLoanTopups = new EntitySet<FCreateFixedTermLoanTopupEntity>(new Action<FCreateFixedTermLoanTopupEntity>(this.attach_FCreateFixedTermLoanTopups), new Action<FCreateFixedTermLoanTopupEntity>(this.detach_FCreateFixedTermLoanTopups));
			this._FCreateTransactions = new EntitySet<FCreateTransactionEntity>(new Action<FCreateTransactionEntity>(this.attach_FCreateTransactions), new Action<FCreateTransactionEntity>(this.detach_FCreateTransactions));
			this._FExtendLoans = new EntitySet<FExtendLoanEntity>(new Action<FExtendLoanEntity>(this.attach_FExtendLoans), new Action<FExtendLoanEntity>(this.detach_FExtendLoans));
			this._FIApplicationAcceptedEntity = default(EntityRef<FIApplicationAcceptedEntity>);
			this._FIApplicationCloseds = new EntitySet<FIApplicationClosedEntity>(new Action<FIApplicationClosedEntity>(this.attach_FIApplicationCloseds), new Action<FIApplicationClosedEntity>(this.detach_FIApplicationCloseds));
			this._FIApplicationDeclinedEntity = default(EntityRef<FIApplicationDeclinedEntity>);
			this._FIFixedTermApplicationAddedEntity = default(EntityRef<FIFixedTermApplicationAddedEntity>);
			this._FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_FPaymentCollections));
			this._FRepayLoans = new EntitySet<FRepayLoanEntity>(new Action<FRepayLoanEntity>(this.attach_FRepayLoans), new Action<FRepayLoanEntity>(this.detach_FRepayLoans));
			this._FSignApplications = new EntitySet<FSignApplicationEntity>(new Action<FSignApplicationEntity>(this.attach_FSignApplications), new Action<FSignApplicationEntity>(this.detach_FSignApplications));
			this._FSignFixedTermLoanExtensions = new EntitySet<FSignFixedTermLoanExtensionEntity>(new Action<FSignFixedTermLoanExtensionEntity>(this.attach_FSignFixedTermLoanExtensions), new Action<FSignFixedTermLoanExtensionEntity>(this.detach_FSignFixedTermLoanExtensions));
			this._FSignFixedTermLoanTopups = new EntitySet<FSignFixedTermLoanTopupEntity>(new Action<FSignFixedTermLoanTopupEntity>(this.attach_FSignFixedTermLoanTopups), new Action<FSignFixedTermLoanTopupEntity>(this.detach_FSignFixedTermLoanTopups));
			this._FSubmitCounterOfferEntity = default(EntityRef<FSubmitCounterOfferEntity>);
			this._FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_FTransactionLedgers));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			this._FUpdateDailyAccruedInterests = new EntitySet<FUpdateDailyAccruedInterestEntity>(new Action<FUpdateDailyAccruedInterestEntity>(this.attach_FUpdateDailyAccruedInterests), new Action<FUpdateDailyAccruedInterestEntity>(this.detach_FUpdateDailyAccruedInterests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationNKey
		{
			get
			{
				return this._ApplicationNKey;
			}
			set
			{
				if ((this._ApplicationNKey != value))
				{
					this.OnApplicationNKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNKey = value;
					this.SendPropertyChanged("ApplicationNKey");
					this.OnApplicationNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biBankGatewayTranscation_REF_biApplication", Storage="_BankGateWayTransactions", ThisKey="ApplicationSKey", OtherKey="ApplicationSkey", DeleteRule="NO ACTION")]
		public EntitySet<BankGateWayTransactionEntity> BankGateWayTransactions
		{
			get
			{
				return this._BankGateWayTransactions;
			}
			set
			{
				this._BankGateWayTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biApplication", Storage="_FAggApplications", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this._FAggApplications;
			}
			set
			{
				this._FAggApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifBankAccountVerification_REF_biApplication", Storage="_FBankAccountVerificationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FBankAccountVerificationEntity FBankAccountVerificationEntity
		{
			get
			{
				return this._FBankAccountVerificationEntity.Entity;
			}
			set
			{
				FBankAccountVerificationEntity previousValue = this._FBankAccountVerificationEntity.Entity;
				if (((previousValue != value) 
							|| (this._FBankAccountVerificationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FBankAccountVerificationEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FBankAccountVerificationEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FBankAccountVerificationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biApplication", Storage="_FCreateFixedTermLoanApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FCreateFixedTermLoanApplicationEntity FCreateFixedTermLoanApplicationEntity
		{
			get
			{
				return this._FCreateFixedTermLoanApplicationEntity.Entity;
			}
			set
			{
				FCreateFixedTermLoanApplicationEntity previousValue = this._FCreateFixedTermLoanApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._FCreateFixedTermLoanApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FCreateFixedTermLoanApplicationEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FCreateFixedTermLoanApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FCreateFixedTermLoanApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biApplication", Storage="_FCreateFixedTermLoanExtensions", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanExtensionEntity> FCreateFixedTermLoanExtensions
		{
			get
			{
				return this._FCreateFixedTermLoanExtensions;
			}
			set
			{
				this._FCreateFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biApplication", Storage="_FCreateFixedTermLoanTopups", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanTopupEntity> FCreateFixedTermLoanTopups
		{
			get
			{
				return this._FCreateFixedTermLoanTopups;
			}
			set
			{
				this._FCreateFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biApplication", Storage="_FCreateTransactions", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this._FCreateTransactions;
			}
			set
			{
				this._FCreateTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biApplication", Storage="_FExtendLoans", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FExtendLoanEntity> FExtendLoans
		{
			get
			{
				return this._FExtendLoans;
			}
			set
			{
				this._FExtendLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biApplication", Storage="_FIApplicationAcceptedEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FIApplicationAcceptedEntity FIApplicationAcceptedEntity
		{
			get
			{
				return this._FIApplicationAcceptedEntity.Entity;
			}
			set
			{
				FIApplicationAcceptedEntity previousValue = this._FIApplicationAcceptedEntity.Entity;
				if (((previousValue != value) 
							|| (this._FIApplicationAcceptedEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FIApplicationAcceptedEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FIApplicationAcceptedEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FIApplicationAcceptedEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biApplication", Storage="_FIApplicationCloseds", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationClosedEntity> FIApplicationCloseds
		{
			get
			{
				return this._FIApplicationCloseds;
			}
			set
			{
				this._FIApplicationCloseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biApplication", Storage="_FIApplicationDeclinedEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FIApplicationDeclinedEntity FIApplicationDeclinedEntity
		{
			get
			{
				return this._FIApplicationDeclinedEntity.Entity;
			}
			set
			{
				FIApplicationDeclinedEntity previousValue = this._FIApplicationDeclinedEntity.Entity;
				if (((previousValue != value) 
							|| (this._FIApplicationDeclinedEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FIApplicationDeclinedEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FIApplicationDeclinedEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FIApplicationDeclinedEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biApplication", Storage="_FIFixedTermApplicationAddedEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FIFixedTermApplicationAddedEntity FIFixedTermApplicationAddedEntity
		{
			get
			{
				return this._FIFixedTermApplicationAddedEntity.Entity;
			}
			set
			{
				FIFixedTermApplicationAddedEntity previousValue = this._FIFixedTermApplicationAddedEntity.Entity;
				if (((previousValue != value) 
							|| (this._FIFixedTermApplicationAddedEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FIFixedTermApplicationAddedEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FIFixedTermApplicationAddedEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FIFixedTermApplicationAddedEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biApplication", Storage="_FPaymentCollections", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this._FPaymentCollections;
			}
			set
			{
				this._FPaymentCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biApplication", Storage="_FRepayLoans", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FRepayLoanEntity> FRepayLoans
		{
			get
			{
				return this._FRepayLoans;
			}
			set
			{
				this._FRepayLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biApplication", Storage="_FSignApplications", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignApplicationEntity> FSignApplications
		{
			get
			{
				return this._FSignApplications;
			}
			set
			{
				this._FSignApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biApplication", Storage="_FSignFixedTermLoanExtensions", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanExtensionEntity> FSignFixedTermLoanExtensions
		{
			get
			{
				return this._FSignFixedTermLoanExtensions;
			}
			set
			{
				this._FSignFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biApplication", Storage="_FSignFixedTermLoanTopups", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanTopupEntity> FSignFixedTermLoanTopups
		{
			get
			{
				return this._FSignFixedTermLoanTopups;
			}
			set
			{
				this._FSignFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biApplication", Storage="_FSubmitCounterOfferEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FSubmitCounterOfferEntity FSubmitCounterOfferEntity
		{
			get
			{
				return this._FSubmitCounterOfferEntity.Entity;
			}
			set
			{
				FSubmitCounterOfferEntity previousValue = this._FSubmitCounterOfferEntity.Entity;
				if (((previousValue != value) 
							|| (this._FSubmitCounterOfferEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSubmitCounterOfferEntity.Entity = null;
						previousValue.ApplicationEntity = null;
					}
					this._FSubmitCounterOfferEntity.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntity = this;
					}
					this.SendPropertyChanged("FSubmitCounterOfferEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biApplication", Storage="_FTransactionLedgers", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this._FTransactionLedgers;
			}
			set
			{
				this._FTransactionLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biApplication", Storage="_FTransactionRequests", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifUpdateDailyAccruedInterest_REF_biApplication", Storage="_FUpdateDailyAccruedInterests", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", DeleteRule="NO ACTION")]
		public EntitySet<FUpdateDailyAccruedInterestEntity> FUpdateDailyAccruedInterests
		{
			get
			{
				return this._FUpdateDailyAccruedInterests;
			}
			set
			{
				this._FUpdateDailyAccruedInterests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankGateWayTransactions(BankGateWayTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_BankGateWayTransactions(BankGateWayTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
		
		private void attach_FUpdateDailyAccruedInterests(FUpdateDailyAccruedInterestEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = this;
		}
		
		private void detach_FUpdateDailyAccruedInterests(FUpdateDailyAccruedInterestEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.ApplicationDeclinedReason")]
	public partial class ApplicationDeclinedReasonEntity : DbEntity<ApplicationDeclinedReasonEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ApplicationDeclinedReasonSKey;
		
		private string _ApplicationDeclinedReasonNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntitySet<FIApplicationDeclinedEntity> _FIApplicationDeclineds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationDeclinedReasonSKeyChanging(byte value);
    partial void OnApplicationDeclinedReasonSKeyChanged();
    partial void OnApplicationDeclinedReasonNKeyChanging(string value);
    partial void OnApplicationDeclinedReasonNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public ApplicationDeclinedReasonEntity()
		{
			this._FIApplicationDeclineds = new EntitySet<FIApplicationDeclinedEntity>(new Action<FIApplicationDeclinedEntity>(this.attach_FIApplicationDeclineds), new Action<FIApplicationDeclinedEntity>(this.detach_FIApplicationDeclineds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDeclinedReasonSKey", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ApplicationDeclinedReasonSKey
		{
			get
			{
				return this._ApplicationDeclinedReasonSKey;
			}
			set
			{
				if ((this._ApplicationDeclinedReasonSKey != value))
				{
					this.OnApplicationDeclinedReasonSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDeclinedReasonSKey = value;
					this.SendPropertyChanged("ApplicationDeclinedReasonSKey");
					this.OnApplicationDeclinedReasonSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDeclinedReasonNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationDeclinedReasonNKey
		{
			get
			{
				return this._ApplicationDeclinedReasonNKey;
			}
			set
			{
				if ((this._ApplicationDeclinedReasonNKey != value))
				{
					this.OnApplicationDeclinedReasonNKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDeclinedReasonNKey = value;
					this.SendPropertyChanged("ApplicationDeclinedReasonNKey");
					this.OnApplicationDeclinedReasonNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biApplicationDeclinedReason", Storage="_FIApplicationDeclineds", ThisKey="ApplicationDeclinedReasonSKey", OtherKey="ApplicationDeclinedReasonSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationDeclinedEntity> FIApplicationDeclineds
		{
			get
			{
				return this._FIApplicationDeclineds;
			}
			set
			{
				this._FIApplicationDeclineds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationDeclinedReasonEntity = this;
		}
		
		private void detach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationDeclinedReasonEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.BankAccount")]
	public partial class BankAccountEntity : DbEntity<BankAccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankAccountSKey;
		
		private System.Guid _BankAccountNKey;
		
		private string _HolderName;
		
		private string _BankCode;
		
		private string _BankName;
		
		private string _AccountNumber;
		
		private System.DateTime _AccountOpenDate;
		
		private string _CountryCode;
		
		private bool _IsPrimary;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankAccountSKeyChanging(int value);
    partial void OnBankAccountSKeyChanged();
    partial void OnBankAccountNKeyChanging(System.Guid value);
    partial void OnBankAccountNKeyChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountOpenDateChanging(System.DateTime value);
    partial void OnAccountOpenDateChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnIsPrimaryChanging(bool value);
    partial void OnIsPrimaryChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public BankAccountEntity()
		{
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankAccountSKey
		{
			get
			{
				return this._BankAccountSKey;
			}
			set
			{
				if ((this._BankAccountSKey != value))
				{
					this.OnBankAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._BankAccountSKey = value;
					this.SendPropertyChanged("BankAccountSKey");
					this.OnBankAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BankAccountNKey
		{
			get
			{
				return this._BankAccountNKey;
			}
			set
			{
				if ((this._BankAccountNKey != value))
				{
					this.OnBankAccountNKeyChanging(value);
					this.SendPropertyChanging();
					this._BankAccountNKey = value;
					this.SendPropertyChanged("BankAccountNKey");
					this.OnBankAccountNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountOpenDate", DbType="Date NOT NULL")]
		public System.DateTime AccountOpenDate
		{
			get
			{
				return this._AccountOpenDate;
			}
			set
			{
				if ((this._AccountOpenDate != value))
				{
					this.OnAccountOpenDateChanging(value);
					this.SendPropertyChanging();
					this._AccountOpenDate = value;
					this.SendPropertyChanged("AccountOpenDate");
					this.OnAccountOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimary", DbType="Bit NOT NULL")]
		public bool IsPrimary
		{
			get
			{
				return this._IsPrimary;
			}
			set
			{
				if ((this._IsPrimary != value))
				{
					this.OnIsPrimaryChanging(value);
					this.SendPropertyChanging();
					this._IsPrimary = value;
					this.SendPropertyChanged("IsPrimary");
					this.OnIsPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biBankAccount", Storage="_FCreateFixedTermLoanApplications", ThisKey="BankAccountSKey", OtherKey="BankAccountSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biBankAccount", Storage="_FTransactionRequests", ThisKey="BankAccountSKey", OtherKey="BankAccountSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankAccountEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.BankGateWayTransaction")]
	public partial class BankGateWayTransactionEntity : DbEntity<BankGateWayTransactionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSkey;
		
		private long _BankGateWayTransactionId;
		
		private int _BankGateWayTransactionDateSkey;
		
		private decimal _BankGateWayTransactionAmount;
		
		private System.Nullable<int> _BankGateWayBatchNumber;
		
		private string _BankGatewayBankAccountNumber;
		
		private string _BankGateWayBankCode;
		
		private System.Nullable<System.DateTime> _BatchSendTime;
		
		private System.Nullable<int> _ApplicationSkey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<long> _UpdatedByMessageArchiveId;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSkeyChanging(int value);
    partial void OnTransactionSkeyChanged();
    partial void OnBankGateWayTransactionIdChanging(long value);
    partial void OnBankGateWayTransactionIdChanged();
    partial void OnBankGateWayTransactionDateSkeyChanging(int value);
    partial void OnBankGateWayTransactionDateSkeyChanged();
    partial void OnBankGateWayTransactionAmountChanging(decimal value);
    partial void OnBankGateWayTransactionAmountChanged();
    partial void OnBankGateWayBatchNumberChanging(System.Nullable<int> value);
    partial void OnBankGateWayBatchNumberChanged();
    partial void OnBankGatewayBankAccountNumberChanging(string value);
    partial void OnBankGatewayBankAccountNumberChanged();
    partial void OnBankGateWayBankCodeChanging(string value);
    partial void OnBankGateWayBankCodeChanged();
    partial void OnBatchSendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBatchSendTimeChanged();
    partial void OnApplicationSkeyChanging(System.Nullable<int> value);
    partial void OnApplicationSkeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(System.Nullable<long> value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public BankGateWayTransactionEntity()
		{
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSkey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSkey
		{
			get
			{
				return this._TransactionSkey;
			}
			set
			{
				if ((this._TransactionSkey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSkeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSkey = value;
					this.SendPropertyChanged("TransactionSkey");
					this.OnTransactionSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGateWayTransactionId", DbType="BigInt NOT NULL")]
		public long BankGateWayTransactionId
		{
			get
			{
				return this._BankGateWayTransactionId;
			}
			set
			{
				if ((this._BankGateWayTransactionId != value))
				{
					this.OnBankGateWayTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._BankGateWayTransactionId = value;
					this.SendPropertyChanged("BankGateWayTransactionId");
					this.OnBankGateWayTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGateWayTransactionDateSkey", DbType="Int NOT NULL")]
		public int BankGateWayTransactionDateSkey
		{
			get
			{
				return this._BankGateWayTransactionDateSkey;
			}
			set
			{
				if ((this._BankGateWayTransactionDateSkey != value))
				{
					this.OnBankGateWayTransactionDateSkeyChanging(value);
					this.SendPropertyChanging();
					this._BankGateWayTransactionDateSkey = value;
					this.SendPropertyChanged("BankGateWayTransactionDateSkey");
					this.OnBankGateWayTransactionDateSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGateWayTransactionAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal BankGateWayTransactionAmount
		{
			get
			{
				return this._BankGateWayTransactionAmount;
			}
			set
			{
				if ((this._BankGateWayTransactionAmount != value))
				{
					this.OnBankGateWayTransactionAmountChanging(value);
					this.SendPropertyChanging();
					this._BankGateWayTransactionAmount = value;
					this.SendPropertyChanged("BankGateWayTransactionAmount");
					this.OnBankGateWayTransactionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGateWayBatchNumber", DbType="Int")]
		public System.Nullable<int> BankGateWayBatchNumber
		{
			get
			{
				return this._BankGateWayBatchNumber;
			}
			set
			{
				if ((this._BankGateWayBatchNumber != value))
				{
					this.OnBankGateWayBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BankGateWayBatchNumber = value;
					this.SendPropertyChanged("BankGateWayBatchNumber");
					this.OnBankGateWayBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGatewayBankAccountNumber", DbType="NVarChar(50)")]
		public string BankGatewayBankAccountNumber
		{
			get
			{
				return this._BankGatewayBankAccountNumber;
			}
			set
			{
				if ((this._BankGatewayBankAccountNumber != value))
				{
					this.OnBankGatewayBankAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._BankGatewayBankAccountNumber = value;
					this.SendPropertyChanged("BankGatewayBankAccountNumber");
					this.OnBankGatewayBankAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGateWayBankCode", DbType="NVarChar(50)")]
		public string BankGateWayBankCode
		{
			get
			{
				return this._BankGateWayBankCode;
			}
			set
			{
				if ((this._BankGateWayBankCode != value))
				{
					this.OnBankGateWayBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankGateWayBankCode = value;
					this.SendPropertyChanged("BankGateWayBankCode");
					this.OnBankGateWayBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchSendTime", DbType="DateTime2(7)")]
		public System.Nullable<System.DateTime> BatchSendTime
		{
			get
			{
				return this._BatchSendTime;
			}
			set
			{
				if ((this._BatchSendTime != value))
				{
					this.OnBatchSendTimeChanging(value);
					this.SendPropertyChanging();
					this._BatchSendTime = value;
					this.SendPropertyChanged("BatchSendTime");
					this.OnBatchSendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSkey", DbType="Int")]
		public System.Nullable<int> ApplicationSkey
		{
			get
			{
				return this._ApplicationSkey;
			}
			set
			{
				if ((this._ApplicationSkey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSkeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSkey = value;
					this.SendPropertyChanged("ApplicationSkey");
					this.OnApplicationSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt")]
		public System.Nullable<long> UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biBankGateWayTransaction_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSkey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.BankGateWayTransactionEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.BankGateWayTransactionEntity = this;
						this._TransactionSkey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSkey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biBankGatewayTranscation_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSkey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.BankGateWayTransactions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.BankGateWayTransactions.Add(this);
						this._ApplicationSkey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.CollectionMethod")]
	public partial class CollectionMethodEntity : DbEntity<CollectionMethodEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollectionMethodSKey;
		
		private string _CollectionMethodNKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollectionMethodSKeyChanging(int value);
    partial void OnCollectionMethodSKeyChanged();
    partial void OnCollectionMethodNKeyChanging(string value);
    partial void OnCollectionMethodNKeyChanged();
    #endregion
		
		public CollectionMethodEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionMethodSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CollectionMethodSKey
		{
			get
			{
				return this._CollectionMethodSKey;
			}
			set
			{
				if ((this._CollectionMethodSKey != value))
				{
					this.OnCollectionMethodSKeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionMethodSKey = value;
					this.SendPropertyChanged("CollectionMethodSKey");
					this.OnCollectionMethodSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionMethodNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CollectionMethodNKey
		{
			get
			{
				return this._CollectionMethodNKey;
			}
			set
			{
				if ((this._CollectionMethodNKey != value))
				{
					this.OnCollectionMethodNKeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionMethodNKey = value;
					this.SendPropertyChanged("CollectionMethodNKey");
					this.OnCollectionMethodNKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Currency")]
	public partial class CurrencyEntity : DbEntity<CurrencyEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CurrencySKey;
		
		private string _CurrencyNKey;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
		private EntitySet<FCreateTransactionEntity> _FCreateTransactions;
		
		private EntitySet<FTransactionLedgerEntity> _FTransactionLedgers;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnCurrencyNKeyChanging(string value);
    partial void OnCurrencyNKeyChanged();
    #endregion
		
		public CurrencyEntity()
		{
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			this._FCreateTransactions = new EntitySet<FCreateTransactionEntity>(new Action<FCreateTransactionEntity>(this.attach_FCreateTransactions), new Action<FCreateTransactionEntity>(this.detach_FCreateTransactions));
			this._FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_FTransactionLedgers));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyNKey", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CurrencyNKey
		{
			get
			{
				return this._CurrencyNKey;
			}
			set
			{
				if ((this._CurrencyNKey != value))
				{
					this.OnCurrencyNKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencyNKey = value;
					this.SendPropertyChanged("CurrencyNKey");
					this.OnCurrencyNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biCurrency", Storage="_FCreateFixedTermLoanApplications", ThisKey="CurrencySKey", OtherKey="CurrencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biCurrency", Storage="_FCreateTransactions", ThisKey="CurrencySKey", OtherKey="CurrencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this._FCreateTransactions;
			}
			set
			{
				this._FCreateTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biCurrency", Storage="_FTransactionLedgers", ThisKey="CurrencySKey", OtherKey="CurrencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this._FTransactionLedgers;
			}
			set
			{
				this._FTransactionLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biCurrency", Storage="_FTransactionRequests", ThisKey="CurrencySKey", OtherKey="CurrencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
		
		private void attach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
		
		private void attach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Date")]
	public partial class DateEntity : DbEntity<DateEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateSKey;
		
		private System.DateTime _DateNKey;
		
		private string _DayName;
		
		private byte _DayOfWeek;
		
		private byte _DayOfMonth;
		
		private short _DayOfYear;
		
		private string _MonthName;
		
		private byte _Month;
		
		private byte _Quarter;
		
		private short _Year;
		
		private byte _Week;
		
		private EntitySet<FAddPaymentCardEntity> _FAddPaymentCards;
		
		private EntitySet<FAggApplicationEntity> _FAggApplications;
		
		private EntitySet<FAggLoanNumberEntity> _FAggLoanNumbers;
		
		private EntitySet<FAggTransactionAllocationEntity> _FAggTransactionAllocations;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _DateSKeyBi_FCreateFixedTermLoanApplications;
		
		private EntitySet<FCreateFixedTermLoanExtensionEntity> _FCreateFixedTermLoanExtensions;
		
		private EntitySet<FCreateFixedTermLoanExtensionEntity> _DateSKeyBi_FCreateFixedTermLoanExtensions;
		
		private EntitySet<FCreateFixedTermLoanTopupEntity> _FCreateFixedTermLoanTopups;
		
		private EntitySet<FCreateTransactionEntity> _FCreateTransactions;
		
		private EntitySet<FEquifaxResponseEntity> _FEquifaxResponses;
		
		private EntitySet<FExtendLoanEntity> _FExtendLoans;
		
		private EntitySet<FExtendLoanEntity> _DateSKeyBi_FExtendLoans;
		
		private EntitySet<FIApplicationAcceptedEntity> _FIApplicationAccepteds;
		
		private EntitySet<FIApplicationClosedEntity> _FIApplicationCloseds;
		
		private EntitySet<FIApplicationDeclinedEntity> _FIApplicationDeclineds;
		
		private EntitySet<FIFixedTermApplicationAddedEntity> _FIFixedTermApplicationAddeds;
		
		private EntitySet<FPaymentCollectionEntity> _FPaymentCollections;
		
		private EntitySet<FPaymentCollectionEntity> _DateSKeyBi_FPaymentCollections;
		
		private EntitySet<FPaymentCollectionEntity> _BifPaymentCollection_REF_bidate_2s;
		
		private EntitySet<FSignApplicationEntity> _FSignApplications;
		
		private EntitySet<FSignFixedTermLoanExtensionEntity> _FSignFixedTermLoanExtensions;
		
		private EntitySet<FSignFixedTermLoanExtensionEntity> _DateSKeyBi_FSignFixedTermLoanExtensions;
		
		private EntitySet<FSignFixedTermLoanTopupEntity> _FSignFixedTermLoanTopups;
		
		private EntitySet<FTransactionLedgerEntity> _FTransactionLedgers;
		
		private EntitySet<FTransactionLedgerEntity> _DateSKeyBi_FTransactionLedgers;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
		private EntitySet<FTransactionRequestEntity> _DateSKeyBi_FTransactionRequests;
		
		private EntitySet<FTransactionRequestEntity> _BifTransactionRequest_REF_biDate_2s;
		
		private EntitySet<FTransactionRequestDetailEntity> _FTransactionRequestDetails;
		
		private EntitySet<FTransunionResponseEntity> _FTransunionResponses;
		
		private EntitySet<FTransunionResponseEntity> _DateSKeyBi_FTransunionResponses;
		
		private EntitySet<FUpdateDailyAccruedInterestEntity> _FUpdateDailyAccruedInterests;
		
		private EntitySet<MergeLogEntity> _MergeLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnDateNKeyChanging(System.DateTime value);
    partial void OnDateNKeyChanged();
    partial void OnDayNameChanging(string value);
    partial void OnDayNameChanged();
    partial void OnDayOfWeekChanging(byte value);
    partial void OnDayOfWeekChanged();
    partial void OnDayOfMonthChanging(byte value);
    partial void OnDayOfMonthChanged();
    partial void OnDayOfYearChanging(short value);
    partial void OnDayOfYearChanged();
    partial void OnMonthNameChanging(string value);
    partial void OnMonthNameChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnQuarterChanging(byte value);
    partial void OnQuarterChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnWeekChanging(byte value);
    partial void OnWeekChanged();
    #endregion
		
		public DateEntity()
		{
			this._FAddPaymentCards = new EntitySet<FAddPaymentCardEntity>(new Action<FAddPaymentCardEntity>(this.attach_FAddPaymentCards), new Action<FAddPaymentCardEntity>(this.detach_FAddPaymentCards));
			this._FAggApplications = new EntitySet<FAggApplicationEntity>(new Action<FAggApplicationEntity>(this.attach_FAggApplications), new Action<FAggApplicationEntity>(this.detach_FAggApplications));
			this._FAggLoanNumbers = new EntitySet<FAggLoanNumberEntity>(new Action<FAggLoanNumberEntity>(this.attach_FAggLoanNumbers), new Action<FAggLoanNumberEntity>(this.detach_FAggLoanNumbers));
			this._FAggTransactionAllocations = new EntitySet<FAggTransactionAllocationEntity>(new Action<FAggTransactionAllocationEntity>(this.attach_FAggTransactionAllocations), new Action<FAggTransactionAllocationEntity>(this.detach_FAggTransactionAllocations));
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			this._DateSKeyBi_FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_DateSKeyBi_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_DateSKeyBi_FCreateFixedTermLoanApplications));
			this._FCreateFixedTermLoanExtensions = new EntitySet<FCreateFixedTermLoanExtensionEntity>(new Action<FCreateFixedTermLoanExtensionEntity>(this.attach_FCreateFixedTermLoanExtensions), new Action<FCreateFixedTermLoanExtensionEntity>(this.detach_FCreateFixedTermLoanExtensions));
			this._DateSKeyBi_FCreateFixedTermLoanExtensions = new EntitySet<FCreateFixedTermLoanExtensionEntity>(new Action<FCreateFixedTermLoanExtensionEntity>(this.attach_DateSKeyBi_FCreateFixedTermLoanExtensions), new Action<FCreateFixedTermLoanExtensionEntity>(this.detach_DateSKeyBi_FCreateFixedTermLoanExtensions));
			this._FCreateFixedTermLoanTopups = new EntitySet<FCreateFixedTermLoanTopupEntity>(new Action<FCreateFixedTermLoanTopupEntity>(this.attach_FCreateFixedTermLoanTopups), new Action<FCreateFixedTermLoanTopupEntity>(this.detach_FCreateFixedTermLoanTopups));
			this._FCreateTransactions = new EntitySet<FCreateTransactionEntity>(new Action<FCreateTransactionEntity>(this.attach_FCreateTransactions), new Action<FCreateTransactionEntity>(this.detach_FCreateTransactions));
			this._FEquifaxResponses = new EntitySet<FEquifaxResponseEntity>(new Action<FEquifaxResponseEntity>(this.attach_FEquifaxResponses), new Action<FEquifaxResponseEntity>(this.detach_FEquifaxResponses));
			this._FExtendLoans = new EntitySet<FExtendLoanEntity>(new Action<FExtendLoanEntity>(this.attach_FExtendLoans), new Action<FExtendLoanEntity>(this.detach_FExtendLoans));
			this._DateSKeyBi_FExtendLoans = new EntitySet<FExtendLoanEntity>(new Action<FExtendLoanEntity>(this.attach_DateSKeyBi_FExtendLoans), new Action<FExtendLoanEntity>(this.detach_DateSKeyBi_FExtendLoans));
			this._FIApplicationAccepteds = new EntitySet<FIApplicationAcceptedEntity>(new Action<FIApplicationAcceptedEntity>(this.attach_FIApplicationAccepteds), new Action<FIApplicationAcceptedEntity>(this.detach_FIApplicationAccepteds));
			this._FIApplicationCloseds = new EntitySet<FIApplicationClosedEntity>(new Action<FIApplicationClosedEntity>(this.attach_FIApplicationCloseds), new Action<FIApplicationClosedEntity>(this.detach_FIApplicationCloseds));
			this._FIApplicationDeclineds = new EntitySet<FIApplicationDeclinedEntity>(new Action<FIApplicationDeclinedEntity>(this.attach_FIApplicationDeclineds), new Action<FIApplicationDeclinedEntity>(this.detach_FIApplicationDeclineds));
			this._FIFixedTermApplicationAddeds = new EntitySet<FIFixedTermApplicationAddedEntity>(new Action<FIFixedTermApplicationAddedEntity>(this.attach_FIFixedTermApplicationAddeds), new Action<FIFixedTermApplicationAddedEntity>(this.detach_FIFixedTermApplicationAddeds));
			this._FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_FPaymentCollections));
			this._DateSKeyBi_FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_DateSKeyBi_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_DateSKeyBi_FPaymentCollections));
			this._BifPaymentCollection_REF_bidate_2s = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_BifPaymentCollection_REF_bidate_2s), new Action<FPaymentCollectionEntity>(this.detach_BifPaymentCollection_REF_bidate_2s));
			this._FSignApplications = new EntitySet<FSignApplicationEntity>(new Action<FSignApplicationEntity>(this.attach_FSignApplications), new Action<FSignApplicationEntity>(this.detach_FSignApplications));
			this._FSignFixedTermLoanExtensions = new EntitySet<FSignFixedTermLoanExtensionEntity>(new Action<FSignFixedTermLoanExtensionEntity>(this.attach_FSignFixedTermLoanExtensions), new Action<FSignFixedTermLoanExtensionEntity>(this.detach_FSignFixedTermLoanExtensions));
			this._DateSKeyBi_FSignFixedTermLoanExtensions = new EntitySet<FSignFixedTermLoanExtensionEntity>(new Action<FSignFixedTermLoanExtensionEntity>(this.attach_DateSKeyBi_FSignFixedTermLoanExtensions), new Action<FSignFixedTermLoanExtensionEntity>(this.detach_DateSKeyBi_FSignFixedTermLoanExtensions));
			this._FSignFixedTermLoanTopups = new EntitySet<FSignFixedTermLoanTopupEntity>(new Action<FSignFixedTermLoanTopupEntity>(this.attach_FSignFixedTermLoanTopups), new Action<FSignFixedTermLoanTopupEntity>(this.detach_FSignFixedTermLoanTopups));
			this._FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_FTransactionLedgers));
			this._DateSKeyBi_FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_DateSKeyBi_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_DateSKeyBi_FTransactionLedgers));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			this._DateSKeyBi_FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_DateSKeyBi_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_DateSKeyBi_FTransactionRequests));
			this._BifTransactionRequest_REF_biDate_2s = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_BifTransactionRequest_REF_biDate_2s), new Action<FTransactionRequestEntity>(this.detach_BifTransactionRequest_REF_biDate_2s));
			this._FTransactionRequestDetails = new EntitySet<FTransactionRequestDetailEntity>(new Action<FTransactionRequestDetailEntity>(this.attach_FTransactionRequestDetails), new Action<FTransactionRequestDetailEntity>(this.detach_FTransactionRequestDetails));
			this._FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_FTransunionResponses));
			this._DateSKeyBi_FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_DateSKeyBi_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_DateSKeyBi_FTransunionResponses));
			this._FUpdateDailyAccruedInterests = new EntitySet<FUpdateDailyAccruedInterestEntity>(new Action<FUpdateDailyAccruedInterestEntity>(this.attach_FUpdateDailyAccruedInterests), new Action<FUpdateDailyAccruedInterestEntity>(this.detach_FUpdateDailyAccruedInterests));
			this._MergeLogs = new EntitySet<MergeLogEntity>(new Action<MergeLogEntity>(this.attach_MergeLogs), new Action<MergeLogEntity>(this.detach_MergeLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNKey", DbType="Date NOT NULL")]
		public System.DateTime DateNKey
		{
			get
			{
				return this._DateNKey;
			}
			set
			{
				if ((this._DateNKey != value))
				{
					this.OnDateNKeyChanging(value);
					this.SendPropertyChanging();
					this._DateNKey = value;
					this.SendPropertyChanged("DateNKey");
					this.OnDateNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayName", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string DayName
		{
			get
			{
				return this._DayName;
			}
			set
			{
				if ((this._DayName != value))
				{
					this.OnDayNameChanging(value);
					this.SendPropertyChanging();
					this._DayName = value;
					this.SendPropertyChanged("DayName");
					this.OnDayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="TinyInt NOT NULL")]
		public byte DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfMonth", DbType="TinyInt NOT NULL")]
		public byte DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfYear", DbType="SmallInt NOT NULL")]
		public short DayOfYear
		{
			get
			{
				return this._DayOfYear;
			}
			set
			{
				if ((this._DayOfYear != value))
				{
					this.OnDayOfYearChanging(value);
					this.SendPropertyChanging();
					this._DayOfYear = value;
					this.SendPropertyChanged("DayOfYear");
					this.OnDayOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this.OnMonthNameChanging(value);
					this.SendPropertyChanging();
					this._MonthName = value;
					this.SendPropertyChanged("MonthName");
					this.OnMonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quarter", DbType="TinyInt NOT NULL")]
		public byte Quarter
		{
			get
			{
				return this._Quarter;
			}
			set
			{
				if ((this._Quarter != value))
				{
					this.OnQuarterChanging(value);
					this.SendPropertyChanging();
					this._Quarter = value;
					this.SendPropertyChanged("Quarter");
					this.OnQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="TinyInt NOT NULL")]
		public byte Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biDate", Storage="_FAddPaymentCards", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAddPaymentCardEntity> FAddPaymentCards
		{
			get
			{
				return this._FAddPaymentCards;
			}
			set
			{
				this._FAddPaymentCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biDate", Storage="_FAggApplications", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this._FAggApplications;
			}
			set
			{
				this._FAggApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggLoanNumber_REF_biDate", Storage="_FAggLoanNumbers", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggLoanNumberEntity> FAggLoanNumbers
		{
			get
			{
				return this._FAggLoanNumbers;
			}
			set
			{
				this._FAggLoanNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biDate", Storage="_FAggTransactionAllocations", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggTransactionAllocationEntity> FAggTransactionAllocations
		{
			get
			{
				return this._FAggTransactionAllocations;
			}
			set
			{
				this._FAggTransactionAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biDate_1", Storage="_FCreateFixedTermLoanApplications", ThisKey="DateSKey", OtherKey="ApplicationDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biDate_2", Storage="_DateSKeyBi_FCreateFixedTermLoanApplications", ThisKey="DateSKey", OtherKey="PromiseDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> DateSKeyBi_FCreateFixedTermLoanApplications
		{
			get
			{
				return this._DateSKeyBi_FCreateFixedTermLoanApplications;
			}
			set
			{
				this._DateSKeyBi_FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biDate", Storage="_FCreateFixedTermLoanExtensions", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanExtensionEntity> FCreateFixedTermLoanExtensions
		{
			get
			{
				return this._FCreateFixedTermLoanExtensions;
			}
			set
			{
				this._FCreateFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biDate_2", Storage="_DateSKeyBi_FCreateFixedTermLoanExtensions", ThisKey="DateSKey", OtherKey="ExtendDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanExtensionEntity> DateSKeyBi_FCreateFixedTermLoanExtensions
		{
			get
			{
				return this._DateSKeyBi_FCreateFixedTermLoanExtensions;
			}
			set
			{
				this._DateSKeyBi_FCreateFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biDateSKey", Storage="_FCreateFixedTermLoanTopups", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanTopupEntity> FCreateFixedTermLoanTopups
		{
			get
			{
				return this._FCreateFixedTermLoanTopups;
			}
			set
			{
				this._FCreateFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biDate", Storage="_FCreateTransactions", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this._FCreateTransactions;
			}
			set
			{
				this._FCreateTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biDate", Storage="_FEquifaxResponses", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FEquifaxResponseEntity> FEquifaxResponses
		{
			get
			{
				return this._FEquifaxResponses;
			}
			set
			{
				this._FEquifaxResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biDate_1", Storage="_FExtendLoans", ThisKey="DateSKey", OtherKey="RequestDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FExtendLoanEntity> FExtendLoans
		{
			get
			{
				return this._FExtendLoans;
			}
			set
			{
				this._FExtendLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biDate_2", Storage="_DateSKeyBi_FExtendLoans", ThisKey="DateSKey", OtherKey="NextDueDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FExtendLoanEntity> DateSKeyBi_FExtendLoans
		{
			get
			{
				return this._DateSKeyBi_FExtendLoans;
			}
			set
			{
				this._DateSKeyBi_FExtendLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biDate", Storage="_FIApplicationAccepteds", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationAcceptedEntity> FIApplicationAccepteds
		{
			get
			{
				return this._FIApplicationAccepteds;
			}
			set
			{
				this._FIApplicationAccepteds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biDate", Storage="_FIApplicationCloseds", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationClosedEntity> FIApplicationCloseds
		{
			get
			{
				return this._FIApplicationCloseds;
			}
			set
			{
				this._FIApplicationCloseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biDate", Storage="_FIApplicationDeclineds", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIApplicationDeclinedEntity> FIApplicationDeclineds
		{
			get
			{
				return this._FIApplicationDeclineds;
			}
			set
			{
				this._FIApplicationDeclineds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biDate", Storage="_FIFixedTermApplicationAddeds", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FIFixedTermApplicationAddedEntity> FIFixedTermApplicationAddeds
		{
			get
			{
				return this._FIFixedTermApplicationAddeds;
			}
			set
			{
				this._FIFixedTermApplicationAddeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biDate", Storage="_FPaymentCollections", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this._FPaymentCollections;
			}
			set
			{
				this._FPaymentCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biDate_1", Storage="_DateSKeyBi_FPaymentCollections", ThisKey="DateSKey", OtherKey="PaymentCollectionStartDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> DateSKeyBi_FPaymentCollections
		{
			get
			{
				return this._DateSKeyBi_FPaymentCollections;
			}
			set
			{
				this._DateSKeyBi_FPaymentCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_bidate_2", Storage="_BifPaymentCollection_REF_bidate_2s", ThisKey="DateSKey", OtherKey="PaymentCollectionEndDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> BifPaymentCollection_REF_bidate_2s
		{
			get
			{
				return this._BifPaymentCollection_REF_bidate_2s;
			}
			set
			{
				this._BifPaymentCollection_REF_bidate_2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biDate", Storage="_FSignApplications", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignApplicationEntity> FSignApplications
		{
			get
			{
				return this._FSignApplications;
			}
			set
			{
				this._FSignApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biDate", Storage="_FSignFixedTermLoanExtensions", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanExtensionEntity> FSignFixedTermLoanExtensions
		{
			get
			{
				return this._FSignFixedTermLoanExtensions;
			}
			set
			{
				this._FSignFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biDate_2", Storage="_DateSKeyBi_FSignFixedTermLoanExtensions", ThisKey="DateSKey", OtherKey="ExtendDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanExtensionEntity> DateSKeyBi_FSignFixedTermLoanExtensions
		{
			get
			{
				return this._DateSKeyBi_FSignFixedTermLoanExtensions;
			}
			set
			{
				this._DateSKeyBi_FSignFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biDate", Storage="_FSignFixedTermLoanTopups", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSignFixedTermLoanTopupEntity> FSignFixedTermLoanTopups
		{
			get
			{
				return this._FSignFixedTermLoanTopups;
			}
			set
			{
				this._FSignFixedTermLoanTopups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biDate", Storage="_FTransactionLedgers", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this._FTransactionLedgers;
			}
			set
			{
				this._FTransactionLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionledger_REF_biDate_2", Storage="_DateSKeyBi_FTransactionLedgers", ThisKey="DateSKey", OtherKey="PostedDateSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> DateSKeyBi_FTransactionLedgers
		{
			get
			{
				return this._DateSKeyBi_FTransactionLedgers;
			}
			set
			{
				this._DateSKeyBi_FTransactionLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate", Storage="_FTransactionRequests", ThisKey="DateSKey", OtherKey="TransactionDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate_1", Storage="_DateSKeyBi_FTransactionRequests", ThisKey="DateSKey", OtherKey="SuccessDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> DateSKeyBi_FTransactionRequests
		{
			get
			{
				return this._DateSKeyBi_FTransactionRequests;
			}
			set
			{
				this._DateSKeyBi_FTransactionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate_2", Storage="_BifTransactionRequest_REF_biDate_2s", ThisKey="DateSKey", OtherKey="PaymentCollectionEndDateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> BifTransactionRequest_REF_biDate_2s
		{
			get
			{
				return this._BifTransactionRequest_REF_biDate_2s;
			}
			set
			{
				this._BifTransactionRequest_REF_biDate_2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biDate", Storage="_FTransactionRequestDetails", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestDetailEntity> FTransactionRequestDetails
		{
			get
			{
				return this._FTransactionRequestDetails;
			}
			set
			{
				this._FTransactionRequestDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biDate", Storage="_FTransunionResponses", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this._FTransunionResponses;
			}
			set
			{
				this._FTransunionResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biDate2", Storage="_DateSKeyBi_FTransunionResponses", ThisKey="DateSKey", OtherKey="ProcessingStartDateSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> DateSKeyBi_FTransunionResponses
		{
			get
			{
				return this._DateSKeyBi_FTransunionResponses;
			}
			set
			{
				this._DateSKeyBi_FTransunionResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifUpdateDailyAccruedInterest_REF_biDate", Storage="_FUpdateDailyAccruedInterests", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<FUpdateDailyAccruedInterestEntity> FUpdateDailyAccruedInterests
		{
			get
			{
				return this._FUpdateDailyAccruedInterests;
			}
			set
			{
				this._FUpdateDailyAccruedInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MergeLog_REF_Date", Storage="_MergeLogs", ThisKey="DateSKey", OtherKey="DateSKey", DeleteRule="NO ACTION")]
		public EntitySet<MergeLogEntity> MergeLogs
		{
			get
			{
				return this._MergeLogs;
			}
			set
			{
				this._MergeLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FAggLoanNumbers(FAggLoanNumberEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FAggLoanNumbers(FAggLoanNumberEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FAggTransactionAllocations(FAggTransactionAllocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FAggTransactionAllocations(FAggTransactionAllocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromiseDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromiseDateSKeyBi_Date = null;
		}
		
		private void attach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ExtendDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ExtendDateSKeyBi_Date = null;
		}
		
		private void attach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanTopups(FCreateFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FEquifaxResponses(FEquifaxResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FEquifaxResponses(FEquifaxResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.NextDueDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.NextDueDateSKeyBi_Date = null;
		}
		
		private void attach_FIApplicationAccepteds(FIApplicationAcceptedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FIApplicationAccepteds(FIApplicationAcceptedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FIApplicationCloseds(FIApplicationClosedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FIApplicationDeclineds(FIApplicationDeclinedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FIFixedTermApplicationAddeds(FIFixedTermApplicationAddedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FIFixedTermApplicationAddeds(FIFixedTermApplicationAddedEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionStartDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionStartDateSKeyBi_Date = null;
		}
		
		private void attach_BifPaymentCollection_REF_bidate_2s(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionEndDateSKeyBi_Date = this;
		}
		
		private void detach_BifPaymentCollection_REF_bidate_2s(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionEndDateSKeyBi_Date = null;
		}
		
		private void attach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FSignApplications(FSignApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ExtendDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FSignFixedTermLoanExtensions(FSignFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ExtendDateSKeyBi_Date = null;
		}
		
		private void attach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FSignFixedTermLoanTopups(FSignFixedTermLoanTopupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.PostedDateSkeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.PostedDateSkeyBi_Date = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.SuccessDateSKeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.SuccessDateSKeyBi_Date = null;
		}
		
		private void attach_BifTransactionRequest_REF_biDate_2s(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionEndDateSKeyBi_Date = this;
		}
		
		private void detach_BifTransactionRequest_REF_biDate_2s(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionEndDateSKeyBi_Date = null;
		}
		
		private void attach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_DateSKeyBi_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProcessingStartDateSkeyBi_Date = this;
		}
		
		private void detach_DateSKeyBi_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProcessingStartDateSkeyBi_Date = null;
		}
		
		private void attach_FUpdateDailyAccruedInterests(FUpdateDailyAccruedInterestEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_FUpdateDailyAccruedInterests(FUpdateDailyAccruedInterestEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
		
		private void attach_MergeLogs(MergeLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = this;
		}
		
		private void detach_MergeLogs(MergeLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.DateEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.EquifaxSaga")]
	public partial class EquifaxSagaEntity : DbEntity<EquifaxSagaEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquifaxSagaSKey;
		
		private System.Guid _EquifaxSagaNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<FEquifaxResponseEntity> _FEquifaxResponseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquifaxSagaSKeyChanging(int value);
    partial void OnEquifaxSagaSKeyChanged();
    partial void OnEquifaxSagaNKeyChanging(System.Guid value);
    partial void OnEquifaxSagaNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public EquifaxSagaEntity()
		{
			this._FEquifaxResponseEntity = default(EntityRef<FEquifaxResponseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquifaxSagaSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EquifaxSagaSKey
		{
			get
			{
				return this._EquifaxSagaSKey;
			}
			set
			{
				if ((this._EquifaxSagaSKey != value))
				{
					this.OnEquifaxSagaSKeyChanging(value);
					this.SendPropertyChanging();
					this._EquifaxSagaSKey = value;
					this.SendPropertyChanged("EquifaxSagaSKey");
					this.OnEquifaxSagaSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquifaxSagaNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EquifaxSagaNKey
		{
			get
			{
				return this._EquifaxSagaNKey;
			}
			set
			{
				if ((this._EquifaxSagaNKey != value))
				{
					this.OnEquifaxSagaNKeyChanging(value);
					this.SendPropertyChanging();
					this._EquifaxSagaNKey = value;
					this.SendPropertyChanged("EquifaxSagaNKey");
					this.OnEquifaxSagaNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biEquifaxSaga", Storage="_FEquifaxResponseEntity", ThisKey="EquifaxSagaSKey", OtherKey="EquifaxSagaSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FEquifaxResponseEntity FEquifaxResponseEntity
		{
			get
			{
				return this._FEquifaxResponseEntity.Entity;
			}
			set
			{
				FEquifaxResponseEntity previousValue = this._FEquifaxResponseEntity.Entity;
				if (((previousValue != value) 
							|| (this._FEquifaxResponseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FEquifaxResponseEntity.Entity = null;
						previousValue.EquifaxSagaEntity = null;
					}
					this._FEquifaxResponseEntity.Entity = value;
					if ((value != null))
					{
						value.EquifaxSagaEntity = this;
					}
					this.SendPropertyChanged("FEquifaxResponseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fAddPaymentCard")]
	public partial class FAddPaymentCardEntity : DbEntity<FAddPaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountSKey;
		
		private int _PaymentCardSKey;
		
		private int _DateSKey;
		
		private byte _FCardCreated;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFCardCreatedChanging(byte value);
    partial void OnFCardCreatedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FAddPaymentCardEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCardCreated", Storage="_FCardCreated", DbType="TinyInt NOT NULL")]
		public byte FCardCreated
		{
			get
			{
				return this._FCardCreated;
			}
			set
			{
				if ((this._FCardCreated != value))
				{
					this.OnFCardCreatedChanging(value);
					this.SendPropertyChanging();
					this._FCardCreated = value;
					this.SendPropertyChanged("FCardCreated");
					this.OnFCardCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FAddPaymentCards.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FAddPaymentCards.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FAddPaymentCards.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FAddPaymentCards.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FAddPaymentCards.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FAddPaymentCards.Add(this);
						this._PaymentCardSKey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fAggApplication")]
	public partial class FAggApplicationEntity : DbEntity<FAggApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private short _AffiliateSKey;
		
		private short _LnSKey;
		
		private int _FLoanAmountTotal;
		
		private byte _FCreateFixedTermLoanApplicationTally;
		
		private byte _FAddedTally;
		
		private byte _FIApplicationAcceptedTally;
		
		private byte _FIApplicationDeclinedTally;
		
		private byte _FSignApplicationTally;
		
		private byte _FIApplicationClosedTally;
		
		private byte _FIApplicationReopenedTally;
		
		private byte _FIApplicationCanceledTally;
		
		private byte _FIFixedTermApplicationAddedTally;
		
		private byte _FCreateFixedTermLoanExtensionTally;
		
		private byte _FCreateFixedTermLoanTopupTally;
		
		private decimal _FTopupAmountTotal;
		
		private byte _FSignFixedTermLoanExtensionTally;
		
		private System.Nullable<byte> _FSignFixedTermLoanTopupTally;
		
		private byte _FSubmitCounterOfferTally;
		
		private decimal _FNewLoanAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByAggBuildId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByAggBuildId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<AffiliateEntity> _AffiliateEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<LnEntity> _LnEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnAffiliateSKeyChanging(short value);
    partial void OnAffiliateSKeyChanged();
    partial void OnLnSKeyChanging(short value);
    partial void OnLnSKeyChanged();
    partial void OnFLoanAmountTotalChanging(int value);
    partial void OnFLoanAmountTotalChanged();
    partial void OnFCreateFixedTermLoanApplicationTallyChanging(byte value);
    partial void OnFCreateFixedTermLoanApplicationTallyChanged();
    partial void OnFAddedTallyChanging(byte value);
    partial void OnFAddedTallyChanged();
    partial void OnFIApplicationAcceptedTallyChanging(byte value);
    partial void OnFIApplicationAcceptedTallyChanged();
    partial void OnFIApplicationDeclinedTallyChanging(byte value);
    partial void OnFIApplicationDeclinedTallyChanged();
    partial void OnFSignApplicationTallyChanging(byte value);
    partial void OnFSignApplicationTallyChanged();
    partial void OnFIApplicationClosedTallyChanging(byte value);
    partial void OnFIApplicationClosedTallyChanged();
    partial void OnFIApplicationReopenedTallyChanging(byte value);
    partial void OnFIApplicationReopenedTallyChanged();
    partial void OnFIApplicationCanceledTallyChanging(byte value);
    partial void OnFIApplicationCanceledTallyChanged();
    partial void OnFIFixedTermApplicationAddedTallyChanging(byte value);
    partial void OnFIFixedTermApplicationAddedTallyChanged();
    partial void OnFCreateFixedTermLoanExtensionTallyChanging(byte value);
    partial void OnFCreateFixedTermLoanExtensionTallyChanged();
    partial void OnFCreateFixedTermLoanTopupTallyChanging(byte value);
    partial void OnFCreateFixedTermLoanTopupTallyChanged();
    partial void OnFTopupAmountTotalChanging(decimal value);
    partial void OnFTopupAmountTotalChanged();
    partial void OnFSignFixedTermLoanExtensionTallyChanging(byte value);
    partial void OnFSignFixedTermLoanExtensionTallyChanged();
    partial void OnFSignFixedTermLoanTopupTallyChanging(System.Nullable<byte> value);
    partial void OnFSignFixedTermLoanTopupTallyChanged();
    partial void OnFSubmitCounterOfferTallyChanging(byte value);
    partial void OnFSubmitCounterOfferTallyChanged();
    partial void OnFNewLoanAmountChanging(decimal value);
    partial void OnFNewLoanAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByAggBuildIdChanging(long value);
    partial void OnCreatedByAggBuildIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByAggBuildIdChanging(long value);
    partial void OnUpdatedByAggBuildIdChanged();
    #endregion
		
		public FAggApplicationEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._AffiliateEntity = default(EntityRef<AffiliateEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._LnEntity = default(EntityRef<LnEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateSKey", DbType="SmallInt NOT NULL")]
		public short AffiliateSKey
		{
			get
			{
				return this._AffiliateSKey;
			}
			set
			{
				if ((this._AffiliateSKey != value))
				{
					if (this._AffiliateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateSKeyChanging(value);
					this.SendPropertyChanging();
					this._AffiliateSKey = value;
					this.SendPropertyChanged("AffiliateSKey");
					this.OnAffiliateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short LnSKey
		{
			get
			{
				return this._LnSKey;
			}
			set
			{
				if ((this._LnSKey != value))
				{
					if (this._LnEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLnSKeyChanging(value);
					this.SendPropertyChanging();
					this._LnSKey = value;
					this.SendPropertyChanged("LnSKey");
					this.OnLnSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fLoanAmountTotal", Storage="_FLoanAmountTotal", DbType="Int NOT NULL")]
		public int FLoanAmountTotal
		{
			get
			{
				return this._FLoanAmountTotal;
			}
			set
			{
				if ((this._FLoanAmountTotal != value))
				{
					this.OnFLoanAmountTotalChanging(value);
					this.SendPropertyChanging();
					this._FLoanAmountTotal = value;
					this.SendPropertyChanged("FLoanAmountTotal");
					this.OnFLoanAmountTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCreateFixedTermLoanApplicationTally", Storage="_FCreateFixedTermLoanApplicationTally", DbType="TinyInt NOT NULL")]
		public byte FCreateFixedTermLoanApplicationTally
		{
			get
			{
				return this._FCreateFixedTermLoanApplicationTally;
			}
			set
			{
				if ((this._FCreateFixedTermLoanApplicationTally != value))
				{
					this.OnFCreateFixedTermLoanApplicationTallyChanging(value);
					this.SendPropertyChanging();
					this._FCreateFixedTermLoanApplicationTally = value;
					this.SendPropertyChanged("FCreateFixedTermLoanApplicationTally");
					this.OnFCreateFixedTermLoanApplicationTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fAddedTally", Storage="_FAddedTally", DbType="TinyInt NOT NULL")]
		public byte FAddedTally
		{
			get
			{
				return this._FAddedTally;
			}
			set
			{
				if ((this._FAddedTally != value))
				{
					this.OnFAddedTallyChanging(value);
					this.SendPropertyChanging();
					this._FAddedTally = value;
					this.SendPropertyChanged("FAddedTally");
					this.OnFAddedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIApplicationAcceptedTally", Storage="_FIApplicationAcceptedTally", DbType="TinyInt NOT NULL")]
		public byte FIApplicationAcceptedTally
		{
			get
			{
				return this._FIApplicationAcceptedTally;
			}
			set
			{
				if ((this._FIApplicationAcceptedTally != value))
				{
					this.OnFIApplicationAcceptedTallyChanging(value);
					this.SendPropertyChanging();
					this._FIApplicationAcceptedTally = value;
					this.SendPropertyChanged("FIApplicationAcceptedTally");
					this.OnFIApplicationAcceptedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIApplicationDeclinedTally", Storage="_FIApplicationDeclinedTally", DbType="TinyInt NOT NULL")]
		public byte FIApplicationDeclinedTally
		{
			get
			{
				return this._FIApplicationDeclinedTally;
			}
			set
			{
				if ((this._FIApplicationDeclinedTally != value))
				{
					this.OnFIApplicationDeclinedTallyChanging(value);
					this.SendPropertyChanging();
					this._FIApplicationDeclinedTally = value;
					this.SendPropertyChanged("FIApplicationDeclinedTally");
					this.OnFIApplicationDeclinedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignApplicationTally", Storage="_FSignApplicationTally", DbType="TinyInt NOT NULL")]
		public byte FSignApplicationTally
		{
			get
			{
				return this._FSignApplicationTally;
			}
			set
			{
				if ((this._FSignApplicationTally != value))
				{
					this.OnFSignApplicationTallyChanging(value);
					this.SendPropertyChanging();
					this._FSignApplicationTally = value;
					this.SendPropertyChanged("FSignApplicationTally");
					this.OnFSignApplicationTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIApplicationClosedTally", Storage="_FIApplicationClosedTally", DbType="TinyInt NOT NULL")]
		public byte FIApplicationClosedTally
		{
			get
			{
				return this._FIApplicationClosedTally;
			}
			set
			{
				if ((this._FIApplicationClosedTally != value))
				{
					this.OnFIApplicationClosedTallyChanging(value);
					this.SendPropertyChanging();
					this._FIApplicationClosedTally = value;
					this.SendPropertyChanged("FIApplicationClosedTally");
					this.OnFIApplicationClosedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIApplicationReopenedTally", Storage="_FIApplicationReopenedTally", DbType="TinyInt NOT NULL")]
		public byte FIApplicationReopenedTally
		{
			get
			{
				return this._FIApplicationReopenedTally;
			}
			set
			{
				if ((this._FIApplicationReopenedTally != value))
				{
					this.OnFIApplicationReopenedTallyChanging(value);
					this.SendPropertyChanging();
					this._FIApplicationReopenedTally = value;
					this.SendPropertyChanged("FIApplicationReopenedTally");
					this.OnFIApplicationReopenedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIApplicationCanceledTally", Storage="_FIApplicationCanceledTally", DbType="TinyInt NOT NULL")]
		public byte FIApplicationCanceledTally
		{
			get
			{
				return this._FIApplicationCanceledTally;
			}
			set
			{
				if ((this._FIApplicationCanceledTally != value))
				{
					this.OnFIApplicationCanceledTallyChanging(value);
					this.SendPropertyChanging();
					this._FIApplicationCanceledTally = value;
					this.SendPropertyChanged("FIApplicationCanceledTally");
					this.OnFIApplicationCanceledTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIFixedTermApplicationAddedTally", Storage="_FIFixedTermApplicationAddedTally", DbType="TinyInt NOT NULL")]
		public byte FIFixedTermApplicationAddedTally
		{
			get
			{
				return this._FIFixedTermApplicationAddedTally;
			}
			set
			{
				if ((this._FIFixedTermApplicationAddedTally != value))
				{
					this.OnFIFixedTermApplicationAddedTallyChanging(value);
					this.SendPropertyChanging();
					this._FIFixedTermApplicationAddedTally = value;
					this.SendPropertyChanged("FIFixedTermApplicationAddedTally");
					this.OnFIFixedTermApplicationAddedTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCreateFixedTermLoanExtensionTally", Storage="_FCreateFixedTermLoanExtensionTally", DbType="TinyInt NOT NULL")]
		public byte FCreateFixedTermLoanExtensionTally
		{
			get
			{
				return this._FCreateFixedTermLoanExtensionTally;
			}
			set
			{
				if ((this._FCreateFixedTermLoanExtensionTally != value))
				{
					this.OnFCreateFixedTermLoanExtensionTallyChanging(value);
					this.SendPropertyChanging();
					this._FCreateFixedTermLoanExtensionTally = value;
					this.SendPropertyChanged("FCreateFixedTermLoanExtensionTally");
					this.OnFCreateFixedTermLoanExtensionTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCreateFixedTermLoanTopupTally", Storage="_FCreateFixedTermLoanTopupTally", DbType="TinyInt NOT NULL")]
		public byte FCreateFixedTermLoanTopupTally
		{
			get
			{
				return this._FCreateFixedTermLoanTopupTally;
			}
			set
			{
				if ((this._FCreateFixedTermLoanTopupTally != value))
				{
					this.OnFCreateFixedTermLoanTopupTallyChanging(value);
					this.SendPropertyChanging();
					this._FCreateFixedTermLoanTopupTally = value;
					this.SendPropertyChanged("FCreateFixedTermLoanTopupTally");
					this.OnFCreateFixedTermLoanTopupTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fTopupAmountTotal", Storage="_FTopupAmountTotal", DbType="Decimal(9,2) NOT NULL")]
		public decimal FTopupAmountTotal
		{
			get
			{
				return this._FTopupAmountTotal;
			}
			set
			{
				if ((this._FTopupAmountTotal != value))
				{
					this.OnFTopupAmountTotalChanging(value);
					this.SendPropertyChanging();
					this._FTopupAmountTotal = value;
					this.SendPropertyChanged("FTopupAmountTotal");
					this.OnFTopupAmountTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignFixedTermLoanExtensionTally", Storage="_FSignFixedTermLoanExtensionTally", DbType="TinyInt NOT NULL")]
		public byte FSignFixedTermLoanExtensionTally
		{
			get
			{
				return this._FSignFixedTermLoanExtensionTally;
			}
			set
			{
				if ((this._FSignFixedTermLoanExtensionTally != value))
				{
					this.OnFSignFixedTermLoanExtensionTallyChanging(value);
					this.SendPropertyChanging();
					this._FSignFixedTermLoanExtensionTally = value;
					this.SendPropertyChanged("FSignFixedTermLoanExtensionTally");
					this.OnFSignFixedTermLoanExtensionTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignFixedTermLoanTopupTally", Storage="_FSignFixedTermLoanTopupTally", DbType="TinyInt")]
		public System.Nullable<byte> FSignFixedTermLoanTopupTally
		{
			get
			{
				return this._FSignFixedTermLoanTopupTally;
			}
			set
			{
				if ((this._FSignFixedTermLoanTopupTally != value))
				{
					this.OnFSignFixedTermLoanTopupTallyChanging(value);
					this.SendPropertyChanging();
					this._FSignFixedTermLoanTopupTally = value;
					this.SendPropertyChanged("FSignFixedTermLoanTopupTally");
					this.OnFSignFixedTermLoanTopupTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSubmitCounterOfferTally", Storage="_FSubmitCounterOfferTally", DbType="TinyInt NOT NULL")]
		public byte FSubmitCounterOfferTally
		{
			get
			{
				return this._FSubmitCounterOfferTally;
			}
			set
			{
				if ((this._FSubmitCounterOfferTally != value))
				{
					this.OnFSubmitCounterOfferTallyChanging(value);
					this.SendPropertyChanging();
					this._FSubmitCounterOfferTally = value;
					this.SendPropertyChanged("FSubmitCounterOfferTally");
					this.OnFSubmitCounterOfferTallyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fNewLoanAmount", Storage="_FNewLoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FNewLoanAmount
		{
			get
			{
				return this._FNewLoanAmount;
			}
			set
			{
				if ((this._FNewLoanAmount != value))
				{
					this.OnFNewLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._FNewLoanAmount = value;
					this.SendPropertyChanged("FNewLoanAmount");
					this.OnFNewLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long CreatedByAggBuildId
		{
			get
			{
				return this._CreatedByAggBuildId;
			}
			set
			{
				if ((this._CreatedByAggBuildId != value))
				{
					this.OnCreatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByAggBuildId = value;
					this.SendPropertyChanged("CreatedByAggBuildId");
					this.OnCreatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long UpdatedByAggBuildId
		{
			get
			{
				return this._UpdatedByAggBuildId;
			}
			set
			{
				if ((this._UpdatedByAggBuildId != value))
				{
					this.OnUpdatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByAggBuildId = value;
					this.SendPropertyChanged("UpdatedByAggBuildId");
					this.OnUpdatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FAggApplications.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FAggApplications.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biAffiliate", Storage="_AffiliateEntity", ThisKey="AffiliateSKey", OtherKey="AffiliateSKey", IsForeignKey=true)]
		public AffiliateEntity AffiliateEntity
		{
			get
			{
				return this._AffiliateEntity.Entity;
			}
			set
			{
				AffiliateEntity previousValue = this._AffiliateEntity.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateEntity.Entity = null;
						previousValue.FAggApplications.Remove(this);
					}
					this._AffiliateEntity.Entity = value;
					if ((value != null))
					{
						value.FAggApplications.Add(this);
						this._AffiliateSKey = value.AffiliateSKey;
					}
					else
					{
						this._AffiliateSKey = default(short);
					}
					this.SendPropertyChanged("AffiliateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FAggApplications.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FAggApplications.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FAggApplications.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FAggApplications.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biLn", Storage="_LnEntity", ThisKey="LnSKey", OtherKey="LnSKey", IsForeignKey=true)]
		public LnEntity LnEntity
		{
			get
			{
				return this._LnEntity.Entity;
			}
			set
			{
				LnEntity previousValue = this._LnEntity.Entity;
				if (((previousValue != value) 
							|| (this._LnEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LnEntity.Entity = null;
						previousValue.FAggApplications.Remove(this);
					}
					this._LnEntity.Entity = value;
					if ((value != null))
					{
						value.FAggApplications.Add(this);
						this._LnSKey = value.LnSKey;
					}
					else
					{
						this._LnSKey = default(short);
					}
					this.SendPropertyChanged("LnEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fAggLoanNumber")]
	public partial class FAggLoanNumberEntity : DbEntity<FAggLoanNumberEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private short _FLoanNumber;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByAggBuildId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByAggBuildId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFLoanNumberChanging(short value);
    partial void OnFLoanNumberChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByAggBuildIdChanging(long value);
    partial void OnCreatedByAggBuildIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByAggBuildIdChanging(long value);
    partial void OnUpdatedByAggBuildIdChanged();
    #endregion
		
		public FAggLoanNumberEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fLoanNumber", Storage="_FLoanNumber", DbType="SmallInt NOT NULL")]
		public short FLoanNumber
		{
			get
			{
				return this._FLoanNumber;
			}
			set
			{
				if ((this._FLoanNumber != value))
				{
					this.OnFLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._FLoanNumber = value;
					this.SendPropertyChanged("FLoanNumber");
					this.OnFLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long CreatedByAggBuildId
		{
			get
			{
				return this._CreatedByAggBuildId;
			}
			set
			{
				if ((this._CreatedByAggBuildId != value))
				{
					this.OnCreatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByAggBuildId = value;
					this.SendPropertyChanged("CreatedByAggBuildId");
					this.OnCreatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long UpdatedByAggBuildId
		{
			get
			{
				return this._UpdatedByAggBuildId;
			}
			set
			{
				if ((this._UpdatedByAggBuildId != value))
				{
					this.OnUpdatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByAggBuildId = value;
					this.SendPropertyChanged("UpdatedByAggBuildId");
					this.OnUpdatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggLoanNumber_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FAggLoanNumbers.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FAggLoanNumbers.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggLoanNumber_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FAggLoanNumbers.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FAggLoanNumbers.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fAggTransactionAllocation")]
	public partial class FAggTransactionAllocationEntity : DbEntity<FAggTransactionAllocationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSKey;
		
		private int _ApplicationSKey;
		
		private int _DateSKey;
		
		private short _TransactionTypeSKey;
		
		private short _CollectionMethodSkey;
		
		private short _CollectionSceduleSKey;
		
		private short _CollectionSceduleUserGroupSKey;
		
		private short _UserSkey;
		
		private decimal _FAmount;
		
		private decimal _FCashAdvance;
		
		private decimal _FTopUpAmt;
		
		private decimal _FFees;
		
		private decimal _FInterest;
		
		private decimal _FCollectedPrinciple;
		
		private decimal _FCollectedFees;
		
		private decimal _FCollectedInterest;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByAggBuildId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByAggBuildId;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<TransactionTypeEntity> _TransactionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSKeyChanging(int value);
    partial void OnTransactionSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnTransactionTypeSKeyChanging(short value);
    partial void OnTransactionTypeSKeyChanged();
    partial void OnCollectionMethodSkeyChanging(short value);
    partial void OnCollectionMethodSkeyChanged();
    partial void OnCollectionSceduleSKeyChanging(short value);
    partial void OnCollectionSceduleSKeyChanged();
    partial void OnCollectionSceduleUserGroupSKeyChanging(short value);
    partial void OnCollectionSceduleUserGroupSKeyChanged();
    partial void OnUserSkeyChanging(short value);
    partial void OnUserSkeyChanged();
    partial void OnFAmountChanging(decimal value);
    partial void OnFAmountChanged();
    partial void OnFCashAdvanceChanging(decimal value);
    partial void OnFCashAdvanceChanged();
    partial void OnFTopUpAmtChanging(decimal value);
    partial void OnFTopUpAmtChanged();
    partial void OnFFeesChanging(decimal value);
    partial void OnFFeesChanged();
    partial void OnFInterestChanging(decimal value);
    partial void OnFInterestChanged();
    partial void OnFCollectedPrincipleChanging(decimal value);
    partial void OnFCollectedPrincipleChanged();
    partial void OnFCollectedFeesChanging(decimal value);
    partial void OnFCollectedFeesChanged();
    partial void OnFCollectedInterestChanging(decimal value);
    partial void OnFCollectedInterestChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByAggBuildIdChanging(long value);
    partial void OnCreatedByAggBuildIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByAggBuildIdChanging(long value);
    partial void OnUpdatedByAggBuildIdChanged();
    #endregion
		
		public FAggTransactionAllocationEntity()
		{
			this._DateEntity = default(EntityRef<DateEntity>);
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._TransactionTypeEntity = default(EntityRef<TransactionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSKey
		{
			get
			{
				return this._TransactionSKey;
			}
			set
			{
				if ((this._TransactionSKey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSKey = value;
					this.SendPropertyChanged("TransactionSKey");
					this.OnTransactionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeSKey", DbType="SmallInt NOT NULL")]
		public short TransactionTypeSKey
		{
			get
			{
				return this._TransactionTypeSKey;
			}
			set
			{
				if ((this._TransactionTypeSKey != value))
				{
					if (this._TransactionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeSKey = value;
					this.SendPropertyChanged("TransactionTypeSKey");
					this.OnTransactionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionMethodSkey", DbType="SmallInt NOT NULL")]
		public short CollectionMethodSkey
		{
			get
			{
				return this._CollectionMethodSkey;
			}
			set
			{
				if ((this._CollectionMethodSkey != value))
				{
					this.OnCollectionMethodSkeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionMethodSkey = value;
					this.SendPropertyChanged("CollectionMethodSkey");
					this.OnCollectionMethodSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionSceduleSKey", DbType="SmallInt NOT NULL")]
		public short CollectionSceduleSKey
		{
			get
			{
				return this._CollectionSceduleSKey;
			}
			set
			{
				if ((this._CollectionSceduleSKey != value))
				{
					this.OnCollectionSceduleSKeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionSceduleSKey = value;
					this.SendPropertyChanged("CollectionSceduleSKey");
					this.OnCollectionSceduleSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionSceduleUserGroupSKey", DbType="SmallInt NOT NULL")]
		public short CollectionSceduleUserGroupSKey
		{
			get
			{
				return this._CollectionSceduleUserGroupSKey;
			}
			set
			{
				if ((this._CollectionSceduleUserGroupSKey != value))
				{
					this.OnCollectionSceduleUserGroupSKeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionSceduleUserGroupSKey = value;
					this.SendPropertyChanged("CollectionSceduleUserGroupSKey");
					this.OnCollectionSceduleUserGroupSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSkey", DbType="SmallInt NOT NULL")]
		public short UserSkey
		{
			get
			{
				return this._UserSkey;
			}
			set
			{
				if ((this._UserSkey != value))
				{
					this.OnUserSkeyChanging(value);
					this.SendPropertyChanging();
					this._UserSkey = value;
					this.SendPropertyChanged("UserSkey");
					this.OnUserSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fAmount", Storage="_FAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FAmount
		{
			get
			{
				return this._FAmount;
			}
			set
			{
				if ((this._FAmount != value))
				{
					this.OnFAmountChanging(value);
					this.SendPropertyChanging();
					this._FAmount = value;
					this.SendPropertyChanged("FAmount");
					this.OnFAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCashAdvance", Storage="_FCashAdvance", DbType="Decimal(9,2) NOT NULL")]
		public decimal FCashAdvance
		{
			get
			{
				return this._FCashAdvance;
			}
			set
			{
				if ((this._FCashAdvance != value))
				{
					this.OnFCashAdvanceChanging(value);
					this.SendPropertyChanging();
					this._FCashAdvance = value;
					this.SendPropertyChanged("FCashAdvance");
					this.OnFCashAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fTopUpAmt", Storage="_FTopUpAmt", DbType="Decimal(9,2) NOT NULL")]
		public decimal FTopUpAmt
		{
			get
			{
				return this._FTopUpAmt;
			}
			set
			{
				if ((this._FTopUpAmt != value))
				{
					this.OnFTopUpAmtChanging(value);
					this.SendPropertyChanging();
					this._FTopUpAmt = value;
					this.SendPropertyChanged("FTopUpAmt");
					this.OnFTopUpAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fFees", Storage="_FFees", DbType="Decimal(9,2) NOT NULL")]
		public decimal FFees
		{
			get
			{
				return this._FFees;
			}
			set
			{
				if ((this._FFees != value))
				{
					this.OnFFeesChanging(value);
					this.SendPropertyChanging();
					this._FFees = value;
					this.SendPropertyChanged("FFees");
					this.OnFFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fInterest", Storage="_FInterest", DbType="Decimal(9,2) NOT NULL")]
		public decimal FInterest
		{
			get
			{
				return this._FInterest;
			}
			set
			{
				if ((this._FInterest != value))
				{
					this.OnFInterestChanging(value);
					this.SendPropertyChanging();
					this._FInterest = value;
					this.SendPropertyChanged("FInterest");
					this.OnFInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCollectedPrinciple", Storage="_FCollectedPrinciple", DbType="Decimal(9,2) NOT NULL")]
		public decimal FCollectedPrinciple
		{
			get
			{
				return this._FCollectedPrinciple;
			}
			set
			{
				if ((this._FCollectedPrinciple != value))
				{
					this.OnFCollectedPrincipleChanging(value);
					this.SendPropertyChanging();
					this._FCollectedPrinciple = value;
					this.SendPropertyChanged("FCollectedPrinciple");
					this.OnFCollectedPrincipleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCollectedFees", Storage="_FCollectedFees", DbType="Decimal(9,2) NOT NULL")]
		public decimal FCollectedFees
		{
			get
			{
				return this._FCollectedFees;
			}
			set
			{
				if ((this._FCollectedFees != value))
				{
					this.OnFCollectedFeesChanging(value);
					this.SendPropertyChanging();
					this._FCollectedFees = value;
					this.SendPropertyChanged("FCollectedFees");
					this.OnFCollectedFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCollectedInterest", Storage="_FCollectedInterest", DbType="Decimal(9,2) NOT NULL")]
		public decimal FCollectedInterest
		{
			get
			{
				return this._FCollectedInterest;
			}
			set
			{
				if ((this._FCollectedInterest != value))
				{
					this.OnFCollectedInterestChanging(value);
					this.SendPropertyChanging();
					this._FCollectedInterest = value;
					this.SendPropertyChanged("FCollectedInterest");
					this.OnFCollectedInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long CreatedByAggBuildId
		{
			get
			{
				return this._CreatedByAggBuildId;
			}
			set
			{
				if ((this._CreatedByAggBuildId != value))
				{
					this.OnCreatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByAggBuildId = value;
					this.SendPropertyChanged("CreatedByAggBuildId");
					this.OnCreatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByAggBuildId", DbType="BigInt NOT NULL")]
		public long UpdatedByAggBuildId
		{
			get
			{
				return this._UpdatedByAggBuildId;
			}
			set
			{
				if ((this._UpdatedByAggBuildId != value))
				{
					this.OnUpdatedByAggBuildIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByAggBuildId = value;
					this.SendPropertyChanged("UpdatedByAggBuildId");
					this.OnUpdatedByAggBuildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FAggTransactionAllocations.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FAggTransactionAllocations.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FAggTransactionAllocationEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FAggTransactionAllocationEntity = this;
						this._TransactionSKey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSKey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biTransactionType", Storage="_TransactionTypeEntity", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", IsForeignKey=true)]
		public TransactionTypeEntity TransactionTypeEntity
		{
			get
			{
				return this._TransactionTypeEntity.Entity;
			}
			set
			{
				TransactionTypeEntity previousValue = this._TransactionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionTypeEntity.Entity = null;
						previousValue.FAggTransactionAllocations.Remove(this);
					}
					this._TransactionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FAggTransactionAllocations.Add(this);
						this._TransactionTypeSKey = value.TransactionTypeSKey;
					}
					else
					{
						this._TransactionTypeSKey = default(short);
					}
					this.SendPropertyChanged("TransactionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fBankAccountVerification")]
	public partial class FBankAccountVerificationEntity : DbEntity<FBankAccountVerificationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private bool _IsValidAccountNumber;
		
		private bool _IsMatchNationalNumber;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnIsValidAccountNumberChanging(bool value);
    partial void OnIsValidAccountNumberChanged();
    partial void OnIsMatchNationalNumberChanging(bool value);
    partial void OnIsMatchNationalNumberChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FBankAccountVerificationEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidAccountNumber", DbType="Bit NOT NULL")]
		public bool IsValidAccountNumber
		{
			get
			{
				return this._IsValidAccountNumber;
			}
			set
			{
				if ((this._IsValidAccountNumber != value))
				{
					this.OnIsValidAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._IsValidAccountNumber = value;
					this.SendPropertyChanged("IsValidAccountNumber");
					this.OnIsValidAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatchNationalNumber", DbType="Bit NOT NULL")]
		public bool IsMatchNationalNumber
		{
			get
			{
				return this._IsMatchNationalNumber;
			}
			set
			{
				if ((this._IsMatchNationalNumber != value))
				{
					this.OnIsMatchNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._IsMatchNationalNumber = value;
					this.SendPropertyChanged("IsMatchNationalNumber");
					this.OnIsMatchNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifBankAccountVerification_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FBankAccountVerificationEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FBankAccountVerificationEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fCreateFixedTermLoanApplication")]
	public partial class FCreateFixedTermLoanApplicationEntity : DbEntity<FCreateFixedTermLoanApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountSKey;
		
		private short _AffiliateSKey;
		
		private int _ApplicationSKey;
		
		private int _BankAccountSKey;
		
		private short _CurrencySKey;
		
		private int _PromoCodeSKey;
		
		private int _PaymentCardSKey;
		
		private int _ApiClientSKey;
		
		private int _ApplicationDateSKey;
		
		private int _ApplicationTimeSKey;
		
		private int _PromiseDateSKey;
		
		private int _CollectionDateSKey;
		
		private decimal _FLoanAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<AffiliateEntity> _AffiliateEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<BankAccountEntity> _BankAccountEntity;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _PromiseDateSKeyBi_Date;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
		private EntityRef<PromoCodeEntity> _PromoCodeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnAffiliateSKeyChanging(short value);
    partial void OnAffiliateSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnBankAccountSKeyChanging(int value);
    partial void OnBankAccountSKeyChanged();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnPromoCodeSKeyChanging(int value);
    partial void OnPromoCodeSKeyChanged();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnApiClientSKeyChanging(int value);
    partial void OnApiClientSKeyChanged();
    partial void OnApplicationDateSKeyChanging(int value);
    partial void OnApplicationDateSKeyChanged();
    partial void OnApplicationTimeSKeyChanging(int value);
    partial void OnApplicationTimeSKeyChanged();
    partial void OnPromiseDateSKeyChanging(int value);
    partial void OnPromiseDateSKeyChanged();
    partial void OnCollectionDateSKeyChanging(int value);
    partial void OnCollectionDateSKeyChanged();
    partial void OnFLoanAmountChanging(decimal value);
    partial void OnFLoanAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FCreateFixedTermLoanApplicationEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._AffiliateEntity = default(EntityRef<AffiliateEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._BankAccountEntity = default(EntityRef<BankAccountEntity>);
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._PromiseDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			this._PromoCodeEntity = default(EntityRef<PromoCodeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateSKey", DbType="SmallInt NOT NULL")]
		public short AffiliateSKey
		{
			get
			{
				return this._AffiliateSKey;
			}
			set
			{
				if ((this._AffiliateSKey != value))
				{
					if (this._AffiliateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateSKeyChanging(value);
					this.SendPropertyChanging();
					this._AffiliateSKey = value;
					this.SendPropertyChanged("AffiliateSKey");
					this.OnAffiliateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountSKey", DbType="Int NOT NULL")]
		public int BankAccountSKey
		{
			get
			{
				return this._BankAccountSKey;
			}
			set
			{
				if ((this._BankAccountSKey != value))
				{
					if (this._BankAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._BankAccountSKey = value;
					this.SendPropertyChanged("BankAccountSKey");
					this.OnBankAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL")]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeSKey", DbType="Int NOT NULL")]
		public int PromoCodeSKey
		{
			get
			{
				return this._PromoCodeSKey;
			}
			set
			{
				if ((this._PromoCodeSKey != value))
				{
					if (this._PromoCodeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromoCodeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeSKey = value;
					this.SendPropertyChanged("PromoCodeSKey");
					this.OnPromoCodeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", DbType="Int NOT NULL")]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiClientSKey", DbType="Int NOT NULL")]
		public int ApiClientSKey
		{
			get
			{
				return this._ApiClientSKey;
			}
			set
			{
				if ((this._ApiClientSKey != value))
				{
					this.OnApiClientSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiClientSKey = value;
					this.SendPropertyChanged("ApiClientSKey");
					this.OnApiClientSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDateSKey", DbType="Int NOT NULL")]
		public int ApplicationDateSKey
		{
			get
			{
				return this._ApplicationDateSKey;
			}
			set
			{
				if ((this._ApplicationDateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDateSKey = value;
					this.SendPropertyChanged("ApplicationDateSKey");
					this.OnApplicationDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationTimeSKey", DbType="Int NOT NULL")]
		public int ApplicationTimeSKey
		{
			get
			{
				return this._ApplicationTimeSKey;
			}
			set
			{
				if ((this._ApplicationTimeSKey != value))
				{
					this.OnApplicationTimeSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationTimeSKey = value;
					this.SendPropertyChanged("ApplicationTimeSKey");
					this.OnApplicationTimeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromiseDateSKey", DbType="Int NOT NULL")]
		public int PromiseDateSKey
		{
			get
			{
				return this._PromiseDateSKey;
			}
			set
			{
				if ((this._PromiseDateSKey != value))
				{
					if (this._PromiseDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromiseDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._PromiseDateSKey = value;
					this.SendPropertyChanged("PromiseDateSKey");
					this.OnPromiseDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDateSKey", DbType="Int NOT NULL")]
		public int CollectionDateSKey
		{
			get
			{
				return this._CollectionDateSKey;
			}
			set
			{
				if ((this._CollectionDateSKey != value))
				{
					this.OnCollectionDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._CollectionDateSKey = value;
					this.SendPropertyChanged("CollectionDateSKey");
					this.OnCollectionDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fLoanAmount", Storage="_FLoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FLoanAmount
		{
			get
			{
				return this._FLoanAmount;
			}
			set
			{
				if ((this._FLoanAmount != value))
				{
					this.OnFLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._FLoanAmount = value;
					this.SendPropertyChanged("FLoanAmount");
					this.OnFLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biAffiliate", Storage="_AffiliateEntity", ThisKey="AffiliateSKey", OtherKey="AffiliateSKey", IsForeignKey=true)]
		public AffiliateEntity AffiliateEntity
		{
			get
			{
				return this._AffiliateEntity.Entity;
			}
			set
			{
				AffiliateEntity previousValue = this._AffiliateEntity.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._AffiliateEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._AffiliateSKey = value.AffiliateSKey;
					}
					else
					{
						this._AffiliateSKey = default(short);
					}
					this.SendPropertyChanged("AffiliateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplicationEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplicationEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biBankAccount", Storage="_BankAccountEntity", ThisKey="BankAccountSKey", OtherKey="BankAccountSKey", IsForeignKey=true)]
		public BankAccountEntity BankAccountEntity
		{
			get
			{
				return this._BankAccountEntity.Entity;
			}
			set
			{
				BankAccountEntity previousValue = this._BankAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._BankAccountEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._BankAccountSKey = value.BankAccountSKey;
					}
					else
					{
						this._BankAccountSKey = default(int);
					}
					this.SendPropertyChanged("BankAccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biCurrency", Storage="_CurrencyEntity", ThisKey="CurrencySKey", OtherKey="CurrencySKey", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._CurrencySKey = value.CurrencySKey;
					}
					else
					{
						this._CurrencySKey = default(short);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biDate_1", Storage="_DateEntity", ThisKey="ApplicationDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._ApplicationDateSKey = value.DateSKey;
					}
					else
					{
						this._ApplicationDateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biDate_2", Storage="_PromiseDateSKeyBi_Date", ThisKey="PromiseDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity PromiseDateSKeyBi_Date
		{
			get
			{
				return this._PromiseDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._PromiseDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._PromiseDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromiseDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FCreateFixedTermLoanApplications.Remove(this);
					}
					this._PromiseDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FCreateFixedTermLoanApplications.Add(this);
						this._PromiseDateSKey = value.DateSKey;
					}
					else
					{
						this._PromiseDateSKey = default(int);
					}
					this.SendPropertyChanged("PromiseDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._PaymentCardSKey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biPromoCode", Storage="_PromoCodeEntity", ThisKey="PromoCodeSKey", OtherKey="PromoCodeSKey", IsForeignKey=true)]
		public PromoCodeEntity PromoCodeEntity
		{
			get
			{
				return this._PromoCodeEntity.Entity;
			}
			set
			{
				PromoCodeEntity previousValue = this._PromoCodeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PromoCodeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromoCodeEntity.Entity = null;
						previousValue.FCreateFixedTermLoanApplications.Remove(this);
					}
					this._PromoCodeEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanApplications.Add(this);
						this._PromoCodeSKey = value.PromoCodeSKey;
					}
					else
					{
						this._PromoCodeSKey = default(int);
					}
					this.SendPropertyChanged("PromoCodeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fCreateFixedTermLoanExtension")]
	public partial class FCreateFixedTermLoanExtensionEntity : DbEntity<FCreateFixedTermLoanExtensionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanExtensionSKey;
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _PaymentCardSKey;
		
		private int _DateSKey;
		
		private int _ExtendDateSKey;
		
		private byte _FLoanExtended;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _ExtendDateSKeyBi_Date;
		
		private EntityRef<FixedTermLoanExtensionEntity> _FixedTermLoanExtensionEntity;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanExtensionSKeyChanging(int value);
    partial void OnFixedTermLoanExtensionSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnExtendDateSKeyChanging(int value);
    partial void OnExtendDateSKeyChanged();
    partial void OnFLoanExtendedChanging(byte value);
    partial void OnFLoanExtendedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FCreateFixedTermLoanExtensionEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._ExtendDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._FixedTermLoanExtensionEntity = default(EntityRef<FixedTermLoanExtensionEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanExtensionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FixedTermLoanExtensionSKey
		{
			get
			{
				return this._FixedTermLoanExtensionSKey;
			}
			set
			{
				if ((this._FixedTermLoanExtensionSKey != value))
				{
					if (this._FixedTermLoanExtensionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFixedTermLoanExtensionSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanExtensionSKey = value;
					this.SendPropertyChanged("FixedTermLoanExtensionSKey");
					this.OnFixedTermLoanExtensionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", DbType="Int NOT NULL")]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendDateSKey", DbType="Int NOT NULL")]
		public int ExtendDateSKey
		{
			get
			{
				return this._ExtendDateSKey;
			}
			set
			{
				if ((this._ExtendDateSKey != value))
				{
					if (this._ExtendDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._ExtendDateSKey = value;
					this.SendPropertyChanged("ExtendDateSKey");
					this.OnExtendDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fLoanExtended", Storage="_FLoanExtended", DbType="TinyInt NOT NULL")]
		public byte FLoanExtended
		{
			get
			{
				return this._FLoanExtended;
			}
			set
			{
				if ((this._FLoanExtended != value))
				{
					this.OnFLoanExtendedChanging(value);
					this.SendPropertyChanging();
					this._FLoanExtended = value;
					this.SendPropertyChanged("FLoanExtended");
					this.OnFLoanExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FCreateFixedTermLoanExtensions.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanExtensions.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FCreateFixedTermLoanExtensions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanExtensions.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FCreateFixedTermLoanExtensions.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanExtensions.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biDate_2", Storage="_ExtendDateSKeyBi_Date", ThisKey="ExtendDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity ExtendDateSKeyBi_Date
		{
			get
			{
				return this._ExtendDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._ExtendDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._ExtendDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtendDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FCreateFixedTermLoanExtensions.Remove(this);
					}
					this._ExtendDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FCreateFixedTermLoanExtensions.Add(this);
						this._ExtendDateSKey = value.DateSKey;
					}
					else
					{
						this._ExtendDateSKey = default(int);
					}
					this.SendPropertyChanged("ExtendDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biFixedTermLoanExtension", Storage="_FixedTermLoanExtensionEntity", ThisKey="FixedTermLoanExtensionSKey", OtherKey="FixedTermLoanExtensionSKey", IsForeignKey=true)]
		public FixedTermLoanExtensionEntity FixedTermLoanExtensionEntity
		{
			get
			{
				return this._FixedTermLoanExtensionEntity.Entity;
			}
			set
			{
				FixedTermLoanExtensionEntity previousValue = this._FixedTermLoanExtensionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanExtensionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanExtensionEntity.Entity = null;
						previousValue.FCreateFixedTermLoanExtensionEntity = null;
					}
					this._FixedTermLoanExtensionEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanExtensionEntity = this;
						this._FixedTermLoanExtensionSKey = value.FixedTermLoanExtensionSKey;
					}
					else
					{
						this._FixedTermLoanExtensionSKey = default(int);
					}
					this.SendPropertyChanged("FixedTermLoanExtensionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FCreateFixedTermLoanExtensions.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanExtensions.Add(this);
						this._PaymentCardSKey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fCreateFixedTermLoanTopup")]
	public partial class FCreateFixedTermLoanTopupEntity : DbEntity<FCreateFixedTermLoanTopupEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanTopupSKey;
		
		private int _AccountSKey;
		
		private int _ApplicationSKey;
		
		private int _DateSKey;
		
		private decimal _FTopupAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<FixedTermLoanTopUpEntity> _FixedTermLoanTopUpEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanTopupSKeyChanging(int value);
    partial void OnFixedTermLoanTopupSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFTopupAmountChanging(decimal value);
    partial void OnFTopupAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FCreateFixedTermLoanTopupEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._FixedTermLoanTopUpEntity = default(EntityRef<FixedTermLoanTopUpEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanTopupSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FixedTermLoanTopupSKey
		{
			get
			{
				return this._FixedTermLoanTopupSKey;
			}
			set
			{
				if ((this._FixedTermLoanTopupSKey != value))
				{
					if (this._FixedTermLoanTopUpEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFixedTermLoanTopupSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanTopupSKey = value;
					this.SendPropertyChanged("FixedTermLoanTopupSKey");
					this.OnFixedTermLoanTopupSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fTopupAmount", Storage="_FTopupAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FTopupAmount
		{
			get
			{
				return this._FTopupAmount;
			}
			set
			{
				if ((this._FTopupAmount != value))
				{
					this.OnFTopupAmountChanging(value);
					this.SendPropertyChanging();
					this._FTopupAmount = value;
					this.SendPropertyChanged("FTopupAmount");
					this.OnFTopupAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FCreateFixedTermLoanTopups.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanTopups.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FCreateFixedTermLoanTopups.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanTopups.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biDateSKey", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FCreateFixedTermLoanTopups.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanTopups.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biFixedTermLoanTopup", Storage="_FixedTermLoanTopUpEntity", ThisKey="FixedTermLoanTopupSKey", OtherKey="FixedTermLoanTopupSKey", IsForeignKey=true)]
		public FixedTermLoanTopUpEntity FixedTermLoanTopUpEntity
		{
			get
			{
				return this._FixedTermLoanTopUpEntity.Entity;
			}
			set
			{
				FixedTermLoanTopUpEntity previousValue = this._FixedTermLoanTopUpEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanTopUpEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanTopUpEntity.Entity = null;
						previousValue.FCreateFixedTermLoanTopupEntity = null;
					}
					this._FixedTermLoanTopUpEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateFixedTermLoanTopupEntity = this;
						this._FixedTermLoanTopupSKey = value.FixedTermLoanTopupSKey;
					}
					else
					{
						this._FixedTermLoanTopupSKey = default(int);
					}
					this.SendPropertyChanged("FixedTermLoanTopUpEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fCreateTransaction")]
	public partial class FCreateTransactionEntity : DbEntity<FCreateTransactionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSKey;
		
		private int _ApplicationSKey;
		
		private int _DateSKey;
		
		private short _TransactionTypeSKey;
		
		private byte _TransactionScopeSKey;
		
		private short _CurrencySKey;
		
		private System.Nullable<short> _UserSKey;
		
		private decimal _FAmount;
		
		private decimal _FMir;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<TransactionScopeEntity> _TransactionScopeEntity;
		
		private EntityRef<TransactionTypeEntity> _TransactionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSKeyChanging(int value);
    partial void OnTransactionSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnTransactionTypeSKeyChanging(short value);
    partial void OnTransactionTypeSKeyChanged();
    partial void OnTransactionScopeSKeyChanging(byte value);
    partial void OnTransactionScopeSKeyChanged();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnUserSKeyChanging(System.Nullable<short> value);
    partial void OnUserSKeyChanged();
    partial void OnFAmountChanging(decimal value);
    partial void OnFAmountChanged();
    partial void OnFMirChanging(decimal value);
    partial void OnFMirChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FCreateTransactionEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._TransactionScopeEntity = default(EntityRef<TransactionScopeEntity>);
			this._TransactionTypeEntity = default(EntityRef<TransactionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSKey
		{
			get
			{
				return this._TransactionSKey;
			}
			set
			{
				if ((this._TransactionSKey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSKey = value;
					this.SendPropertyChanged("TransactionSKey");
					this.OnTransactionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeSKey", DbType="SmallInt NOT NULL")]
		public short TransactionTypeSKey
		{
			get
			{
				return this._TransactionTypeSKey;
			}
			set
			{
				if ((this._TransactionTypeSKey != value))
				{
					if (this._TransactionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeSKey = value;
					this.SendPropertyChanged("TransactionTypeSKey");
					this.OnTransactionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionScopeSKey", DbType="TinyInt NOT NULL")]
		public byte TransactionScopeSKey
		{
			get
			{
				return this._TransactionScopeSKey;
			}
			set
			{
				if ((this._TransactionScopeSKey != value))
				{
					if (this._TransactionScopeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionScopeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionScopeSKey = value;
					this.SendPropertyChanged("TransactionScopeSKey");
					this.OnTransactionScopeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL")]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSKey", DbType="SmallInt")]
		public System.Nullable<short> UserSKey
		{
			get
			{
				return this._UserSKey;
			}
			set
			{
				if ((this._UserSKey != value))
				{
					this.OnUserSKeyChanging(value);
					this.SendPropertyChanging();
					this._UserSKey = value;
					this.SendPropertyChanged("UserSKey");
					this.OnUserSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fAmount", Storage="_FAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FAmount
		{
			get
			{
				return this._FAmount;
			}
			set
			{
				if ((this._FAmount != value))
				{
					this.OnFAmountChanging(value);
					this.SendPropertyChanging();
					this._FAmount = value;
					this.SendPropertyChanged("FAmount");
					this.OnFAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fMir", Storage="_FMir", DbType="Decimal(9,6) NOT NULL")]
		public decimal FMir
		{
			get
			{
				return this._FMir;
			}
			set
			{
				if ((this._FMir != value))
				{
					this.OnFMirChanging(value);
					this.SendPropertyChanging();
					this._FMir = value;
					this.SendPropertyChanged("FMir");
					this.OnFMirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FCreateTransactions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactions.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biCurrency", Storage="_CurrencyEntity", ThisKey="CurrencySKey", OtherKey="CurrencySKey", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.FCreateTransactions.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactions.Add(this);
						this._CurrencySKey = value.CurrencySKey;
					}
					else
					{
						this._CurrencySKey = default(short);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FCreateTransactions.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactions.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FCreateTransactionEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactionEntity = this;
						this._TransactionSKey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSKey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransactionScope", Storage="_TransactionScopeEntity", ThisKey="TransactionScopeSKey", OtherKey="TransactionScopeSKey", IsForeignKey=true)]
		public TransactionScopeEntity TransactionScopeEntity
		{
			get
			{
				return this._TransactionScopeEntity.Entity;
			}
			set
			{
				TransactionScopeEntity previousValue = this._TransactionScopeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionScopeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionScopeEntity.Entity = null;
						previousValue.FCreateTransactions.Remove(this);
					}
					this._TransactionScopeEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactions.Add(this);
						this._TransactionScopeSKey = value.TransactionScopeSKey;
					}
					else
					{
						this._TransactionScopeSKey = default(byte);
					}
					this.SendPropertyChanged("TransactionScopeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransactionType", Storage="_TransactionTypeEntity", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", IsForeignKey=true)]
		public TransactionTypeEntity TransactionTypeEntity
		{
			get
			{
				return this._TransactionTypeEntity.Entity;
			}
			set
			{
				TransactionTypeEntity previousValue = this._TransactionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionTypeEntity.Entity = null;
						previousValue.FCreateTransactions.Remove(this);
					}
					this._TransactionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FCreateTransactions.Add(this);
						this._TransactionTypeSKey = value.TransactionTypeSKey;
					}
					else
					{
						this._TransactionTypeSKey = default(short);
					}
					this.SendPropertyChanged("TransactionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fEquifaxResponse")]
	public partial class FEquifaxResponseEntity : DbEntity<FEquifaxResponseEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquifaxSagaSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private System.Xml.Linq.XElement _ResponseXML;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<EquifaxSagaEntity> _EquifaxSagaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquifaxSagaSKeyChanging(int value);
    partial void OnEquifaxSagaSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnResponseXMLChanging(System.Xml.Linq.XElement value);
    partial void OnResponseXMLChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FEquifaxResponseEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._EquifaxSagaEntity = default(EntityRef<EquifaxSagaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquifaxSagaSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquifaxSagaSKey
		{
			get
			{
				return this._EquifaxSagaSKey;
			}
			set
			{
				if ((this._EquifaxSagaSKey != value))
				{
					if (this._EquifaxSagaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquifaxSagaSKeyChanging(value);
					this.SendPropertyChanging();
					this._EquifaxSagaSKey = value;
					this.SendPropertyChanged("EquifaxSagaSKey");
					this.OnEquifaxSagaSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseXML", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ResponseXML
		{
			get
			{
				return this._ResponseXML;
			}
			set
			{
				if ((this._ResponseXML != value))
				{
					this.OnResponseXMLChanging(value);
					this.SendPropertyChanging();
					this._ResponseXML = value;
					this.SendPropertyChanged("ResponseXML");
					this.OnResponseXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FEquifaxResponses.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FEquifaxResponses.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FEquifaxResponses.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FEquifaxResponses.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fk_bifEquifaxResponse_REF_biEquifaxSaga", Storage="_EquifaxSagaEntity", ThisKey="EquifaxSagaSKey", OtherKey="EquifaxSagaSKey", IsForeignKey=true)]
		public EquifaxSagaEntity EquifaxSagaEntity
		{
			get
			{
				return this._EquifaxSagaEntity.Entity;
			}
			set
			{
				EquifaxSagaEntity previousValue = this._EquifaxSagaEntity.Entity;
				if (((previousValue != value) 
							|| (this._EquifaxSagaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquifaxSagaEntity.Entity = null;
						previousValue.FEquifaxResponseEntity = null;
					}
					this._EquifaxSagaEntity.Entity = value;
					if ((value != null))
					{
						value.FEquifaxResponseEntity = this;
						this._EquifaxSagaSKey = value.EquifaxSagaSKey;
					}
					else
					{
						this._EquifaxSagaSKey = default(int);
					}
					this.SendPropertyChanged("EquifaxSagaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fExtendLoan")]
	public partial class FExtendLoanEntity : DbEntity<FExtendLoanEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _PaymentCardSKey;
		
		private int _RepaymentRequestSKey;
		
		private int _RequestDateSKey;
		
		private int _NextDueDateSKey;
		
		private byte _FLoanExtended;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _NextDueDateSKeyBi_Date;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
		private EntityRef<RepaymentRequestEntity> _RepaymentRequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnRepaymentRequestSKeyChanging(int value);
    partial void OnRepaymentRequestSKeyChanged();
    partial void OnRequestDateSKeyChanging(int value);
    partial void OnRequestDateSKeyChanged();
    partial void OnNextDueDateSKeyChanging(int value);
    partial void OnNextDueDateSKeyChanged();
    partial void OnFLoanExtendedChanging(byte value);
    partial void OnFLoanExtendedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FExtendLoanEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._NextDueDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			this._RepaymentRequestEntity = default(EntityRef<RepaymentRequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RepaymentRequestSKey
		{
			get
			{
				return this._RepaymentRequestSKey;
			}
			set
			{
				if ((this._RepaymentRequestSKey != value))
				{
					if (this._RepaymentRequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentRequestSKeyChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestSKey = value;
					this.SendPropertyChanged("RepaymentRequestSKey");
					this.OnRepaymentRequestSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RequestDateSKey
		{
			get
			{
				return this._RequestDateSKey;
			}
			set
			{
				if ((this._RequestDateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._RequestDateSKey = value;
					this.SendPropertyChanged("RequestDateSKey");
					this.OnRequestDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDueDateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NextDueDateSKey
		{
			get
			{
				return this._NextDueDateSKey;
			}
			set
			{
				if ((this._NextDueDateSKey != value))
				{
					if (this._NextDueDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNextDueDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._NextDueDateSKey = value;
					this.SendPropertyChanged("NextDueDateSKey");
					this.OnNextDueDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fLoanExtended", Storage="_FLoanExtended", DbType="TinyInt NOT NULL")]
		public byte FLoanExtended
		{
			get
			{
				return this._FLoanExtended;
			}
			set
			{
				if ((this._FLoanExtended != value))
				{
					this.OnFLoanExtendedChanging(value);
					this.SendPropertyChanging();
					this._FLoanExtended = value;
					this.SendPropertyChanged("FLoanExtended");
					this.OnFLoanExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FExtendLoans.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FExtendLoans.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biDate_1", Storage="_DateEntity", ThisKey="RequestDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FExtendLoans.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FExtendLoans.Add(this);
						this._RequestDateSKey = value.DateSKey;
					}
					else
					{
						this._RequestDateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biDate_2", Storage="_NextDueDateSKeyBi_Date", ThisKey="NextDueDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity NextDueDateSKeyBi_Date
		{
			get
			{
				return this._NextDueDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._NextDueDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._NextDueDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NextDueDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FExtendLoans.Remove(this);
					}
					this._NextDueDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FExtendLoans.Add(this);
						this._NextDueDateSKey = value.DateSKey;
					}
					else
					{
						this._NextDueDateSKey = default(int);
					}
					this.SendPropertyChanged("NextDueDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FExtendLoans.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FExtendLoans.Add(this);
						this._PaymentCardSKey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biRepaymentRequest", Storage="_RepaymentRequestEntity", ThisKey="RepaymentRequestSKey", OtherKey="RepaymentRequestSKey", IsForeignKey=true)]
		public RepaymentRequestEntity RepaymentRequestEntity
		{
			get
			{
				return this._RepaymentRequestEntity.Entity;
			}
			set
			{
				RepaymentRequestEntity previousValue = this._RepaymentRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RepaymentRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepaymentRequestEntity.Entity = null;
						previousValue.FExtendLoans.Remove(this);
					}
					this._RepaymentRequestEntity.Entity = value;
					if ((value != null))
					{
						value.FExtendLoans.Add(this);
						this._RepaymentRequestSKey = value.RepaymentRequestSKey;
					}
					else
					{
						this._RepaymentRequestSKey = default(int);
					}
					this.SendPropertyChanged("RepaymentRequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fIApplicationAccepted")]
	public partial class FIApplicationAcceptedEntity : DbEntity<FIApplicationAcceptedEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _FApplicationAccepted;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFApplicationAcceptedChanging(byte value);
    partial void OnFApplicationAcceptedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FIApplicationAcceptedEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fApplicationAccepted", Storage="_FApplicationAccepted", DbType="TinyInt NOT NULL")]
		public byte FApplicationAccepted
		{
			get
			{
				return this._FApplicationAccepted;
			}
			set
			{
				if ((this._FApplicationAccepted != value))
				{
					this.OnFApplicationAcceptedChanging(value);
					this.SendPropertyChanging();
					this._FApplicationAccepted = value;
					this.SendPropertyChanged("FApplicationAccepted");
					this.OnFApplicationAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FIApplicationAccepteds.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationAccepteds.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FIApplicationAcceptedEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationAcceptedEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationAccepted_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FIApplicationAccepteds.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationAccepteds.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fIApplicationClosed")]
	public partial class FIApplicationClosedEntity : DbEntity<FIApplicationClosedEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _FApplicationClosed;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFApplicationClosedChanging(byte value);
    partial void OnFApplicationClosedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FIApplicationClosedEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fApplicationClosed", Storage="_FApplicationClosed", DbType="TinyInt NOT NULL")]
		public byte FApplicationClosed
		{
			get
			{
				return this._FApplicationClosed;
			}
			set
			{
				if ((this._FApplicationClosed != value))
				{
					this.OnFApplicationClosedChanging(value);
					this.SendPropertyChanging();
					this._FApplicationClosed = value;
					this.SendPropertyChanged("FApplicationClosed");
					this.OnFApplicationClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FIApplicationCloseds.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationCloseds.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FIApplicationCloseds.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationCloseds.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationClosed_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FIApplicationCloseds.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationCloseds.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fIApplicationDeclined")]
	public partial class FIApplicationDeclinedEntity : DbEntity<FIApplicationDeclinedEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _ApplicationDeclinedReasonSKey;
		
		private byte _FApplicationDeclined;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<ApplicationDeclinedReasonEntity> _ApplicationDeclinedReasonEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnApplicationDeclinedReasonSKeyChanging(byte value);
    partial void OnApplicationDeclinedReasonSKeyChanged();
    partial void OnFApplicationDeclinedChanging(byte value);
    partial void OnFApplicationDeclinedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FIApplicationDeclinedEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._ApplicationDeclinedReasonEntity = default(EntityRef<ApplicationDeclinedReasonEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDeclinedReasonSKey", DbType="TinyInt NOT NULL")]
		public byte ApplicationDeclinedReasonSKey
		{
			get
			{
				return this._ApplicationDeclinedReasonSKey;
			}
			set
			{
				if ((this._ApplicationDeclinedReasonSKey != value))
				{
					if (this._ApplicationDeclinedReasonEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationDeclinedReasonSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDeclinedReasonSKey = value;
					this.SendPropertyChanged("ApplicationDeclinedReasonSKey");
					this.OnApplicationDeclinedReasonSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fApplicationDeclined", Storage="_FApplicationDeclined", DbType="TinyInt NOT NULL")]
		public byte FApplicationDeclined
		{
			get
			{
				return this._FApplicationDeclined;
			}
			set
			{
				if ((this._FApplicationDeclined != value))
				{
					this.OnFApplicationDeclinedChanging(value);
					this.SendPropertyChanging();
					this._FApplicationDeclined = value;
					this.SendPropertyChanged("FApplicationDeclined");
					this.OnFApplicationDeclinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FIApplicationDeclineds.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationDeclineds.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FIApplicationDeclinedEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationDeclinedEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biApplicationDeclinedReason", Storage="_ApplicationDeclinedReasonEntity", ThisKey="ApplicationDeclinedReasonSKey", OtherKey="ApplicationDeclinedReasonSKey", IsForeignKey=true)]
		public ApplicationDeclinedReasonEntity ApplicationDeclinedReasonEntity
		{
			get
			{
				return this._ApplicationDeclinedReasonEntity.Entity;
			}
			set
			{
				ApplicationDeclinedReasonEntity previousValue = this._ApplicationDeclinedReasonEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationDeclinedReasonEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationDeclinedReasonEntity.Entity = null;
						previousValue.FIApplicationDeclineds.Remove(this);
					}
					this._ApplicationDeclinedReasonEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationDeclineds.Add(this);
						this._ApplicationDeclinedReasonSKey = value.ApplicationDeclinedReasonSKey;
					}
					else
					{
						this._ApplicationDeclinedReasonSKey = default(byte);
					}
					this.SendPropertyChanged("ApplicationDeclinedReasonEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIApplicationDeclined_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FIApplicationDeclineds.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FIApplicationDeclineds.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fIFixedTermApplicationAdded")]
	public partial class FIFixedTermApplicationAddedEntity : DbEntity<FIFixedTermApplicationAddedEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _FIFixedTermApplicationAdded;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFIFixedTermApplicationAddedChanging(byte value);
    partial void OnFIFixedTermApplicationAddedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FIFixedTermApplicationAddedEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fIFixedTermApplicationAdded", Storage="_FIFixedTermApplicationAdded", DbType="TinyInt NOT NULL")]
		public byte FIFixedTermApplicationAdded
		{
			get
			{
				return this._FIFixedTermApplicationAdded;
			}
			set
			{
				if ((this._FIFixedTermApplicationAdded != value))
				{
					this.OnFIFixedTermApplicationAddedChanging(value);
					this.SendPropertyChanging();
					this._FIFixedTermApplicationAdded = value;
					this.SendPropertyChanged("FIFixedTermApplicationAdded");
					this.OnFIFixedTermApplicationAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FIFixedTermApplicationAddeds.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FIFixedTermApplicationAddeds.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FIFixedTermApplicationAddedEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FIFixedTermApplicationAddedEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifIFixedTermApplicationAdded_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FIFixedTermApplicationAddeds.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FIFixedTermApplicationAddeds.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.FixedTermLoanExtension")]
	public partial class FixedTermLoanExtensionEntity : DbEntity<FixedTermLoanExtensionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanExtensionSKey;
		
		private System.Guid _FixedTermLoanExtensionNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<FCreateFixedTermLoanExtensionEntity> _FCreateFixedTermLoanExtensionEntity;
		
		private EntityRef<FSignFixedTermLoanExtensionEntity> _FSignFixedTermLoanExtensionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanExtensionSKeyChanging(int value);
    partial void OnFixedTermLoanExtensionSKeyChanged();
    partial void OnFixedTermLoanExtensionNKeyChanging(System.Guid value);
    partial void OnFixedTermLoanExtensionNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FixedTermLoanExtensionEntity()
		{
			this._FCreateFixedTermLoanExtensionEntity = default(EntityRef<FCreateFixedTermLoanExtensionEntity>);
			this._FSignFixedTermLoanExtensionEntity = default(EntityRef<FSignFixedTermLoanExtensionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanExtensionSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FixedTermLoanExtensionSKey
		{
			get
			{
				return this._FixedTermLoanExtensionSKey;
			}
			set
			{
				if ((this._FixedTermLoanExtensionSKey != value))
				{
					this.OnFixedTermLoanExtensionSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanExtensionSKey = value;
					this.SendPropertyChanged("FixedTermLoanExtensionSKey");
					this.OnFixedTermLoanExtensionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanExtensionNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FixedTermLoanExtensionNKey
		{
			get
			{
				return this._FixedTermLoanExtensionNKey;
			}
			set
			{
				if ((this._FixedTermLoanExtensionNKey != value))
				{
					this.OnFixedTermLoanExtensionNKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanExtensionNKey = value;
					this.SendPropertyChanged("FixedTermLoanExtensionNKey");
					this.OnFixedTermLoanExtensionNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biFixedTermLoanExtension", Storage="_FCreateFixedTermLoanExtensionEntity", ThisKey="FixedTermLoanExtensionSKey", OtherKey="FixedTermLoanExtensionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FCreateFixedTermLoanExtensionEntity FCreateFixedTermLoanExtensionEntity
		{
			get
			{
				return this._FCreateFixedTermLoanExtensionEntity.Entity;
			}
			set
			{
				FCreateFixedTermLoanExtensionEntity previousValue = this._FCreateFixedTermLoanExtensionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FCreateFixedTermLoanExtensionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FCreateFixedTermLoanExtensionEntity.Entity = null;
						previousValue.FixedTermLoanExtensionEntity = null;
					}
					this._FCreateFixedTermLoanExtensionEntity.Entity = value;
					if ((value != null))
					{
						value.FixedTermLoanExtensionEntity = this;
					}
					this.SendPropertyChanged("FCreateFixedTermLoanExtensionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biFixedTermLoanExtension", Storage="_FSignFixedTermLoanExtensionEntity", ThisKey="FixedTermLoanExtensionSKey", OtherKey="FixedTermLoanExtensionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FSignFixedTermLoanExtensionEntity FSignFixedTermLoanExtensionEntity
		{
			get
			{
				return this._FSignFixedTermLoanExtensionEntity.Entity;
			}
			set
			{
				FSignFixedTermLoanExtensionEntity previousValue = this._FSignFixedTermLoanExtensionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FSignFixedTermLoanExtensionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSignFixedTermLoanExtensionEntity.Entity = null;
						previousValue.FixedTermLoanExtensionEntity = null;
					}
					this._FSignFixedTermLoanExtensionEntity.Entity = value;
					if ((value != null))
					{
						value.FixedTermLoanExtensionEntity = this;
					}
					this.SendPropertyChanged("FSignFixedTermLoanExtensionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.FixedTermLoanTopUp")]
	public partial class FixedTermLoanTopUpEntity : DbEntity<FixedTermLoanTopUpEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanTopupSKey;
		
		private System.Guid _FixedTermLoanTopupNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<FCreateFixedTermLoanTopupEntity> _FCreateFixedTermLoanTopupEntity;
		
		private EntityRef<FSignFixedTermLoanTopupEntity> _FSignFixedTermLoanTopupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanTopupSKeyChanging(int value);
    partial void OnFixedTermLoanTopupSKeyChanged();
    partial void OnFixedTermLoanTopupNKeyChanging(System.Guid value);
    partial void OnFixedTermLoanTopupNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FixedTermLoanTopUpEntity()
		{
			this._FCreateFixedTermLoanTopupEntity = default(EntityRef<FCreateFixedTermLoanTopupEntity>);
			this._FSignFixedTermLoanTopupEntity = default(EntityRef<FSignFixedTermLoanTopupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanTopupSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FixedTermLoanTopupSKey
		{
			get
			{
				return this._FixedTermLoanTopupSKey;
			}
			set
			{
				if ((this._FixedTermLoanTopupSKey != value))
				{
					this.OnFixedTermLoanTopupSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanTopupSKey = value;
					this.SendPropertyChanged("FixedTermLoanTopupSKey");
					this.OnFixedTermLoanTopupSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanTopupNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FixedTermLoanTopupNKey
		{
			get
			{
				return this._FixedTermLoanTopupNKey;
			}
			set
			{
				if ((this._FixedTermLoanTopupNKey != value))
				{
					this.OnFixedTermLoanTopupNKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanTopupNKey = value;
					this.SendPropertyChanged("FixedTermLoanTopupNKey");
					this.OnFixedTermLoanTopupNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanTopup_REF_biFixedTermLoanTopup", Storage="_FCreateFixedTermLoanTopupEntity", ThisKey="FixedTermLoanTopupSKey", OtherKey="FixedTermLoanTopupSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FCreateFixedTermLoanTopupEntity FCreateFixedTermLoanTopupEntity
		{
			get
			{
				return this._FCreateFixedTermLoanTopupEntity.Entity;
			}
			set
			{
				FCreateFixedTermLoanTopupEntity previousValue = this._FCreateFixedTermLoanTopupEntity.Entity;
				if (((previousValue != value) 
							|| (this._FCreateFixedTermLoanTopupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FCreateFixedTermLoanTopupEntity.Entity = null;
						previousValue.FixedTermLoanTopUpEntity = null;
					}
					this._FCreateFixedTermLoanTopupEntity.Entity = value;
					if ((value != null))
					{
						value.FixedTermLoanTopUpEntity = this;
					}
					this.SendPropertyChanged("FCreateFixedTermLoanTopupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biFixedTermLoanTopup", Storage="_FSignFixedTermLoanTopupEntity", ThisKey="FixedTermLoanTopupSKey", OtherKey="FixedTermLoanTopupSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FSignFixedTermLoanTopupEntity FSignFixedTermLoanTopupEntity
		{
			get
			{
				return this._FSignFixedTermLoanTopupEntity.Entity;
			}
			set
			{
				FSignFixedTermLoanTopupEntity previousValue = this._FSignFixedTermLoanTopupEntity.Entity;
				if (((previousValue != value) 
							|| (this._FSignFixedTermLoanTopupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSignFixedTermLoanTopupEntity.Entity = null;
						previousValue.FixedTermLoanTopUpEntity = null;
					}
					this._FSignFixedTermLoanTopupEntity.Entity = value;
					if ((value != null))
					{
						value.FixedTermLoanTopUpEntity = this;
					}
					this.SendPropertyChanged("FSignFixedTermLoanTopupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fMessageType")]
	public partial class FMessageTypeEntity : DbEntity<FMessageTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Minute;
		
		private string _MessageType;
		
		private int _MessagesTally;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMinuteChanging(System.DateTime value);
    partial void OnMinuteChanged();
    partial void OnMessageTypeChanging(string value);
    partial void OnMessageTypeChanged();
    partial void OnMessagesTallyChanging(int value);
    partial void OnMessagesTallyChanged();
    #endregion
		
		public FMessageTypeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageType", DbType="NVarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MessageType
		{
			get
			{
				return this._MessageType;
			}
			set
			{
				if ((this._MessageType != value))
				{
					this.OnMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._MessageType = value;
					this.SendPropertyChanged("MessageType");
					this.OnMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessagesTally", DbType="Int NOT NULL")]
		public int MessagesTally
		{
			get
			{
				return this._MessagesTally;
			}
			set
			{
				if ((this._MessagesTally != value))
				{
					this.OnMessagesTallyChanging(value);
					this.SendPropertyChanging();
					this._MessagesTally = value;
					this.SendPropertyChanged("MessagesTally");
					this.OnMessagesTallyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fPaymentCollection")]
	public partial class FPaymentCollectionEntity : DbEntity<FPaymentCollectionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCollectionSkey;
		
		private int _DateSKey;
		
		private int _ApplicationSKey;
		
		private short _PaymentCollectionTypeSKey;
		
		private short _PaymentCollectionAgencySKey;
		
		private int _PaymentCollectionStartDateSKey;
		
		private short _PaymentCollectionStatusSKey;
		
		private int _BankAccountSkey;
		
		private int _PaymentCardSkey;
		
		private short _CurrencySKey;
		
		private decimal _FRequestAmount;
		
		private decimal _FReceivedAmount;
		
		private System.Nullable<int> _SuccessDateSKey;
		
		private int _PaymentCollectionEndDateSKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<long> _UpdatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _PaymentCollectionStartDateSKeyBi_Date;
		
		private EntityRef<DateEntity> _PaymentCollectionEndDateSKeyBi_Date;
		
		private EntityRef<PaymentCollectionEntity> _PaymentCollectionEntity;
		
		private EntityRef<PaymentCollectionAgencyEntity> _PaymentCollectionAgencyEntity;
		
		private EntityRef<PaymentCollectionStatus> _PaymentCollectionStatus;
		
		private EntityRef<PaymentCollectionTypeEntity> _PaymentCollectionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCollectionSkeyChanging(int value);
    partial void OnPaymentCollectionSkeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnPaymentCollectionTypeSKeyChanging(short value);
    partial void OnPaymentCollectionTypeSKeyChanged();
    partial void OnPaymentCollectionAgencySKeyChanging(short value);
    partial void OnPaymentCollectionAgencySKeyChanged();
    partial void OnPaymentCollectionStartDateSKeyChanging(int value);
    partial void OnPaymentCollectionStartDateSKeyChanged();
    partial void OnPaymentCollectionStatusSKeyChanging(short value);
    partial void OnPaymentCollectionStatusSKeyChanged();
    partial void OnBankAccountSkeyChanging(int value);
    partial void OnBankAccountSkeyChanged();
    partial void OnPaymentCardSkeyChanging(int value);
    partial void OnPaymentCardSkeyChanged();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnFRequestAmountChanging(decimal value);
    partial void OnFRequestAmountChanged();
    partial void OnFReceivedAmountChanging(decimal value);
    partial void OnFReceivedAmountChanged();
    partial void OnSuccessDateSKeyChanging(System.Nullable<int> value);
    partial void OnSuccessDateSKeyChanged();
    partial void OnPaymentCollectionEndDateSKeyChanging(int value);
    partial void OnPaymentCollectionEndDateSKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(System.Nullable<long> value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FPaymentCollectionEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._PaymentCollectionStartDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCollectionEndDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCollectionEntity = default(EntityRef<PaymentCollectionEntity>);
			this._PaymentCollectionAgencyEntity = default(EntityRef<PaymentCollectionAgencyEntity>);
			this._PaymentCollectionStatus = default(EntityRef<PaymentCollectionStatus>);
			this._PaymentCollectionTypeEntity = default(EntityRef<PaymentCollectionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionSkey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCollectionSkey
		{
			get
			{
				return this._PaymentCollectionSkey;
			}
			set
			{
				if ((this._PaymentCollectionSkey != value))
				{
					if (this._PaymentCollectionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionSkeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionSkey = value;
					this.SendPropertyChanged("PaymentCollectionSkey");
					this.OnPaymentCollectionSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionTypeSKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionTypeSKey
		{
			get
			{
				return this._PaymentCollectionTypeSKey;
			}
			set
			{
				if ((this._PaymentCollectionTypeSKey != value))
				{
					if (this._PaymentCollectionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionTypeSKey = value;
					this.SendPropertyChanged("PaymentCollectionTypeSKey");
					this.OnPaymentCollectionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionAgencySKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionAgencySKey
		{
			get
			{
				return this._PaymentCollectionAgencySKey;
			}
			set
			{
				if ((this._PaymentCollectionAgencySKey != value))
				{
					if (this._PaymentCollectionAgencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionAgencySKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionAgencySKey = value;
					this.SendPropertyChanged("PaymentCollectionAgencySKey");
					this.OnPaymentCollectionAgencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionStartDateSKey", DbType="Int NOT NULL")]
		public int PaymentCollectionStartDateSKey
		{
			get
			{
				return this._PaymentCollectionStartDateSKey;
			}
			set
			{
				if ((this._PaymentCollectionStartDateSKey != value))
				{
					if (this._PaymentCollectionStartDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionStartDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionStartDateSKey = value;
					this.SendPropertyChanged("PaymentCollectionStartDateSKey");
					this.OnPaymentCollectionStartDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionStatusSKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionStatusSKey
		{
			get
			{
				return this._PaymentCollectionStatusSKey;
			}
			set
			{
				if ((this._PaymentCollectionStatusSKey != value))
				{
					if (this._PaymentCollectionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionStatusSKey = value;
					this.SendPropertyChanged("PaymentCollectionStatusSKey");
					this.OnPaymentCollectionStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountSkey", DbType="Int NOT NULL")]
		public int BankAccountSkey
		{
			get
			{
				return this._BankAccountSkey;
			}
			set
			{
				if ((this._BankAccountSkey != value))
				{
					this.OnBankAccountSkeyChanging(value);
					this.SendPropertyChanging();
					this._BankAccountSkey = value;
					this.SendPropertyChanged("BankAccountSkey");
					this.OnBankAccountSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSkey", DbType="Int NOT NULL")]
		public int PaymentCardSkey
		{
			get
			{
				return this._PaymentCardSkey;
			}
			set
			{
				if ((this._PaymentCardSkey != value))
				{
					this.OnPaymentCardSkeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSkey = value;
					this.SendPropertyChanged("PaymentCardSkey");
					this.OnPaymentCardSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL")]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fRequestAmount", Storage="_FRequestAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FRequestAmount
		{
			get
			{
				return this._FRequestAmount;
			}
			set
			{
				if ((this._FRequestAmount != value))
				{
					this.OnFRequestAmountChanging(value);
					this.SendPropertyChanging();
					this._FRequestAmount = value;
					this.SendPropertyChanged("FRequestAmount");
					this.OnFRequestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fReceivedAmount", Storage="_FReceivedAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FReceivedAmount
		{
			get
			{
				return this._FReceivedAmount;
			}
			set
			{
				if ((this._FReceivedAmount != value))
				{
					this.OnFReceivedAmountChanging(value);
					this.SendPropertyChanging();
					this._FReceivedAmount = value;
					this.SendPropertyChanged("FReceivedAmount");
					this.OnFReceivedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessDateSKey", DbType="Int")]
		public System.Nullable<int> SuccessDateSKey
		{
			get
			{
				return this._SuccessDateSKey;
			}
			set
			{
				if ((this._SuccessDateSKey != value))
				{
					this.OnSuccessDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._SuccessDateSKey = value;
					this.SendPropertyChanged("SuccessDateSKey");
					this.OnSuccessDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionEndDateSKey", DbType="Int NOT NULL")]
		public int PaymentCollectionEndDateSKey
		{
			get
			{
				return this._PaymentCollectionEndDateSKey;
			}
			set
			{
				if ((this._PaymentCollectionEndDateSKey != value))
				{
					if (this._PaymentCollectionEndDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionEndDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionEndDateSKey = value;
					this.SendPropertyChanged("PaymentCollectionEndDateSKey");
					this.OnPaymentCollectionEndDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt")]
		public System.Nullable<long> UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FPaymentCollections.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollections.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FPaymentCollections.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollections.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biDate_1", Storage="_PaymentCollectionStartDateSKeyBi_Date", ThisKey="PaymentCollectionStartDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity PaymentCollectionStartDateSKeyBi_Date
		{
			get
			{
				return this._PaymentCollectionStartDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._PaymentCollectionStartDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionStartDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionStartDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FPaymentCollections.Remove(this);
					}
					this._PaymentCollectionStartDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FPaymentCollections.Add(this);
						this._PaymentCollectionStartDateSKey = value.DateSKey;
					}
					else
					{
						this._PaymentCollectionStartDateSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCollectionStartDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_bidate_2", Storage="_PaymentCollectionEndDateSKeyBi_Date", ThisKey="PaymentCollectionEndDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity PaymentCollectionEndDateSKeyBi_Date
		{
			get
			{
				return this._PaymentCollectionEndDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._PaymentCollectionEndDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionEndDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionEndDateSKeyBi_Date.Entity = null;
						previousValue.BifPaymentCollection_REF_bidate_2s.Remove(this);
					}
					this._PaymentCollectionEndDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.BifPaymentCollection_REF_bidate_2s.Add(this);
						this._PaymentCollectionEndDateSKey = value.DateSKey;
					}
					else
					{
						this._PaymentCollectionEndDateSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCollectionEndDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollection", Storage="_PaymentCollectionEntity", ThisKey="PaymentCollectionSkey", OtherKey="PaymentCollectionSKey", IsForeignKey=true)]
		public PaymentCollectionEntity PaymentCollectionEntity
		{
			get
			{
				return this._PaymentCollectionEntity.Entity;
			}
			set
			{
				PaymentCollectionEntity previousValue = this._PaymentCollectionEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionEntity.Entity = null;
						previousValue.FPaymentCollectionEntity = null;
					}
					this._PaymentCollectionEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollectionEntity = this;
						this._PaymentCollectionSkey = value.PaymentCollectionSKey;
					}
					else
					{
						this._PaymentCollectionSkey = default(int);
					}
					this.SendPropertyChanged("PaymentCollectionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionAgency", Storage="_PaymentCollectionAgencyEntity", ThisKey="PaymentCollectionAgencySKey", OtherKey="PaymentCollectionAgencySKey", IsForeignKey=true)]
		public PaymentCollectionAgencyEntity PaymentCollectionAgencyEntity
		{
			get
			{
				return this._PaymentCollectionAgencyEntity.Entity;
			}
			set
			{
				PaymentCollectionAgencyEntity previousValue = this._PaymentCollectionAgencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionAgencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionAgencyEntity.Entity = null;
						previousValue.FPaymentCollections.Remove(this);
					}
					this._PaymentCollectionAgencyEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollections.Add(this);
						this._PaymentCollectionAgencySKey = value.PaymentCollectionAgencySKey;
					}
					else
					{
						this._PaymentCollectionAgencySKey = default(short);
					}
					this.SendPropertyChanged("PaymentCollectionAgencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionStatus", Storage="_PaymentCollectionStatus", ThisKey="PaymentCollectionStatusSKey", OtherKey="PaymentCollectionStatusSKey", IsForeignKey=true)]
		public PaymentCollectionStatus PaymentCollectionStatus
		{
			get
			{
				return this._PaymentCollectionStatus.Entity;
			}
			set
			{
				PaymentCollectionStatus previousValue = this._PaymentCollectionStatus.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionStatus.Entity = null;
						previousValue.FPaymentCollections.Remove(this);
					}
					this._PaymentCollectionStatus.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollections.Add(this);
						this._PaymentCollectionStatusSKey = value.PaymentCollectionStatusSKey;
					}
					else
					{
						this._PaymentCollectionStatusSKey = default(short);
					}
					this.SendPropertyChanged("PaymentCollectionStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionType", Storage="_PaymentCollectionTypeEntity", ThisKey="PaymentCollectionTypeSKey", OtherKey="PaymentCollectionTypeSKey", IsForeignKey=true)]
		public PaymentCollectionTypeEntity PaymentCollectionTypeEntity
		{
			get
			{
				return this._PaymentCollectionTypeEntity.Entity;
			}
			set
			{
				PaymentCollectionTypeEntity previousValue = this._PaymentCollectionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionTypeEntity.Entity = null;
						previousValue.FPaymentCollections.Remove(this);
					}
					this._PaymentCollectionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentCollections.Add(this);
						this._PaymentCollectionTypeSKey = value.PaymentCollectionTypeSKey;
					}
					else
					{
						this._PaymentCollectionTypeSKey = default(short);
					}
					this.SendPropertyChanged("PaymentCollectionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fPaymentSentMessage")]
	public partial class FPaymentSentMessageEntity : DbEntity<FPaymentSentMessageEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSKey;
		
		private long _PaymentReference;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSKeyChanging(int value);
    partial void OnTransactionSKeyChanged();
    partial void OnPaymentReferenceChanging(long value);
    partial void OnPaymentReferenceChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FPaymentSentMessageEntity()
		{
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSKey
		{
			get
			{
				return this._TransactionSKey;
			}
			set
			{
				if ((this._TransactionSKey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSKey = value;
					this.SendPropertyChanged("TransactionSKey");
					this.OnTransactionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReference", DbType="BigInt NOT NULL")]
		public long PaymentReference
		{
			get
			{
				return this._PaymentReference;
			}
			set
			{
				if ((this._PaymentReference != value))
				{
					this.OnPaymentReferenceChanging(value);
					this.SendPropertyChanging();
					this._PaymentReference = value;
					this.SendPropertyChanged("PaymentReference");
					this.OnPaymentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentSentMessage_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FPaymentSentMessageEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FPaymentSentMessageEntity = this;
						this._TransactionSKey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSKey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fRepayLoan")]
	public partial class FRepayLoanEntity : DbEntity<FRepayLoanEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _RepaymentRequestSKey;
		
		private int _PaymentCardSKey;
		
		private int _DateSKey;
		
		private decimal _FRepayAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
		private EntityRef<RepaymentRequestEntity> _RepaymentRequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnRepaymentRequestSKeyChanging(int value);
    partial void OnRepaymentRequestSKeyChanged();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFRepayAmountChanging(decimal value);
    partial void OnFRepayAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FRepayLoanEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			this._RepaymentRequestEntity = default(EntityRef<RepaymentRequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RepaymentRequestSKey
		{
			get
			{
				return this._RepaymentRequestSKey;
			}
			set
			{
				if ((this._RepaymentRequestSKey != value))
				{
					if (this._RepaymentRequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentRequestSKeyChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestSKey = value;
					this.SendPropertyChanged("RepaymentRequestSKey");
					this.OnRepaymentRequestSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fRepayAmount", Storage="_FRepayAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FRepayAmount
		{
			get
			{
				return this._FRepayAmount;
			}
			set
			{
				if ((this._FRepayAmount != value))
				{
					this.OnFRepayAmountChanging(value);
					this.SendPropertyChanging();
					this._FRepayAmount = value;
					this.SendPropertyChanged("FRepayAmount");
					this.OnFRepayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FRepayLoans.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FRepayLoans.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FRepayLoans.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FRepayLoans.Add(this);
						this._PaymentCardSKey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biRepaymentRequest", Storage="_RepaymentRequestEntity", ThisKey="RepaymentRequestSKey", OtherKey="RepaymentRequestSKey", IsForeignKey=true)]
		public RepaymentRequestEntity RepaymentRequestEntity
		{
			get
			{
				return this._RepaymentRequestEntity.Entity;
			}
			set
			{
				RepaymentRequestEntity previousValue = this._RepaymentRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RepaymentRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepaymentRequestEntity.Entity = null;
						previousValue.FRepayLoans.Remove(this);
					}
					this._RepaymentRequestEntity.Entity = value;
					if ((value != null))
					{
						value.FRepayLoans.Add(this);
						this._RepaymentRequestSKey = value.RepaymentRequestSKey;
					}
					else
					{
						this._RepaymentRequestSKey = default(int);
					}
					this.SendPropertyChanged("RepaymentRequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fSignApplication")]
	public partial class FSignApplicationEntity : DbEntity<FSignApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _FSignApplication;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFSignApplicationChanging(byte value);
    partial void OnFSignApplicationChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FSignApplicationEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignApplication", Storage="_FSignApplication", DbType="TinyInt NOT NULL")]
		public byte FSignApplication
		{
			get
			{
				return this._FSignApplication;
			}
			set
			{
				if ((this._FSignApplication != value))
				{
					this.OnFSignApplicationChanging(value);
					this.SendPropertyChanging();
					this._FSignApplication = value;
					this.SendPropertyChanged("FSignApplication");
					this.OnFSignApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FSignApplications.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FSignApplications.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FSignApplications.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FSignApplications.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignApplication_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FSignApplications.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FSignApplications.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fSignFixedTermLoanExtension")]
	public partial class FSignFixedTermLoanExtensionEntity : DbEntity<FSignFixedTermLoanExtensionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanExtensionSKey;
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private int _ExtendDateSKey;
		
		private byte _FSignFixedTermLoanExtension;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _ExtendDateSKeyBi_Date;
		
		private EntityRef<FixedTermLoanExtensionEntity> _FixedTermLoanExtensionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanExtensionSKeyChanging(int value);
    partial void OnFixedTermLoanExtensionSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnExtendDateSKeyChanging(int value);
    partial void OnExtendDateSKeyChanged();
    partial void OnFSignFixedTermLoanExtensionChanging(byte value);
    partial void OnFSignFixedTermLoanExtensionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FSignFixedTermLoanExtensionEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._ExtendDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._FixedTermLoanExtensionEntity = default(EntityRef<FixedTermLoanExtensionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanExtensionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FixedTermLoanExtensionSKey
		{
			get
			{
				return this._FixedTermLoanExtensionSKey;
			}
			set
			{
				if ((this._FixedTermLoanExtensionSKey != value))
				{
					if (this._FixedTermLoanExtensionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFixedTermLoanExtensionSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanExtensionSKey = value;
					this.SendPropertyChanged("FixedTermLoanExtensionSKey");
					this.OnFixedTermLoanExtensionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendDateSKey", DbType="Int NOT NULL")]
		public int ExtendDateSKey
		{
			get
			{
				return this._ExtendDateSKey;
			}
			set
			{
				if ((this._ExtendDateSKey != value))
				{
					if (this._ExtendDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._ExtendDateSKey = value;
					this.SendPropertyChanged("ExtendDateSKey");
					this.OnExtendDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignFixedTermLoanExtension", Storage="_FSignFixedTermLoanExtension", DbType="TinyInt NOT NULL")]
		public byte FSignFixedTermLoanExtension
		{
			get
			{
				return this._FSignFixedTermLoanExtension;
			}
			set
			{
				if ((this._FSignFixedTermLoanExtension != value))
				{
					this.OnFSignFixedTermLoanExtensionChanging(value);
					this.SendPropertyChanging();
					this._FSignFixedTermLoanExtension = value;
					this.SendPropertyChanged("FSignFixedTermLoanExtension");
					this.OnFSignFixedTermLoanExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FSignFixedTermLoanExtensions.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanExtensions.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FSignFixedTermLoanExtensions.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanExtensions.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FSignFixedTermLoanExtensions.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanExtensions.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biDate_2", Storage="_ExtendDateSKeyBi_Date", ThisKey="ExtendDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity ExtendDateSKeyBi_Date
		{
			get
			{
				return this._ExtendDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._ExtendDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._ExtendDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtendDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FSignFixedTermLoanExtensions.Remove(this);
					}
					this._ExtendDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FSignFixedTermLoanExtensions.Add(this);
						this._ExtendDateSKey = value.DateSKey;
					}
					else
					{
						this._ExtendDateSKey = default(int);
					}
					this.SendPropertyChanged("ExtendDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanExtension_REF_biFixedTermLoanExtension", Storage="_FixedTermLoanExtensionEntity", ThisKey="FixedTermLoanExtensionSKey", OtherKey="FixedTermLoanExtensionSKey", IsForeignKey=true)]
		public FixedTermLoanExtensionEntity FixedTermLoanExtensionEntity
		{
			get
			{
				return this._FixedTermLoanExtensionEntity.Entity;
			}
			set
			{
				FixedTermLoanExtensionEntity previousValue = this._FixedTermLoanExtensionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanExtensionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanExtensionEntity.Entity = null;
						previousValue.FSignFixedTermLoanExtensionEntity = null;
					}
					this._FixedTermLoanExtensionEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanExtensionEntity = this;
						this._FixedTermLoanExtensionSKey = value.FixedTermLoanExtensionSKey;
					}
					else
					{
						this._FixedTermLoanExtensionSKey = default(int);
					}
					this.SendPropertyChanged("FixedTermLoanExtensionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fSignFixedTermLoanTopup")]
	public partial class FSignFixedTermLoanTopupEntity : DbEntity<FSignFixedTermLoanTopupEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FixedTermLoanTopupSKey;
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _DateSKey;
		
		private byte _FSignFixedTermLoanTopup;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<FixedTermLoanTopUpEntity> _FixedTermLoanTopUpEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFixedTermLoanTopupSKeyChanging(int value);
    partial void OnFixedTermLoanTopupSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFSignFixedTermLoanTopupChanging(byte value);
    partial void OnFSignFixedTermLoanTopupChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FSignFixedTermLoanTopupEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._FixedTermLoanTopUpEntity = default(EntityRef<FixedTermLoanTopUpEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedTermLoanTopupSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FixedTermLoanTopupSKey
		{
			get
			{
				return this._FixedTermLoanTopupSKey;
			}
			set
			{
				if ((this._FixedTermLoanTopupSKey != value))
				{
					if (this._FixedTermLoanTopUpEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFixedTermLoanTopupSKeyChanging(value);
					this.SendPropertyChanging();
					this._FixedTermLoanTopupSKey = value;
					this.SendPropertyChanged("FixedTermLoanTopupSKey");
					this.OnFixedTermLoanTopupSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fSignFixedTermLoanTopup", Storage="_FSignFixedTermLoanTopup", DbType="TinyInt NOT NULL")]
		public byte FSignFixedTermLoanTopup
		{
			get
			{
				return this._FSignFixedTermLoanTopup;
			}
			set
			{
				if ((this._FSignFixedTermLoanTopup != value))
				{
					this.OnFSignFixedTermLoanTopupChanging(value);
					this.SendPropertyChanging();
					this._FSignFixedTermLoanTopup = value;
					this.SendPropertyChanged("FSignFixedTermLoanTopup");
					this.OnFSignFixedTermLoanTopupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FSignFixedTermLoanTopups.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanTopups.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FSignFixedTermLoanTopups.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanTopups.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FSignFixedTermLoanTopups.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanTopups.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSignFixedTermLoanTopup_REF_biFixedTermLoanTopup", Storage="_FixedTermLoanTopUpEntity", ThisKey="FixedTermLoanTopupSKey", OtherKey="FixedTermLoanTopupSKey", IsForeignKey=true)]
		public FixedTermLoanTopUpEntity FixedTermLoanTopUpEntity
		{
			get
			{
				return this._FixedTermLoanTopUpEntity.Entity;
			}
			set
			{
				FixedTermLoanTopUpEntity previousValue = this._FixedTermLoanTopUpEntity.Entity;
				if (((previousValue != value) 
							|| (this._FixedTermLoanTopUpEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FixedTermLoanTopUpEntity.Entity = null;
						previousValue.FSignFixedTermLoanTopupEntity = null;
					}
					this._FixedTermLoanTopUpEntity.Entity = value;
					if ((value != null))
					{
						value.FSignFixedTermLoanTopupEntity = this;
						this._FixedTermLoanTopupSKey = value.FixedTermLoanTopupSKey;
					}
					else
					{
						this._FixedTermLoanTopupSKey = default(int);
					}
					this.SendPropertyChanged("FixedTermLoanTopUpEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fSubmitCounterOffer")]
	public partial class FSubmitCounterOfferEntity : DbEntity<FSubmitCounterOfferEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _AccountSKey;
		
		private int _UserActionSKey;
		
		private int _DateSKey;
		
		private decimal _FNewLoanAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<UserActionEntity> _UserActionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnUserActionSKeyChanging(int value);
    partial void OnUserActionSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFNewLoanAmountChanging(decimal value);
    partial void OnFNewLoanAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FSubmitCounterOfferEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._UserActionEntity = default(EntityRef<UserActionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionSKey", DbType="Int NOT NULL")]
		public int UserActionSKey
		{
			get
			{
				return this._UserActionSKey;
			}
			set
			{
				if ((this._UserActionSKey != value))
				{
					if (this._UserActionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserActionSKeyChanging(value);
					this.SendPropertyChanging();
					this._UserActionSKey = value;
					this.SendPropertyChanged("UserActionSKey");
					this.OnUserActionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fNewLoanAmount", Storage="_FNewLoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FNewLoanAmount
		{
			get
			{
				return this._FNewLoanAmount;
			}
			set
			{
				if ((this._FNewLoanAmount != value))
				{
					this.OnFNewLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._FNewLoanAmount = value;
					this.SendPropertyChanged("FNewLoanAmount");
					this.OnFNewLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FSubmitCounterOffers.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FSubmitCounterOffers.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FSubmitCounterOfferEntity = null;
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FSubmitCounterOfferEntity = this;
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biUserAction", Storage="_UserActionEntity", ThisKey="UserActionSKey", OtherKey="UserActionSKey", IsForeignKey=true)]
		public UserActionEntity UserActionEntity
		{
			get
			{
				return this._UserActionEntity.Entity;
			}
			set
			{
				UserActionEntity previousValue = this._UserActionEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserActionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserActionEntity.Entity = null;
						previousValue.FSubmitCounterOffers.Remove(this);
					}
					this._UserActionEntity.Entity = value;
					if ((value != null))
					{
						value.FSubmitCounterOffers.Add(this);
						this._UserActionSKey = value.UserActionSKey;
					}
					else
					{
						this._UserActionSKey = default(int);
					}
					this.SendPropertyChanged("UserActionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fTransactionLedger")]
	public partial class FTransactionLedgerEntity : DbEntity<FTransactionLedgerEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSKey;
		
		private int _ApplicationSKey;
		
		private int _DateSKey;
		
		private int _PostedDateSkey;
		
		private short _TransactionTypeSKey;
		
		private byte _TransactionScopeSKey;
		
		private short _CurrencySKey;
		
		private System.Nullable<short> _UserSKey;
		
		private decimal _FAmount;
		
		private decimal _FMir;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _PostedDateSkeyBi_Date;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<TransactionScopeEntity> _TransactionScopeEntity;
		
		private EntityRef<TransactionTypeEntity> _TransactionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSKeyChanging(int value);
    partial void OnTransactionSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnPostedDateSkeyChanging(int value);
    partial void OnPostedDateSkeyChanged();
    partial void OnTransactionTypeSKeyChanging(short value);
    partial void OnTransactionTypeSKeyChanged();
    partial void OnTransactionScopeSKeyChanging(byte value);
    partial void OnTransactionScopeSKeyChanged();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnUserSKeyChanging(System.Nullable<short> value);
    partial void OnUserSKeyChanged();
    partial void OnFAmountChanging(decimal value);
    partial void OnFAmountChanged();
    partial void OnFMirChanging(decimal value);
    partial void OnFMirChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FTransactionLedgerEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._PostedDateSkeyBi_Date = default(EntityRef<DateEntity>);
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._TransactionScopeEntity = default(EntityRef<TransactionScopeEntity>);
			this._TransactionTypeEntity = default(EntityRef<TransactionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSKey
		{
			get
			{
				return this._TransactionSKey;
			}
			set
			{
				if ((this._TransactionSKey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSKey = value;
					this.SendPropertyChanged("TransactionSKey");
					this.OnTransactionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDateSkey", DbType="Int NOT NULL")]
		public int PostedDateSkey
		{
			get
			{
				return this._PostedDateSkey;
			}
			set
			{
				if ((this._PostedDateSkey != value))
				{
					if (this._PostedDateSkeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostedDateSkeyChanging(value);
					this.SendPropertyChanging();
					this._PostedDateSkey = value;
					this.SendPropertyChanged("PostedDateSkey");
					this.OnPostedDateSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeSKey", DbType="SmallInt NOT NULL")]
		public short TransactionTypeSKey
		{
			get
			{
				return this._TransactionTypeSKey;
			}
			set
			{
				if ((this._TransactionTypeSKey != value))
				{
					if (this._TransactionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeSKey = value;
					this.SendPropertyChanged("TransactionTypeSKey");
					this.OnTransactionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionScopeSKey", DbType="TinyInt NOT NULL")]
		public byte TransactionScopeSKey
		{
			get
			{
				return this._TransactionScopeSKey;
			}
			set
			{
				if ((this._TransactionScopeSKey != value))
				{
					if (this._TransactionScopeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionScopeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionScopeSKey = value;
					this.SendPropertyChanged("TransactionScopeSKey");
					this.OnTransactionScopeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL")]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSKey", DbType="SmallInt")]
		public System.Nullable<short> UserSKey
		{
			get
			{
				return this._UserSKey;
			}
			set
			{
				if ((this._UserSKey != value))
				{
					this.OnUserSKeyChanging(value);
					this.SendPropertyChanging();
					this._UserSKey = value;
					this.SendPropertyChanged("UserSKey");
					this.OnUserSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fAmount", Storage="_FAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FAmount
		{
			get
			{
				return this._FAmount;
			}
			set
			{
				if ((this._FAmount != value))
				{
					this.OnFAmountChanging(value);
					this.SendPropertyChanging();
					this._FAmount = value;
					this.SendPropertyChanged("FAmount");
					this.OnFAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fMir", Storage="_FMir", DbType="Decimal(9,6) NOT NULL")]
		public decimal FMir
		{
			get
			{
				return this._FMir;
			}
			set
			{
				if ((this._FMir != value))
				{
					this.OnFMirChanging(value);
					this.SendPropertyChanging();
					this._FMir = value;
					this.SendPropertyChanged("FMir");
					this.OnFMirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FTransactionLedgers.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgers.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biCurrency", Storage="_CurrencyEntity", ThisKey="CurrencySKey", OtherKey="CurrencySKey", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.FTransactionLedgers.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgers.Add(this);
						this._CurrencySKey = value.CurrencySKey;
					}
					else
					{
						this._CurrencySKey = default(short);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FTransactionLedgers.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgers.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionledger_REF_biDate_2", Storage="_PostedDateSkeyBi_Date", ThisKey="PostedDateSkey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity PostedDateSkeyBi_Date
		{
			get
			{
				return this._PostedDateSkeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._PostedDateSkeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._PostedDateSkeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostedDateSkeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FTransactionLedgers.Remove(this);
					}
					this._PostedDateSkeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FTransactionLedgers.Add(this);
						this._PostedDateSkey = value.DateSKey;
					}
					else
					{
						this._PostedDateSkey = default(int);
					}
					this.SendPropertyChanged("PostedDateSkeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FTransactionLedgerEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgerEntity = this;
						this._TransactionSKey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSKey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransactionScope", Storage="_TransactionScopeEntity", ThisKey="TransactionScopeSKey", OtherKey="TransactionScopeSKey", IsForeignKey=true)]
		public TransactionScopeEntity TransactionScopeEntity
		{
			get
			{
				return this._TransactionScopeEntity.Entity;
			}
			set
			{
				TransactionScopeEntity previousValue = this._TransactionScopeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionScopeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionScopeEntity.Entity = null;
						previousValue.FTransactionLedgers.Remove(this);
					}
					this._TransactionScopeEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgers.Add(this);
						this._TransactionScopeSKey = value.TransactionScopeSKey;
					}
					else
					{
						this._TransactionScopeSKey = default(byte);
					}
					this.SendPropertyChanged("TransactionScopeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransactionType", Storage="_TransactionTypeEntity", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", IsForeignKey=true)]
		public TransactionTypeEntity TransactionTypeEntity
		{
			get
			{
				return this._TransactionTypeEntity.Entity;
			}
			set
			{
				TransactionTypeEntity previousValue = this._TransactionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionTypeEntity.Entity = null;
						previousValue.FTransactionLedgers.Remove(this);
					}
					this._TransactionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionLedgers.Add(this);
						this._TransactionTypeSKey = value.TransactionTypeSKey;
					}
					else
					{
						this._TransactionTypeSKey = default(short);
					}
					this.SendPropertyChanged("TransactionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fTransactionRequest")]
	public partial class FTransactionRequestEntity : DbEntity<FTransactionRequestEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSkey;
		
		private int _TransactionDateSKey;
		
		private int _ApplicationSKey;
		
		private int _TransactionScopeSKey;
		
		private short _PaymentCollectionTypeSKey;
		
		private short _PaymentCollectionAgencySKey;
		
		private short _TransactionStatusSKey;
		
		private int _BankAccountSkey;
		
		private int _PaymentCardSkey;
		
		private short _CurrencySKey;
		
		private decimal _FRequestAmount;
		
		private decimal _FReceivedAmount;
		
		private System.Nullable<int> _SuccessDateSKey;
		
		private System.Nullable<byte> _TrackingDays;
		
		private int _PaymentCollectionEndDateSKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<long> _UpdatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<BankAccountEntity> _BankAccountEntity;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _SuccessDateSKeyBi_Date;
		
		private EntityRef<DateEntity> _PaymentCollectionEndDateSKeyBi_Date;
		
		private EntityRef<PaymentCardEntity> _PaymentCardEntity;
		
		private EntityRef<PaymentCollectionAgencyEntity> _PaymentCollectionAgencyEntity;
		
		private EntityRef<PaymentCollectionTypeEntity> _PaymentCollectionTypeEntity;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<TransactionStatus> _TransactionStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSkeyChanging(int value);
    partial void OnTransactionSkeyChanged();
    partial void OnTransactionDateSKeyChanging(int value);
    partial void OnTransactionDateSKeyChanged();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnTransactionScopeSKeyChanging(int value);
    partial void OnTransactionScopeSKeyChanged();
    partial void OnPaymentCollectionTypeSKeyChanging(short value);
    partial void OnPaymentCollectionTypeSKeyChanged();
    partial void OnPaymentCollectionAgencySKeyChanging(short value);
    partial void OnPaymentCollectionAgencySKeyChanged();
    partial void OnTransactionStatusSKeyChanging(short value);
    partial void OnTransactionStatusSKeyChanged();
    partial void OnBankAccountSkeyChanging(int value);
    partial void OnBankAccountSkeyChanged();
    partial void OnPaymentCardSkeyChanging(int value);
    partial void OnPaymentCardSkeyChanged();
    partial void OnCurrencySKeyChanging(short value);
    partial void OnCurrencySKeyChanged();
    partial void OnFRequestAmountChanging(decimal value);
    partial void OnFRequestAmountChanged();
    partial void OnFReceivedAmountChanging(decimal value);
    partial void OnFReceivedAmountChanged();
    partial void OnSuccessDateSKeyChanging(System.Nullable<int> value);
    partial void OnSuccessDateSKeyChanged();
    partial void OnTrackingDaysChanging(System.Nullable<byte> value);
    partial void OnTrackingDaysChanged();
    partial void OnPaymentCollectionEndDateSKeyChanging(int value);
    partial void OnPaymentCollectionEndDateSKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(System.Nullable<long> value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FTransactionRequestEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._BankAccountEntity = default(EntityRef<BankAccountEntity>);
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._SuccessDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCollectionEndDateSKeyBi_Date = default(EntityRef<DateEntity>);
			this._PaymentCardEntity = default(EntityRef<PaymentCardEntity>);
			this._PaymentCollectionAgencyEntity = default(EntityRef<PaymentCollectionAgencyEntity>);
			this._PaymentCollectionTypeEntity = default(EntityRef<PaymentCollectionTypeEntity>);
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._TransactionStatus = default(EntityRef<TransactionStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSkey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSkey
		{
			get
			{
				return this._TransactionSkey;
			}
			set
			{
				if ((this._TransactionSkey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSkeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSkey = value;
					this.SendPropertyChanged("TransactionSkey");
					this.OnTransactionSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDateSKey", DbType="Int NOT NULL")]
		public int TransactionDateSKey
		{
			get
			{
				return this._TransactionDateSKey;
			}
			set
			{
				if ((this._TransactionDateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionDateSKey = value;
					this.SendPropertyChanged("TransactionDateSKey");
					this.OnTransactionDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL")]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionScopeSKey", DbType="Int NOT NULL")]
		public int TransactionScopeSKey
		{
			get
			{
				return this._TransactionScopeSKey;
			}
			set
			{
				if ((this._TransactionScopeSKey != value))
				{
					this.OnTransactionScopeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionScopeSKey = value;
					this.SendPropertyChanged("TransactionScopeSKey");
					this.OnTransactionScopeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionTypeSKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionTypeSKey
		{
			get
			{
				return this._PaymentCollectionTypeSKey;
			}
			set
			{
				if ((this._PaymentCollectionTypeSKey != value))
				{
					if (this._PaymentCollectionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionTypeSKey = value;
					this.SendPropertyChanged("PaymentCollectionTypeSKey");
					this.OnPaymentCollectionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionAgencySKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionAgencySKey
		{
			get
			{
				return this._PaymentCollectionAgencySKey;
			}
			set
			{
				if ((this._PaymentCollectionAgencySKey != value))
				{
					if (this._PaymentCollectionAgencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionAgencySKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionAgencySKey = value;
					this.SendPropertyChanged("PaymentCollectionAgencySKey");
					this.OnPaymentCollectionAgencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatusSKey", DbType="SmallInt NOT NULL")]
		public short TransactionStatusSKey
		{
			get
			{
				return this._TransactionStatusSKey;
			}
			set
			{
				if ((this._TransactionStatusSKey != value))
				{
					if (this._TransactionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatusSKey = value;
					this.SendPropertyChanged("TransactionStatusSKey");
					this.OnTransactionStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountSkey", DbType="Int NOT NULL")]
		public int BankAccountSkey
		{
			get
			{
				return this._BankAccountSkey;
			}
			set
			{
				if ((this._BankAccountSkey != value))
				{
					if (this._BankAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountSkeyChanging(value);
					this.SendPropertyChanging();
					this._BankAccountSkey = value;
					this.SendPropertyChanged("BankAccountSkey");
					this.OnBankAccountSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSkey", DbType="Int NOT NULL")]
		public int PaymentCardSkey
		{
			get
			{
				return this._PaymentCardSkey;
			}
			set
			{
				if ((this._PaymentCardSkey != value))
				{
					if (this._PaymentCardEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCardSkeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSkey = value;
					this.SendPropertyChanged("PaymentCardSkey");
					this.OnPaymentCardSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySKey", DbType="SmallInt NOT NULL")]
		public short CurrencySKey
		{
			get
			{
				return this._CurrencySKey;
			}
			set
			{
				if ((this._CurrencySKey != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencySKeyChanging(value);
					this.SendPropertyChanging();
					this._CurrencySKey = value;
					this.SendPropertyChanged("CurrencySKey");
					this.OnCurrencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fRequestAmount", Storage="_FRequestAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FRequestAmount
		{
			get
			{
				return this._FRequestAmount;
			}
			set
			{
				if ((this._FRequestAmount != value))
				{
					this.OnFRequestAmountChanging(value);
					this.SendPropertyChanging();
					this._FRequestAmount = value;
					this.SendPropertyChanged("FRequestAmount");
					this.OnFRequestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fReceivedAmount", Storage="_FReceivedAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FReceivedAmount
		{
			get
			{
				return this._FReceivedAmount;
			}
			set
			{
				if ((this._FReceivedAmount != value))
				{
					this.OnFReceivedAmountChanging(value);
					this.SendPropertyChanging();
					this._FReceivedAmount = value;
					this.SendPropertyChanged("FReceivedAmount");
					this.OnFReceivedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessDateSKey", DbType="Int")]
		public System.Nullable<int> SuccessDateSKey
		{
			get
			{
				return this._SuccessDateSKey;
			}
			set
			{
				if ((this._SuccessDateSKey != value))
				{
					if (this._SuccessDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSuccessDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._SuccessDateSKey = value;
					this.SendPropertyChanged("SuccessDateSKey");
					this.OnSuccessDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDays", DbType="TinyInt")]
		public System.Nullable<byte> TrackingDays
		{
			get
			{
				return this._TrackingDays;
			}
			set
			{
				if ((this._TrackingDays != value))
				{
					this.OnTrackingDaysChanging(value);
					this.SendPropertyChanging();
					this._TrackingDays = value;
					this.SendPropertyChanged("TrackingDays");
					this.OnTrackingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionEndDateSKey", DbType="Int NOT NULL")]
		public int PaymentCollectionEndDateSKey
		{
			get
			{
				return this._PaymentCollectionEndDateSKey;
			}
			set
			{
				if ((this._PaymentCollectionEndDateSKey != value))
				{
					if (this._PaymentCollectionEndDateSKeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCollectionEndDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionEndDateSKey = value;
					this.SendPropertyChanged("PaymentCollectionEndDateSKey");
					this.OnPaymentCollectionEndDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt")]
		public System.Nullable<long> UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biBankAccount", Storage="_BankAccountEntity", ThisKey="BankAccountSkey", OtherKey="BankAccountSKey", IsForeignKey=true)]
		public BankAccountEntity BankAccountEntity
		{
			get
			{
				return this._BankAccountEntity.Entity;
			}
			set
			{
				BankAccountEntity previousValue = this._BankAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccountEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._BankAccountEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._BankAccountSkey = value.BankAccountSKey;
					}
					else
					{
						this._BankAccountSkey = default(int);
					}
					this.SendPropertyChanged("BankAccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biCurrency", Storage="_CurrencyEntity", ThisKey="CurrencySKey", OtherKey="CurrencySKey", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._CurrencySKey = value.CurrencySKey;
					}
					else
					{
						this._CurrencySKey = default(short);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate", Storage="_DateEntity", ThisKey="TransactionDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._TransactionDateSKey = value.DateSKey;
					}
					else
					{
						this._TransactionDateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate_1", Storage="_SuccessDateSKeyBi_Date", ThisKey="SuccessDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity SuccessDateSKeyBi_Date
		{
			get
			{
				return this._SuccessDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._SuccessDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._SuccessDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuccessDateSKeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FTransactionRequests.Remove(this);
					}
					this._SuccessDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FTransactionRequests.Add(this);
						this._SuccessDateSKey = value.DateSKey;
					}
					else
					{
						this._SuccessDateSKey = default(Nullable<int>);
					}
					this.SendPropertyChanged("SuccessDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biDate_2", Storage="_PaymentCollectionEndDateSKeyBi_Date", ThisKey="PaymentCollectionEndDateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity PaymentCollectionEndDateSKeyBi_Date
		{
			get
			{
				return this._PaymentCollectionEndDateSKeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._PaymentCollectionEndDateSKeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionEndDateSKeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionEndDateSKeyBi_Date.Entity = null;
						previousValue.BifTransactionRequest_REF_biDate_2s.Remove(this);
					}
					this._PaymentCollectionEndDateSKeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.BifTransactionRequest_REF_biDate_2s.Add(this);
						this._PaymentCollectionEndDateSKey = value.DateSKey;
					}
					else
					{
						this._PaymentCollectionEndDateSKey = default(int);
					}
					this.SendPropertyChanged("PaymentCollectionEndDateSKeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCard", Storage="_PaymentCardEntity", ThisKey="PaymentCardSkey", OtherKey="PaymentCardSKey", IsForeignKey=true)]
		public PaymentCardEntity PaymentCardEntity
		{
			get
			{
				return this._PaymentCardEntity.Entity;
			}
			set
			{
				PaymentCardEntity previousValue = this._PaymentCardEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCardEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCardEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._PaymentCardEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._PaymentCardSkey = value.PaymentCardSKey;
					}
					else
					{
						this._PaymentCardSkey = default(int);
					}
					this.SendPropertyChanged("PaymentCardEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCollectionAgency", Storage="_PaymentCollectionAgencyEntity", ThisKey="PaymentCollectionAgencySKey", OtherKey="PaymentCollectionAgencySKey", IsForeignKey=true)]
		public PaymentCollectionAgencyEntity PaymentCollectionAgencyEntity
		{
			get
			{
				return this._PaymentCollectionAgencyEntity.Entity;
			}
			set
			{
				PaymentCollectionAgencyEntity previousValue = this._PaymentCollectionAgencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionAgencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionAgencyEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._PaymentCollectionAgencyEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._PaymentCollectionAgencySKey = value.PaymentCollectionAgencySKey;
					}
					else
					{
						this._PaymentCollectionAgencySKey = default(short);
					}
					this.SendPropertyChanged("PaymentCollectionAgencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCollectionType", Storage="_PaymentCollectionTypeEntity", ThisKey="PaymentCollectionTypeSKey", OtherKey="PaymentCollectionTypeSKey", IsForeignKey=true)]
		public PaymentCollectionTypeEntity PaymentCollectionTypeEntity
		{
			get
			{
				return this._PaymentCollectionTypeEntity.Entity;
			}
			set
			{
				PaymentCollectionTypeEntity previousValue = this._PaymentCollectionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PaymentCollectionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentCollectionTypeEntity.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._PaymentCollectionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._PaymentCollectionTypeSKey = value.PaymentCollectionTypeSKey;
					}
					else
					{
						this._PaymentCollectionTypeSKey = default(short);
					}
					this.SendPropertyChanged("PaymentCollectionTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSkey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FTransactionRequestEntity = null;
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequestEntity = this;
						this._TransactionSkey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSkey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biTransactionStatus", Storage="_TransactionStatus", ThisKey="TransactionStatusSKey", OtherKey="TransactionStatusSKey", IsForeignKey=true)]
		public TransactionStatus TransactionStatus
		{
			get
			{
				return this._TransactionStatus.Entity;
			}
			set
			{
				TransactionStatus previousValue = this._TransactionStatus.Entity;
				if (((previousValue != value) 
							|| (this._TransactionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionStatus.Entity = null;
						previousValue.FTransactionRequests.Remove(this);
					}
					this._TransactionStatus.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequests.Add(this);
						this._TransactionStatusSKey = value.TransactionStatusSKey;
					}
					else
					{
						this._TransactionStatusSKey = default(short);
					}
					this.SendPropertyChanged("TransactionStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fTransactionRequestDetails")]
	public partial class FTransactionRequestDetailEntity : DbEntity<FTransactionRequestDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSkey;
		
		private int _DateSKey;
		
		private short _TransactionStatusSKey;
		
		private decimal _FReceivedAmount;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<long> _UpdatedByMessageArchiveId;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<TransactionEntity> _TransactionEntity;
		
		private EntityRef<TransactionStatus> _TransactionStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSkeyChanging(int value);
    partial void OnTransactionSkeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnTransactionStatusSKeyChanging(short value);
    partial void OnTransactionStatusSKeyChanged();
    partial void OnFReceivedAmountChanging(decimal value);
    partial void OnFReceivedAmountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(System.Nullable<long> value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public FTransactionRequestDetailEntity()
		{
			this._DateEntity = default(EntityRef<DateEntity>);
			this._TransactionEntity = default(EntityRef<TransactionEntity>);
			this._TransactionStatus = default(EntityRef<TransactionStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSkey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionSkey
		{
			get
			{
				return this._TransactionSkey;
			}
			set
			{
				if ((this._TransactionSkey != value))
				{
					if (this._TransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSkeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSkey = value;
					this.SendPropertyChanged("TransactionSkey");
					this.OnTransactionSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatusSKey", DbType="SmallInt NOT NULL")]
		public short TransactionStatusSKey
		{
			get
			{
				return this._TransactionStatusSKey;
			}
			set
			{
				if ((this._TransactionStatusSKey != value))
				{
					if (this._TransactionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatusSKey = value;
					this.SendPropertyChanged("TransactionStatusSKey");
					this.OnTransactionStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fReceivedAmount", Storage="_FReceivedAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal FReceivedAmount
		{
			get
			{
				return this._FReceivedAmount;
			}
			set
			{
				if ((this._FReceivedAmount != value))
				{
					this.OnFReceivedAmountChanging(value);
					this.SendPropertyChanging();
					this._FReceivedAmount = value;
					this.SendPropertyChanged("FReceivedAmount");
					this.OnFReceivedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt")]
		public System.Nullable<long> UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FTransactionRequestDetails.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequestDetails.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biTransaction", Storage="_TransactionEntity", ThisKey="TransactionSkey", OtherKey="TransactionSKey", IsForeignKey=true)]
		public TransactionEntity TransactionEntity
		{
			get
			{
				return this._TransactionEntity.Entity;
			}
			set
			{
				TransactionEntity previousValue = this._TransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionEntity.Entity = null;
						previousValue.FTransactionRequestDetails.Remove(this);
					}
					this._TransactionEntity.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequestDetails.Add(this);
						this._TransactionSkey = value.TransactionSKey;
					}
					else
					{
						this._TransactionSkey = default(int);
					}
					this.SendPropertyChanged("TransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biTransactionStatus", Storage="_TransactionStatus", ThisKey="TransactionStatusSKey", OtherKey="TransactionStatusSKey", IsForeignKey=true)]
		public TransactionStatus TransactionStatus
		{
			get
			{
				return this._TransactionStatus.Entity;
			}
			set
			{
				TransactionStatus previousValue = this._TransactionStatus.Entity;
				if (((previousValue != value) 
							|| (this._TransactionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionStatus.Entity = null;
						previousValue.FTransactionRequestDetails.Remove(this);
					}
					this._TransactionStatus.Entity = value;
					if ((value != null))
					{
						value.FTransactionRequestDetails.Add(this);
						this._TransactionStatusSKey = value.TransactionStatusSKey;
					}
					else
					{
						this._TransactionStatusSKey = default(short);
					}
					this.SendPropertyChanged("TransactionStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fTransunionResponse")]
	public partial class FTransunionResponseEntity : DbEntity<FTransunionResponseEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransunionResponseSKey;
		
		private int _TransunionConsumerSKey;
		
		private int _AccountSKey;
		
		private int _TransunionSagaSKey;
		
		private int _DateSKey;
		
		private int _TransunionResponseStatusSkey;
		
		private int _ProcessingStartDateSkey;
		
		private System.Xml.Linq.XElement _ResponseXML;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<AccountEntity> _AccountEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
		private EntityRef<DateEntity> _ProcessingStartDateSkeyBi_Date;
		
		private EntityRef<TransunionConsumerEntity> _TransunionConsumerEntity;
		
		private EntityRef<TransunionResponseEntity> _TransunionResponseEntity;
		
		private EntityRef<TransunionResponseStatus> _TransunionResponseStatus;
		
		private EntityRef<TransunionSagaEntity> _TransunionSagaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransunionResponseSKeyChanging(int value);
    partial void OnTransunionResponseSKeyChanged();
    partial void OnTransunionConsumerSKeyChanging(int value);
    partial void OnTransunionConsumerSKeyChanged();
    partial void OnAccountSKeyChanging(int value);
    partial void OnAccountSKeyChanged();
    partial void OnTransunionSagaSKeyChanging(int value);
    partial void OnTransunionSagaSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnTransunionResponseStatusSkeyChanging(int value);
    partial void OnTransunionResponseStatusSkeyChanged();
    partial void OnProcessingStartDateSkeyChanging(int value);
    partial void OnProcessingStartDateSkeyChanged();
    partial void OnResponseXMLChanging(System.Xml.Linq.XElement value);
    partial void OnResponseXMLChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FTransunionResponseEntity()
		{
			this._AccountEntity = default(EntityRef<AccountEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			this._ProcessingStartDateSkeyBi_Date = default(EntityRef<DateEntity>);
			this._TransunionConsumerEntity = default(EntityRef<TransunionConsumerEntity>);
			this._TransunionResponseEntity = default(EntityRef<TransunionResponseEntity>);
			this._TransunionResponseStatus = default(EntityRef<TransunionResponseStatus>);
			this._TransunionSagaEntity = default(EntityRef<TransunionSagaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransunionResponseSKey
		{
			get
			{
				return this._TransunionResponseSKey;
			}
			set
			{
				if ((this._TransunionResponseSKey != value))
				{
					if (this._TransunionResponseEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransunionResponseSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseSKey = value;
					this.SendPropertyChanged("TransunionResponseSKey");
					this.OnTransunionResponseSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionConsumerSKey", DbType="Int NOT NULL")]
		public int TransunionConsumerSKey
		{
			get
			{
				return this._TransunionConsumerSKey;
			}
			set
			{
				if ((this._TransunionConsumerSKey != value))
				{
					if (this._TransunionConsumerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransunionConsumerSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionConsumerSKey = value;
					this.SendPropertyChanged("TransunionConsumerSKey");
					this.OnTransunionConsumerSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountSKey", DbType="Int NOT NULL")]
		public int AccountSKey
		{
			get
			{
				return this._AccountSKey;
			}
			set
			{
				if ((this._AccountSKey != value))
				{
					if (this._AccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountSKeyChanging(value);
					this.SendPropertyChanging();
					this._AccountSKey = value;
					this.SendPropertyChanged("AccountSKey");
					this.OnAccountSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionSagaSKey", DbType="Int NOT NULL")]
		public int TransunionSagaSKey
		{
			get
			{
				return this._TransunionSagaSKey;
			}
			set
			{
				if ((this._TransunionSagaSKey != value))
				{
					if (this._TransunionSagaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransunionSagaSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionSagaSKey = value;
					this.SendPropertyChanged("TransunionSagaSKey");
					this.OnTransunionSagaSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseStatusSkey", DbType="Int NOT NULL")]
		public int TransunionResponseStatusSkey
		{
			get
			{
				return this._TransunionResponseStatusSkey;
			}
			set
			{
				if ((this._TransunionResponseStatusSkey != value))
				{
					if (this._TransunionResponseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransunionResponseStatusSkeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseStatusSkey = value;
					this.SendPropertyChanged("TransunionResponseStatusSkey");
					this.OnTransunionResponseStatusSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingStartDateSkey", DbType="Int NOT NULL")]
		public int ProcessingStartDateSkey
		{
			get
			{
				return this._ProcessingStartDateSkey;
			}
			set
			{
				if ((this._ProcessingStartDateSkey != value))
				{
					if (this._ProcessingStartDateSkeyBi_Date.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessingStartDateSkeyChanging(value);
					this.SendPropertyChanging();
					this._ProcessingStartDateSkey = value;
					this.SendPropertyChanged("ProcessingStartDateSkey");
					this.OnProcessingStartDateSkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseXML", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ResponseXML
		{
			get
			{
				return this._ResponseXML;
			}
			set
			{
				if ((this._ResponseXML != value))
				{
					this.OnResponseXMLChanging(value);
					this.SendPropertyChanging();
					this._ResponseXML = value;
					this.SendPropertyChanged("ResponseXML");
					this.OnResponseXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biAccount", Storage="_AccountEntity", ThisKey="AccountSKey", OtherKey="AccountSKey", IsForeignKey=true)]
		public AccountEntity AccountEntity
		{
			get
			{
				return this._AccountEntity.Entity;
			}
			set
			{
				AccountEntity previousValue = this._AccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountEntity.Entity = null;
						previousValue.FTransunionResponses.Remove(this);
					}
					this._AccountEntity.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponses.Add(this);
						this._AccountSKey = value.AccountSKey;
					}
					else
					{
						this._AccountSKey = default(int);
					}
					this.SendPropertyChanged("AccountEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FTransunionResponses.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponses.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biDate2", Storage="_ProcessingStartDateSkeyBi_Date", ThisKey="ProcessingStartDateSkey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity ProcessingStartDateSkeyBi_Date
		{
			get
			{
				return this._ProcessingStartDateSkeyBi_Date.Entity;
			}
			set
			{
				DateEntity previousValue = this._ProcessingStartDateSkeyBi_Date.Entity;
				if (((previousValue != value) 
							|| (this._ProcessingStartDateSkeyBi_Date.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessingStartDateSkeyBi_Date.Entity = null;
						previousValue.DateSKeyBi_FTransunionResponses.Remove(this);
					}
					this._ProcessingStartDateSkeyBi_Date.Entity = value;
					if ((value != null))
					{
						value.DateSKeyBi_FTransunionResponses.Add(this);
						this._ProcessingStartDateSkey = value.DateSKey;
					}
					else
					{
						this._ProcessingStartDateSkey = default(int);
					}
					this.SendPropertyChanged("ProcessingStartDateSkeyBi_Date");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionConsumer", Storage="_TransunionConsumerEntity", ThisKey="TransunionConsumerSKey", OtherKey="TransunionConsumerSKey", IsForeignKey=true)]
		public TransunionConsumerEntity TransunionConsumerEntity
		{
			get
			{
				return this._TransunionConsumerEntity.Entity;
			}
			set
			{
				TransunionConsumerEntity previousValue = this._TransunionConsumerEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransunionConsumerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransunionConsumerEntity.Entity = null;
						previousValue.FTransunionResponses.Remove(this);
					}
					this._TransunionConsumerEntity.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponses.Add(this);
						this._TransunionConsumerSKey = value.TransunionConsumerSKey;
					}
					else
					{
						this._TransunionConsumerSKey = default(int);
					}
					this.SendPropertyChanged("TransunionConsumerEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionResponse", Storage="_TransunionResponseEntity", ThisKey="TransunionResponseSKey", OtherKey="TransunionResponseSKey", IsForeignKey=true)]
		public TransunionResponseEntity TransunionResponseEntity
		{
			get
			{
				return this._TransunionResponseEntity.Entity;
			}
			set
			{
				TransunionResponseEntity previousValue = this._TransunionResponseEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransunionResponseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransunionResponseEntity.Entity = null;
						previousValue.FTransunionResponseEntity = null;
					}
					this._TransunionResponseEntity.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponseEntity = this;
						this._TransunionResponseSKey = value.TransunionResponseSKey;
					}
					else
					{
						this._TransunionResponseSKey = default(int);
					}
					this.SendPropertyChanged("TransunionResponseEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionResponseStatus", Storage="_TransunionResponseStatus", ThisKey="TransunionResponseStatusSkey", OtherKey="TransunionResponseStatusSKey", IsForeignKey=true)]
		public TransunionResponseStatus TransunionResponseStatus
		{
			get
			{
				return this._TransunionResponseStatus.Entity;
			}
			set
			{
				TransunionResponseStatus previousValue = this._TransunionResponseStatus.Entity;
				if (((previousValue != value) 
							|| (this._TransunionResponseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransunionResponseStatus.Entity = null;
						previousValue.FTransunionResponses.Remove(this);
					}
					this._TransunionResponseStatus.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponses.Add(this);
						this._TransunionResponseStatusSkey = value.TransunionResponseStatusSKey;
					}
					else
					{
						this._TransunionResponseStatusSkey = default(int);
					}
					this.SendPropertyChanged("TransunionResponseStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionSaga", Storage="_TransunionSagaEntity", ThisKey="TransunionSagaSKey", OtherKey="TransunionSagaSKey", IsForeignKey=true)]
		public TransunionSagaEntity TransunionSagaEntity
		{
			get
			{
				return this._TransunionSagaEntity.Entity;
			}
			set
			{
				TransunionSagaEntity previousValue = this._TransunionSagaEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransunionSagaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransunionSagaEntity.Entity = null;
						previousValue.FTransunionResponses.Remove(this);
					}
					this._TransunionSagaEntity.Entity = value;
					if ((value != null))
					{
						value.FTransunionResponses.Add(this);
						this._TransunionSagaSKey = value.TransunionSagaSKey;
					}
					else
					{
						this._TransunionSagaSKey = default(int);
					}
					this.SendPropertyChanged("TransunionSagaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.fUpdateDailyAccruedInterest")]
	public partial class FUpdateDailyAccruedInterestEntity : DbEntity<FUpdateDailyAccruedInterestEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationSKey;
		
		private int _DateSKey;
		
		private decimal _FAccruedInterest;
		
		private decimal _FBalance;
		
		private decimal _FCharges;
		
		private decimal _FExtendedLoanPartPayment;
		
		private decimal _FPostedInterest;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<ApplicationEntity> _ApplicationEntity;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationSKeyChanging(int value);
    partial void OnApplicationSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnFAccruedInterestChanging(decimal value);
    partial void OnFAccruedInterestChanged();
    partial void OnFBalanceChanging(decimal value);
    partial void OnFBalanceChanged();
    partial void OnFChargesChanging(decimal value);
    partial void OnFChargesChanged();
    partial void OnFExtendedLoanPartPaymentChanging(decimal value);
    partial void OnFExtendedLoanPartPaymentChanged();
    partial void OnFPostedInterestChanging(decimal value);
    partial void OnFPostedInterestChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public FUpdateDailyAccruedInterestEntity()
		{
			this._ApplicationEntity = default(EntityRef<ApplicationEntity>);
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationSKey
		{
			get
			{
				return this._ApplicationSKey;
			}
			set
			{
				if ((this._ApplicationSKey != value))
				{
					if (this._ApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationSKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationSKey = value;
					this.SendPropertyChanged("ApplicationSKey");
					this.OnApplicationSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fAccruedInterest", Storage="_FAccruedInterest", DbType="Decimal(9,2) NOT NULL")]
		public decimal FAccruedInterest
		{
			get
			{
				return this._FAccruedInterest;
			}
			set
			{
				if ((this._FAccruedInterest != value))
				{
					this.OnFAccruedInterestChanging(value);
					this.SendPropertyChanging();
					this._FAccruedInterest = value;
					this.SendPropertyChanged("FAccruedInterest");
					this.OnFAccruedInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fBalance", Storage="_FBalance", DbType="Decimal(9,2) NOT NULL")]
		public decimal FBalance
		{
			get
			{
				return this._FBalance;
			}
			set
			{
				if ((this._FBalance != value))
				{
					this.OnFBalanceChanging(value);
					this.SendPropertyChanging();
					this._FBalance = value;
					this.SendPropertyChanged("FBalance");
					this.OnFBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fCharges", Storage="_FCharges", DbType="Decimal(9,2) NOT NULL")]
		public decimal FCharges
		{
			get
			{
				return this._FCharges;
			}
			set
			{
				if ((this._FCharges != value))
				{
					this.OnFChargesChanging(value);
					this.SendPropertyChanging();
					this._FCharges = value;
					this.SendPropertyChanged("FCharges");
					this.OnFChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fExtendedLoanPartPayment", Storage="_FExtendedLoanPartPayment", DbType="Decimal(9,2) NOT NULL")]
		public decimal FExtendedLoanPartPayment
		{
			get
			{
				return this._FExtendedLoanPartPayment;
			}
			set
			{
				if ((this._FExtendedLoanPartPayment != value))
				{
					this.OnFExtendedLoanPartPaymentChanging(value);
					this.SendPropertyChanging();
					this._FExtendedLoanPartPayment = value;
					this.SendPropertyChanged("FExtendedLoanPartPayment");
					this.OnFExtendedLoanPartPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fPostedInterest", Storage="_FPostedInterest", DbType="Decimal(9,2) NOT NULL")]
		public decimal FPostedInterest
		{
			get
			{
				return this._FPostedInterest;
			}
			set
			{
				if ((this._FPostedInterest != value))
				{
					this.OnFPostedInterestChanging(value);
					this.SendPropertyChanging();
					this._FPostedInterest = value;
					this.SendPropertyChanged("FPostedInterest");
					this.OnFPostedInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifUpdateDailyAccruedInterest_REF_biApplication", Storage="_ApplicationEntity", ThisKey="ApplicationSKey", OtherKey="ApplicationSKey", IsForeignKey=true)]
		public ApplicationEntity ApplicationEntity
		{
			get
			{
				return this._ApplicationEntity.Entity;
			}
			set
			{
				ApplicationEntity previousValue = this._ApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationEntity.Entity = null;
						previousValue.FUpdateDailyAccruedInterests.Remove(this);
					}
					this._ApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.FUpdateDailyAccruedInterests.Add(this);
						this._ApplicationSKey = value.ApplicationSKey;
					}
					else
					{
						this._ApplicationSKey = default(int);
					}
					this.SendPropertyChanged("ApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifUpdateDailyAccruedInterest_REF_biDate", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.FUpdateDailyAccruedInterests.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.FUpdateDailyAccruedInterests.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Ln")]
	public partial class LnEntity : DbEntity<LnEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LnSKey;
		
		private string _LnGroup;
		
		private string _Ln;
		
		private EntitySet<FAggApplicationEntity> _FAggApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLnSKeyChanging(short value);
    partial void OnLnSKeyChanged();
    partial void OnLnGroupChanging(string value);
    partial void OnLnGroupChanged();
    partial void OnLnChanging(string value);
    partial void OnLnChanged();
    #endregion
		
		public LnEntity()
		{
			this._FAggApplications = new EntitySet<FAggApplicationEntity>(new Action<FAggApplicationEntity>(this.attach_FAggApplications), new Action<FAggApplicationEntity>(this.detach_FAggApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short LnSKey
		{
			get
			{
				return this._LnSKey;
			}
			set
			{
				if ((this._LnSKey != value))
				{
					this.OnLnSKeyChanging(value);
					this.SendPropertyChanging();
					this._LnSKey = value;
					this.SendPropertyChanged("LnSKey");
					this.OnLnSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LnGroup
		{
			get
			{
				return this._LnGroup;
			}
			set
			{
				if ((this._LnGroup != value))
				{
					this.OnLnGroupChanging(value);
					this.SendPropertyChanging();
					this._LnGroup = value;
					this.SendPropertyChanged("LnGroup");
					this.OnLnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ln", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Ln
		{
			get
			{
				return this._Ln;
			}
			set
			{
				if ((this._Ln != value))
				{
					this.OnLnChanging(value);
					this.SendPropertyChanging();
					this._Ln = value;
					this.SendPropertyChanged("Ln");
					this.OnLnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggApplication_REF_biLn", Storage="_FAggApplications", ThisKey="LnSKey", OtherKey="LnSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggApplicationEntity> FAggApplications
		{
			get
			{
				return this._FAggApplications;
			}
			set
			{
				this._FAggApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.LnEntity = this;
		}
		
		private void detach_FAggApplications(FAggApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.LnEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.LogMessageSource")]
	public partial class LogMessageSourceEntity : DbEntity<LogMessageSourceEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _LogMessageSourceId;
		
		private string _LogMessageSourceName;
		
		private EntitySet<AggregationBuildLogEntity> _AggregationBuildLogs;
		
		private EntitySet<ProcessMessageLogEntity> _ProcessMessageLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogMessageSourceIdChanging(short value);
    partial void OnLogMessageSourceIdChanged();
    partial void OnLogMessageSourceNameChanging(string value);
    partial void OnLogMessageSourceNameChanged();
    #endregion
		
		public LogMessageSourceEntity()
		{
			this._AggregationBuildLogs = new EntitySet<AggregationBuildLogEntity>(new Action<AggregationBuildLogEntity>(this.attach_AggregationBuildLogs), new Action<AggregationBuildLogEntity>(this.detach_AggregationBuildLogs));
			this._ProcessMessageLogs = new EntitySet<ProcessMessageLogEntity>(new Action<ProcessMessageLogEntity>(this.attach_ProcessMessageLogs), new Action<ProcessMessageLogEntity>(this.detach_ProcessMessageLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageSourceId", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short LogMessageSourceId
		{
			get
			{
				return this._LogMessageSourceId;
			}
			set
			{
				if ((this._LogMessageSourceId != value))
				{
					this.OnLogMessageSourceIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageSourceId = value;
					this.SendPropertyChanged("LogMessageSourceId");
					this.OnLogMessageSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageSourceName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LogMessageSourceName
		{
			get
			{
				return this._LogMessageSourceName;
			}
			set
			{
				if ((this._LogMessageSourceName != value))
				{
					this.OnLogMessageSourceNameChanging(value);
					this.SendPropertyChanging();
					this._LogMessageSourceName = value;
					this.SendPropertyChanged("LogMessageSourceName");
					this.OnLogMessageSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biLogMessageSource", Storage="_AggregationBuildLogs", ThisKey="LogMessageSourceId", OtherKey="LogMessageSourceId", DeleteRule="NO ACTION")]
		public EntitySet<AggregationBuildLogEntity> AggregationBuildLogs
		{
			get
			{
				return this._AggregationBuildLogs;
			}
			set
			{
				this._AggregationBuildLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biProcessMessageLog_REF_biLogMessageSource", Storage="_ProcessMessageLogs", ThisKey="LogMessageSourceId", OtherKey="LogMessageSourceId", DeleteRule="NO ACTION")]
		public EntitySet<ProcessMessageLogEntity> ProcessMessageLogs
		{
			get
			{
				return this._ProcessMessageLogs;
			}
			set
			{
				this._ProcessMessageLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageSourceEntity = this;
		}
		
		private void detach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageSourceEntity = null;
		}
		
		private void attach_ProcessMessageLogs(ProcessMessageLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageSourceEntity = this;
		}
		
		private void detach_ProcessMessageLogs(ProcessMessageLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageSourceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.LogMessageType")]
	public partial class LogMessageTypeEntity : DbEntity<LogMessageTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _LogMessageTypeId;
		
		private string _LogMessageTypeName;
		
		private EntitySet<AggregationBuildLogEntity> _AggregationBuildLogs;
		
		private EntitySet<ProcessMessageLogEntity> _ProcessMessageLogs;
		
		private EntitySet<ServiceBrokerLogEntity> _ServiceBrokerLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogMessageTypeIdChanging(byte value);
    partial void OnLogMessageTypeIdChanged();
    partial void OnLogMessageTypeNameChanging(string value);
    partial void OnLogMessageTypeNameChanged();
    #endregion
		
		public LogMessageTypeEntity()
		{
			this._AggregationBuildLogs = new EntitySet<AggregationBuildLogEntity>(new Action<AggregationBuildLogEntity>(this.attach_AggregationBuildLogs), new Action<AggregationBuildLogEntity>(this.detach_AggregationBuildLogs));
			this._ProcessMessageLogs = new EntitySet<ProcessMessageLogEntity>(new Action<ProcessMessageLogEntity>(this.attach_ProcessMessageLogs), new Action<ProcessMessageLogEntity>(this.detach_ProcessMessageLogs));
			this._ServiceBrokerLogs = new EntitySet<ServiceBrokerLogEntity>(new Action<ServiceBrokerLogEntity>(this.attach_ServiceBrokerLogs), new Action<ServiceBrokerLogEntity>(this.detach_ServiceBrokerLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte LogMessageTypeId
		{
			get
			{
				return this._LogMessageTypeId;
			}
			set
			{
				if ((this._LogMessageTypeId != value))
				{
					this.OnLogMessageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageTypeId = value;
					this.SendPropertyChanged("LogMessageTypeId");
					this.OnLogMessageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageTypeName", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string LogMessageTypeName
		{
			get
			{
				return this._LogMessageTypeName;
			}
			set
			{
				if ((this._LogMessageTypeName != value))
				{
					this.OnLogMessageTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LogMessageTypeName = value;
					this.SendPropertyChanged("LogMessageTypeName");
					this.OnLogMessageTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biAggregationBuildLog_REF_biLogMessageType", Storage="_AggregationBuildLogs", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", DeleteRule="NO ACTION")]
		public EntitySet<AggregationBuildLogEntity> AggregationBuildLogs
		{
			get
			{
				return this._AggregationBuildLogs;
			}
			set
			{
				this._AggregationBuildLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biProcessMessageLog_REF_biLogMessageType", Storage="_ProcessMessageLogs", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", DeleteRule="NO ACTION")]
		public EntitySet<ProcessMessageLogEntity> ProcessMessageLogs
		{
			get
			{
				return this._ProcessMessageLogs;
			}
			set
			{
				this._ProcessMessageLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biServiceBrokerLog_REF_biLogMessageType", Storage="_ServiceBrokerLogs", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", DeleteRule="NO ACTION")]
		public EntitySet<ServiceBrokerLogEntity> ServiceBrokerLogs
		{
			get
			{
				return this._ServiceBrokerLogs;
			}
			set
			{
				this._ServiceBrokerLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = this;
		}
		
		private void detach_AggregationBuildLogs(AggregationBuildLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = null;
		}
		
		private void attach_ProcessMessageLogs(ProcessMessageLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = this;
		}
		
		private void detach_ProcessMessageLogs(ProcessMessageLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = null;
		}
		
		private void attach_ServiceBrokerLogs(ServiceBrokerLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = this;
		}
		
		private void detach_ServiceBrokerLogs(ServiceBrokerLogEntity entity)
		{
			this.SendPropertyChanging();
			entity.LogMessageTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.MergeLog")]
	public partial class MergeLogEntity : DbEntity<MergeLogEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MergeLogSKey;
		
		private int _DateSKey;
		
		private string _Table;
		
		private string _Action;
		
		private int _Rows;
		
		private EntityRef<DateEntity> _DateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMergeLogSKeyChanging(int value);
    partial void OnMergeLogSKeyChanged();
    partial void OnDateSKeyChanging(int value);
    partial void OnDateSKeyChanged();
    partial void OnTableChanging(string value);
    partial void OnTableChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnRowsChanging(int value);
    partial void OnRowsChanged();
    #endregion
		
		public MergeLogEntity()
		{
			this._DateEntity = default(EntityRef<DateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeLogSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MergeLogSKey
		{
			get
			{
				return this._MergeLogSKey;
			}
			set
			{
				if ((this._MergeLogSKey != value))
				{
					this.OnMergeLogSKeyChanging(value);
					this.SendPropertyChanging();
					this._MergeLogSKey = value;
					this.SendPropertyChanged("MergeLogSKey");
					this.OnMergeLogSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSKey", DbType="Int NOT NULL")]
		public int DateSKey
		{
			get
			{
				return this._DateSKey;
			}
			set
			{
				if ((this._DateSKey != value))
				{
					if (this._DateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateSKeyChanging(value);
					this.SendPropertyChanging();
					this._DateSKey = value;
					this.SendPropertyChanged("DateSKey");
					this.OnDateSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Table", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Table
		{
			get
			{
				return this._Table;
			}
			set
			{
				if ((this._Table != value))
				{
					this.OnTableChanging(value);
					this.SendPropertyChanging();
					this._Table = value;
					this.SendPropertyChanged("Table");
					this.OnTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rows", DbType="Int NOT NULL")]
		public int Rows
		{
			get
			{
				return this._Rows;
			}
			set
			{
				if ((this._Rows != value))
				{
					this.OnRowsChanging(value);
					this.SendPropertyChanging();
					this._Rows = value;
					this.SendPropertyChanged("Rows");
					this.OnRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MergeLog_REF_Date", Storage="_DateEntity", ThisKey="DateSKey", OtherKey="DateSKey", IsForeignKey=true)]
		public DateEntity DateEntity
		{
			get
			{
				return this._DateEntity.Entity;
			}
			set
			{
				DateEntity previousValue = this._DateEntity.Entity;
				if (((previousValue != value) 
							|| (this._DateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DateEntity.Entity = null;
						previousValue.MergeLogs.Remove(this);
					}
					this._DateEntity.Entity = value;
					if ((value != null))
					{
						value.MergeLogs.Add(this);
						this._DateSKey = value.DateSKey;
					}
					else
					{
						this._DateSKey = default(int);
					}
					this.SendPropertyChanged("DateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.MessageArchive")]
	public partial class MessageArchiveEntity : DbEntity<MessageArchiveEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MessageArchiveId;
		
		private string _MessageType;
		
		private System.Xml.Linq.XElement _Message;
		
		private bool _Processed;
		
		private System.DateTime _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageArchiveIdChanging(long value);
    partial void OnMessageArchiveIdChanged();
    partial void OnMessageTypeChanging(string value);
    partial void OnMessageTypeChanged();
    partial void OnMessageChanging(System.Xml.Linq.XElement value);
    partial void OnMessageChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public MessageArchiveEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageArchiveId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MessageArchiveId
		{
			get
			{
				return this._MessageArchiveId;
			}
			set
			{
				if ((this._MessageArchiveId != value))
				{
					this.OnMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._MessageArchiveId = value;
					this.SendPropertyChanged("MessageArchiveId");
					this.OnMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MessageType
		{
			get
			{
				return this._MessageType;
			}
			set
			{
				if ((this._MessageType != value))
				{
					this.OnMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._MessageType = value;
					this.SendPropertyChanged("MessageType");
					this.OnMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRevisionChanging(string value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.NationalHoliday")]
	public partial class NationalHolidayEntity : DbEntity<NationalHolidayEntity>
	{
		
		private int _NationalHolidaySKey;
		
		private System.DateTime _NationalHolidayNKey;
		
		private bool _IsBankHoliday;
		
		public NationalHolidayEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalHolidaySKey", DbType="Int NOT NULL")]
		public int NationalHolidaySKey
		{
			get
			{
				return this._NationalHolidaySKey;
			}
			set
			{
				if ((this._NationalHolidaySKey != value))
				{
					this._NationalHolidaySKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalHolidayNKey", DbType="Date NOT NULL")]
		public System.DateTime NationalHolidayNKey
		{
			get
			{
				return this._NationalHolidayNKey;
			}
			set
			{
				if ((this._NationalHolidayNKey != value))
				{
					this._NationalHolidayNKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBankHoliday", DbType="Bit NOT NULL")]
		public bool IsBankHoliday
		{
			get
			{
				return this._IsBankHoliday;
			}
			set
			{
				if ((this._IsBankHoliday != value))
				{
					this._IsBankHoliday = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PaymentCard")]
	public partial class PaymentCardEntity : DbEntity<PaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCardSKey;
		
		private System.Guid _PaymentCardNKey;
		
		private string _CardType;
		
		private string _ExpiryDate;
		
		private string _HolderName;
		
		private bool _IsCreditCard;
		
		private bool _IsPrimary;
		
		private string _IssueNo;
		
		private string _Number;
		
		private string _SecurityCode;
		
		private string _StartDate;
		
		private string _AdditionalDetails;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FAddPaymentCardEntity> _FAddPaymentCards;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
		private EntitySet<FCreateFixedTermLoanExtensionEntity> _FCreateFixedTermLoanExtensions;
		
		private EntitySet<FExtendLoanEntity> _FExtendLoans;
		
		private EntitySet<FRepayLoanEntity> _FRepayLoans;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCardSKeyChanging(int value);
    partial void OnPaymentCardSKeyChanged();
    partial void OnPaymentCardNKeyChanging(System.Guid value);
    partial void OnPaymentCardNKeyChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnExpiryDateChanging(string value);
    partial void OnExpiryDateChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnIsCreditCardChanging(bool value);
    partial void OnIsCreditCardChanged();
    partial void OnIsPrimaryChanging(bool value);
    partial void OnIsPrimaryChanged();
    partial void OnIssueNoChanging(string value);
    partial void OnIssueNoChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnSecurityCodeChanging(string value);
    partial void OnSecurityCodeChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnAdditionalDetailsChanging(string value);
    partial void OnAdditionalDetailsChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public PaymentCardEntity()
		{
			this._FAddPaymentCards = new EntitySet<FAddPaymentCardEntity>(new Action<FAddPaymentCardEntity>(this.attach_FAddPaymentCards), new Action<FAddPaymentCardEntity>(this.detach_FAddPaymentCards));
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			this._FCreateFixedTermLoanExtensions = new EntitySet<FCreateFixedTermLoanExtensionEntity>(new Action<FCreateFixedTermLoanExtensionEntity>(this.attach_FCreateFixedTermLoanExtensions), new Action<FCreateFixedTermLoanExtensionEntity>(this.detach_FCreateFixedTermLoanExtensions));
			this._FExtendLoans = new EntitySet<FExtendLoanEntity>(new Action<FExtendLoanEntity>(this.attach_FExtendLoans), new Action<FExtendLoanEntity>(this.detach_FExtendLoans));
			this._FRepayLoans = new EntitySet<FRepayLoanEntity>(new Action<FRepayLoanEntity>(this.attach_FRepayLoans), new Action<FRepayLoanEntity>(this.detach_FRepayLoans));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentCardSKey
		{
			get
			{
				return this._PaymentCardSKey;
			}
			set
			{
				if ((this._PaymentCardSKey != value))
				{
					this.OnPaymentCardSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardSKey = value;
					this.SendPropertyChanged("PaymentCardSKey");
					this.OnPaymentCardSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentCardNKey
		{
			get
			{
				return this._PaymentCardNKey;
			}
			set
			{
				if ((this._PaymentCardNKey != value))
				{
					this.OnPaymentCardNKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardNKey = value;
					this.SendPropertyChanged("PaymentCardNKey");
					this.OnPaymentCardNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCreditCard", DbType="Bit NOT NULL")]
		public bool IsCreditCard
		{
			get
			{
				return this._IsCreditCard;
			}
			set
			{
				if ((this._IsCreditCard != value))
				{
					this.OnIsCreditCardChanging(value);
					this.SendPropertyChanging();
					this._IsCreditCard = value;
					this.SendPropertyChanged("IsCreditCard");
					this.OnIsCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimary", DbType="Bit NOT NULL")]
		public bool IsPrimary
		{
			get
			{
				return this._IsPrimary;
			}
			set
			{
				if ((this._IsPrimary != value))
				{
					this.OnIsPrimaryChanging(value);
					this.SendPropertyChanging();
					this._IsPrimary = value;
					this.SendPropertyChanged("IsPrimary");
					this.OnIsPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNo", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string IssueNo
		{
			get
			{
				return this._IssueNo;
			}
			set
			{
				if ((this._IssueNo != value))
				{
					this.OnIssueNoChanging(value);
					this.SendPropertyChanging();
					this._IssueNo = value;
					this.SendPropertyChanged("IssueNo");
					this.OnIssueNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SecurityCode
		{
			get
			{
				return this._SecurityCode;
			}
			set
			{
				if ((this._SecurityCode != value))
				{
					this.OnSecurityCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityCode = value;
					this.SendPropertyChanged("SecurityCode");
					this.OnSecurityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalDetails", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AdditionalDetails
		{
			get
			{
				return this._AdditionalDetails;
			}
			set
			{
				if ((this._AdditionalDetails != value))
				{
					this.OnAdditionalDetailsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalDetails = value;
					this.SendPropertyChanged("AdditionalDetails");
					this.OnAdditionalDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAddPaymentCard_REF_biPaymentCard", Storage="_FAddPaymentCards", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAddPaymentCardEntity> FAddPaymentCards
		{
			get
			{
				return this._FAddPaymentCards;
			}
			set
			{
				this._FAddPaymentCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biPaymentCard", Storage="_FCreateFixedTermLoanApplications", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanExtension_REF_biPaymentCard", Storage="_FCreateFixedTermLoanExtensions", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanExtensionEntity> FCreateFixedTermLoanExtensions
		{
			get
			{
				return this._FCreateFixedTermLoanExtensions;
			}
			set
			{
				this._FCreateFixedTermLoanExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biPaymentCard", Storage="_FExtendLoans", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", DeleteRule="NO ACTION")]
		public EntitySet<FExtendLoanEntity> FExtendLoans
		{
			get
			{
				return this._FExtendLoans;
			}
			set
			{
				this._FExtendLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biPaymentCard", Storage="_FRepayLoans", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSKey", DeleteRule="NO ACTION")]
		public EntitySet<FRepayLoanEntity> FRepayLoans
		{
			get
			{
				return this._FRepayLoans;
			}
			set
			{
				this._FRepayLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCard", Storage="_FTransactionRequests", ThisKey="PaymentCardSKey", OtherKey="PaymentCardSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FAddPaymentCards(FAddPaymentCardEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
		
		private void attach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanExtensions(FCreateFixedTermLoanExtensionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
		
		private void attach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
		
		private void attach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCardEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PaymentCollection")]
	public partial class PaymentCollectionEntity : DbEntity<PaymentCollectionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentCollectionSKey;
		
		private System.Guid _PaymentCollectionNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<FPaymentCollectionEntity> _FPaymentCollectionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCollectionSKeyChanging(int value);
    partial void OnPaymentCollectionSKeyChanged();
    partial void OnPaymentCollectionNKeyChanging(System.Guid value);
    partial void OnPaymentCollectionNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public PaymentCollectionEntity()
		{
			this._FPaymentCollectionEntity = default(EntityRef<FPaymentCollectionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentCollectionSKey
		{
			get
			{
				return this._PaymentCollectionSKey;
			}
			set
			{
				if ((this._PaymentCollectionSKey != value))
				{
					this.OnPaymentCollectionSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionSKey = value;
					this.SendPropertyChanged("PaymentCollectionSKey");
					this.OnPaymentCollectionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentCollectionNKey
		{
			get
			{
				return this._PaymentCollectionNKey;
			}
			set
			{
				if ((this._PaymentCollectionNKey != value))
				{
					this.OnPaymentCollectionNKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionNKey = value;
					this.SendPropertyChanged("PaymentCollectionNKey");
					this.OnPaymentCollectionNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollection", Storage="_FPaymentCollectionEntity", ThisKey="PaymentCollectionSKey", OtherKey="PaymentCollectionSkey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FPaymentCollectionEntity FPaymentCollectionEntity
		{
			get
			{
				return this._FPaymentCollectionEntity.Entity;
			}
			set
			{
				FPaymentCollectionEntity previousValue = this._FPaymentCollectionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FPaymentCollectionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FPaymentCollectionEntity.Entity = null;
						previousValue.PaymentCollectionEntity = null;
					}
					this._FPaymentCollectionEntity.Entity = value;
					if ((value != null))
					{
						value.PaymentCollectionEntity = this;
					}
					this.SendPropertyChanged("FPaymentCollectionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PaymentCollectionAgency")]
	public partial class PaymentCollectionAgencyEntity : DbEntity<PaymentCollectionAgencyEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PaymentCollectionAgencySKey;
		
		private string _PaymentCollectionAgencyNKey;
		
		private short _PaymentCollectionTypeSKey;
		
		private short _NoOfAttempts;
		
		private EntitySet<FPaymentCollectionEntity> _FPaymentCollections;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCollectionAgencySKeyChanging(short value);
    partial void OnPaymentCollectionAgencySKeyChanged();
    partial void OnPaymentCollectionAgencyNKeyChanging(string value);
    partial void OnPaymentCollectionAgencyNKeyChanged();
    partial void OnPaymentCollectionTypeSKeyChanging(short value);
    partial void OnPaymentCollectionTypeSKeyChanged();
    partial void OnNoOfAttemptsChanging(short value);
    partial void OnNoOfAttemptsChanged();
    #endregion
		
		public PaymentCollectionAgencyEntity()
		{
			this._FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_FPaymentCollections));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionAgencySKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PaymentCollectionAgencySKey
		{
			get
			{
				return this._PaymentCollectionAgencySKey;
			}
			set
			{
				if ((this._PaymentCollectionAgencySKey != value))
				{
					this.OnPaymentCollectionAgencySKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionAgencySKey = value;
					this.SendPropertyChanged("PaymentCollectionAgencySKey");
					this.OnPaymentCollectionAgencySKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionAgencyNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentCollectionAgencyNKey
		{
			get
			{
				return this._PaymentCollectionAgencyNKey;
			}
			set
			{
				if ((this._PaymentCollectionAgencyNKey != value))
				{
					this.OnPaymentCollectionAgencyNKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionAgencyNKey = value;
					this.SendPropertyChanged("PaymentCollectionAgencyNKey");
					this.OnPaymentCollectionAgencyNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionTypeSKey", DbType="SmallInt NOT NULL")]
		public short PaymentCollectionTypeSKey
		{
			get
			{
				return this._PaymentCollectionTypeSKey;
			}
			set
			{
				if ((this._PaymentCollectionTypeSKey != value))
				{
					this.OnPaymentCollectionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionTypeSKey = value;
					this.SendPropertyChanged("PaymentCollectionTypeSKey");
					this.OnPaymentCollectionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfAttempts", DbType="SmallInt NOT NULL")]
		public short NoOfAttempts
		{
			get
			{
				return this._NoOfAttempts;
			}
			set
			{
				if ((this._NoOfAttempts != value))
				{
					this.OnNoOfAttemptsChanging(value);
					this.SendPropertyChanging();
					this._NoOfAttempts = value;
					this.SendPropertyChanged("NoOfAttempts");
					this.OnNoOfAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionAgency", Storage="_FPaymentCollections", ThisKey="PaymentCollectionAgencySKey", OtherKey="PaymentCollectionAgencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this._FPaymentCollections;
			}
			set
			{
				this._FPaymentCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCollectionAgency", Storage="_FTransactionRequests", ThisKey="PaymentCollectionAgencySKey", OtherKey="PaymentCollectionAgencySKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionAgencyEntity = this;
		}
		
		private void detach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionAgencyEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionAgencyEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionAgencyEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PaymentCollectionStatus")]
	public partial class PaymentCollectionStatus : DbEntity<PaymentCollectionStatus>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PaymentCollectionStatusSKey;
		
		private string _PaymentCollectionStatusNKey;
		
		private EntitySet<FPaymentCollectionEntity> _FPaymentCollections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCollectionStatusSKeyChanging(short value);
    partial void OnPaymentCollectionStatusSKeyChanged();
    partial void OnPaymentCollectionStatusNKeyChanging(string value);
    partial void OnPaymentCollectionStatusNKeyChanged();
    #endregion
		
		public PaymentCollectionStatus()
		{
			this._FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_FPaymentCollections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionStatusSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PaymentCollectionStatusSKey
		{
			get
			{
				return this._PaymentCollectionStatusSKey;
			}
			set
			{
				if ((this._PaymentCollectionStatusSKey != value))
				{
					this.OnPaymentCollectionStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionStatusSKey = value;
					this.SendPropertyChanged("PaymentCollectionStatusSKey");
					this.OnPaymentCollectionStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionStatusNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentCollectionStatusNKey
		{
			get
			{
				return this._PaymentCollectionStatusNKey;
			}
			set
			{
				if ((this._PaymentCollectionStatusNKey != value))
				{
					this.OnPaymentCollectionStatusNKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionStatusNKey = value;
					this.SendPropertyChanged("PaymentCollectionStatusNKey");
					this.OnPaymentCollectionStatusNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionStatus", Storage="_FPaymentCollections", ThisKey="PaymentCollectionStatusSKey", OtherKey="PaymentCollectionStatusSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this._FPaymentCollections;
			}
			set
			{
				this._FPaymentCollections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionStatus = this;
		}
		
		private void detach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PaymentCollectionType")]
	public partial class PaymentCollectionTypeEntity : DbEntity<PaymentCollectionTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PaymentCollectionTypeSKey;
		
		private string _PaymentCollectionTypeNKey;
		
		private EntitySet<FPaymentCollectionEntity> _FPaymentCollections;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentCollectionTypeSKeyChanging(short value);
    partial void OnPaymentCollectionTypeSKeyChanged();
    partial void OnPaymentCollectionTypeNKeyChanging(string value);
    partial void OnPaymentCollectionTypeNKeyChanged();
    #endregion
		
		public PaymentCollectionTypeEntity()
		{
			this._FPaymentCollections = new EntitySet<FPaymentCollectionEntity>(new Action<FPaymentCollectionEntity>(this.attach_FPaymentCollections), new Action<FPaymentCollectionEntity>(this.detach_FPaymentCollections));
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionTypeSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PaymentCollectionTypeSKey
		{
			get
			{
				return this._PaymentCollectionTypeSKey;
			}
			set
			{
				if ((this._PaymentCollectionTypeSKey != value))
				{
					this.OnPaymentCollectionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionTypeSKey = value;
					this.SendPropertyChanged("PaymentCollectionTypeSKey");
					this.OnPaymentCollectionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCollectionTypeNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentCollectionTypeNKey
		{
			get
			{
				return this._PaymentCollectionTypeNKey;
			}
			set
			{
				if ((this._PaymentCollectionTypeNKey != value))
				{
					this.OnPaymentCollectionTypeNKeyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCollectionTypeNKey = value;
					this.SendPropertyChanged("PaymentCollectionTypeNKey");
					this.OnPaymentCollectionTypeNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentCollection_REF_biPaymentCollectionType", Storage="_FPaymentCollections", ThisKey="PaymentCollectionTypeSKey", OtherKey="PaymentCollectionTypeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FPaymentCollectionEntity> FPaymentCollections
		{
			get
			{
				return this._FPaymentCollections;
			}
			set
			{
				this._FPaymentCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biPaymentCollectionType", Storage="_FTransactionRequests", ThisKey="PaymentCollectionTypeSKey", OtherKey="PaymentCollectionTypeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionTypeEntity = this;
		}
		
		private void detach_FPaymentCollections(FPaymentCollectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionTypeEntity = null;
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionTypeEntity = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.PaymentCollectionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.ProcessMessageLog")]
	public partial class ProcessMessageLogEntity : DbEntity<ProcessMessageLogEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProcessMessageLogId;
		
		private System.Nullable<long> _MessageArchiveId;
		
		private short _LogMessageSourceId;
		
		private byte _LogMessageTypeId;
		
		private string _LogMessage;
		
		private System.Nullable<int> _ProcessMessageTimeTakenMS;
		
		private System.Nullable<int> _ProcessStepTimeTakenMS;
		
		private System.DateTime _LogTimestamp;
		
		private EntityRef<LogMessageSourceEntity> _LogMessageSourceEntity;
		
		private EntityRef<LogMessageTypeEntity> _LogMessageTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessMessageLogIdChanging(long value);
    partial void OnProcessMessageLogIdChanged();
    partial void OnMessageArchiveIdChanging(System.Nullable<long> value);
    partial void OnMessageArchiveIdChanged();
    partial void OnLogMessageSourceIdChanging(short value);
    partial void OnLogMessageSourceIdChanged();
    partial void OnLogMessageTypeIdChanging(byte value);
    partial void OnLogMessageTypeIdChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnProcessMessageTimeTakenMSChanging(System.Nullable<int> value);
    partial void OnProcessMessageTimeTakenMSChanged();
    partial void OnProcessStepTimeTakenMSChanging(System.Nullable<int> value);
    partial void OnProcessStepTimeTakenMSChanged();
    partial void OnLogTimestampChanging(System.DateTime value);
    partial void OnLogTimestampChanged();
    #endregion
		
		public ProcessMessageLogEntity()
		{
			this._LogMessageSourceEntity = default(EntityRef<LogMessageSourceEntity>);
			this._LogMessageTypeEntity = default(EntityRef<LogMessageTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMessageLogId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ProcessMessageLogId
		{
			get
			{
				return this._ProcessMessageLogId;
			}
			set
			{
				if ((this._ProcessMessageLogId != value))
				{
					this.OnProcessMessageLogIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessMessageLogId = value;
					this.SendPropertyChanged("ProcessMessageLogId");
					this.OnProcessMessageLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageArchiveId", DbType="BigInt")]
		public System.Nullable<long> MessageArchiveId
		{
			get
			{
				return this._MessageArchiveId;
			}
			set
			{
				if ((this._MessageArchiveId != value))
				{
					this.OnMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._MessageArchiveId = value;
					this.SendPropertyChanged("MessageArchiveId");
					this.OnMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageSourceId", DbType="SmallInt NOT NULL")]
		public short LogMessageSourceId
		{
			get
			{
				return this._LogMessageSourceId;
			}
			set
			{
				if ((this._LogMessageSourceId != value))
				{
					if (this._LogMessageSourceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogMessageSourceIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageSourceId = value;
					this.SendPropertyChanged("LogMessageSourceId");
					this.OnLogMessageSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageTypeId", DbType="TinyInt NOT NULL")]
		public byte LogMessageTypeId
		{
			get
			{
				return this._LogMessageTypeId;
			}
			set
			{
				if ((this._LogMessageTypeId != value))
				{
					if (this._LogMessageTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogMessageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageTypeId = value;
					this.SendPropertyChanged("LogMessageTypeId");
					this.OnLogMessageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMessageTimeTakenMS", DbType="Int")]
		public System.Nullable<int> ProcessMessageTimeTakenMS
		{
			get
			{
				return this._ProcessMessageTimeTakenMS;
			}
			set
			{
				if ((this._ProcessMessageTimeTakenMS != value))
				{
					this.OnProcessMessageTimeTakenMSChanging(value);
					this.SendPropertyChanging();
					this._ProcessMessageTimeTakenMS = value;
					this.SendPropertyChanged("ProcessMessageTimeTakenMS");
					this.OnProcessMessageTimeTakenMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessStepTimeTakenMS", DbType="Int")]
		public System.Nullable<int> ProcessStepTimeTakenMS
		{
			get
			{
				return this._ProcessStepTimeTakenMS;
			}
			set
			{
				if ((this._ProcessStepTimeTakenMS != value))
				{
					this.OnProcessStepTimeTakenMSChanging(value);
					this.SendPropertyChanging();
					this._ProcessStepTimeTakenMS = value;
					this.SendPropertyChanged("ProcessStepTimeTakenMS");
					this.OnProcessStepTimeTakenMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTimestamp", DbType="DateTime2(0) NOT NULL")]
		public System.DateTime LogTimestamp
		{
			get
			{
				return this._LogTimestamp;
			}
			set
			{
				if ((this._LogTimestamp != value))
				{
					this.OnLogTimestampChanging(value);
					this.SendPropertyChanging();
					this._LogTimestamp = value;
					this.SendPropertyChanged("LogTimestamp");
					this.OnLogTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biProcessMessageLog_REF_biLogMessageSource", Storage="_LogMessageSourceEntity", ThisKey="LogMessageSourceId", OtherKey="LogMessageSourceId", IsForeignKey=true)]
		public LogMessageSourceEntity LogMessageSourceEntity
		{
			get
			{
				return this._LogMessageSourceEntity.Entity;
			}
			set
			{
				LogMessageSourceEntity previousValue = this._LogMessageSourceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LogMessageSourceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogMessageSourceEntity.Entity = null;
						previousValue.ProcessMessageLogs.Remove(this);
					}
					this._LogMessageSourceEntity.Entity = value;
					if ((value != null))
					{
						value.ProcessMessageLogs.Add(this);
						this._LogMessageSourceId = value.LogMessageSourceId;
					}
					else
					{
						this._LogMessageSourceId = default(short);
					}
					this.SendPropertyChanged("LogMessageSourceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biProcessMessageLog_REF_biLogMessageType", Storage="_LogMessageTypeEntity", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", IsForeignKey=true)]
		public LogMessageTypeEntity LogMessageTypeEntity
		{
			get
			{
				return this._LogMessageTypeEntity.Entity;
			}
			set
			{
				LogMessageTypeEntity previousValue = this._LogMessageTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._LogMessageTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogMessageTypeEntity.Entity = null;
						previousValue.ProcessMessageLogs.Remove(this);
					}
					this._LogMessageTypeEntity.Entity = value;
					if ((value != null))
					{
						value.ProcessMessageLogs.Add(this);
						this._LogMessageTypeId = value.LogMessageTypeId;
					}
					else
					{
						this._LogMessageTypeId = default(byte);
					}
					this.SendPropertyChanged("LogMessageTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.PromoCode")]
	public partial class PromoCodeEntity : DbEntity<PromoCodeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromoCodeSKey;
		
		private System.Guid _PromoCodeNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FCreateFixedTermLoanApplicationEntity> _FCreateFixedTermLoanApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCodeSKeyChanging(int value);
    partial void OnPromoCodeSKeyChanged();
    partial void OnPromoCodeNKeyChanging(System.Guid value);
    partial void OnPromoCodeNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public PromoCodeEntity()
		{
			this._FCreateFixedTermLoanApplications = new EntitySet<FCreateFixedTermLoanApplicationEntity>(new Action<FCreateFixedTermLoanApplicationEntity>(this.attach_FCreateFixedTermLoanApplications), new Action<FCreateFixedTermLoanApplicationEntity>(this.detach_FCreateFixedTermLoanApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromoCodeSKey
		{
			get
			{
				return this._PromoCodeSKey;
			}
			set
			{
				if ((this._PromoCodeSKey != value))
				{
					this.OnPromoCodeSKeyChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeSKey = value;
					this.SendPropertyChanged("PromoCodeSKey");
					this.OnPromoCodeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PromoCodeNKey
		{
			get
			{
				return this._PromoCodeNKey;
			}
			set
			{
				if ((this._PromoCodeNKey != value))
				{
					this.OnPromoCodeNKeyChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeNKey = value;
					this.SendPropertyChanged("PromoCodeNKey");
					this.OnPromoCodeNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateFixedTermLoanApplication_REF_biPromoCode", Storage="_FCreateFixedTermLoanApplications", ThisKey="PromoCodeSKey", OtherKey="PromoCodeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateFixedTermLoanApplicationEntity> FCreateFixedTermLoanApplications
		{
			get
			{
				return this._FCreateFixedTermLoanApplications;
			}
			set
			{
				this._FCreateFixedTermLoanApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCodeEntity = this;
		}
		
		private void detach_FCreateFixedTermLoanApplications(FCreateFixedTermLoanApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.PromoCodeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.RepaymentRequest")]
	public partial class RepaymentRequestEntity : DbEntity<RepaymentRequestEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentRequestSKey;
		
		private System.Guid _RepaymentRequestNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FExtendLoanEntity> _FExtendLoans;
		
		private EntitySet<FRepayLoanEntity> _FRepayLoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentRequestSKeyChanging(int value);
    partial void OnRepaymentRequestSKeyChanged();
    partial void OnRepaymentRequestNKeyChanging(System.Guid value);
    partial void OnRepaymentRequestNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public RepaymentRequestEntity()
		{
			this._FExtendLoans = new EntitySet<FExtendLoanEntity>(new Action<FExtendLoanEntity>(this.attach_FExtendLoans), new Action<FExtendLoanEntity>(this.detach_FExtendLoans));
			this._FRepayLoans = new EntitySet<FRepayLoanEntity>(new Action<FRepayLoanEntity>(this.attach_FRepayLoans), new Action<FRepayLoanEntity>(this.detach_FRepayLoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentRequestSKey
		{
			get
			{
				return this._RepaymentRequestSKey;
			}
			set
			{
				if ((this._RepaymentRequestSKey != value))
				{
					this.OnRepaymentRequestSKeyChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestSKey = value;
					this.SendPropertyChanged("RepaymentRequestSKey");
					this.OnRepaymentRequestSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentRequestNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RepaymentRequestNKey
		{
			get
			{
				return this._RepaymentRequestNKey;
			}
			set
			{
				if ((this._RepaymentRequestNKey != value))
				{
					this.OnRepaymentRequestNKeyChanging(value);
					this.SendPropertyChanging();
					this._RepaymentRequestNKey = value;
					this.SendPropertyChanged("RepaymentRequestNKey");
					this.OnRepaymentRequestNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifExtendLoan_REF_biRepaymentRequest", Storage="_FExtendLoans", ThisKey="RepaymentRequestSKey", OtherKey="RepaymentRequestSKey", DeleteRule="NO ACTION")]
		public EntitySet<FExtendLoanEntity> FExtendLoans
		{
			get
			{
				return this._FExtendLoans;
			}
			set
			{
				this._FExtendLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifRepayLoan_REF_biRepaymentRequest", Storage="_FRepayLoans", ThisKey="RepaymentRequestSKey", OtherKey="RepaymentRequestSKey", DeleteRule="NO ACTION")]
		public EntitySet<FRepayLoanEntity> FRepayLoans
		{
			get
			{
				return this._FRepayLoans;
			}
			set
			{
				this._FRepayLoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = this;
		}
		
		private void detach_FExtendLoans(FExtendLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = null;
		}
		
		private void attach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = this;
		}
		
		private void detach_FRepayLoans(FRepayLoanEntity entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentRequestEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.ServiceBrokerLog")]
	public partial class ServiceBrokerLogEntity : DbEntity<ServiceBrokerLogEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ServiceBrokerLogId;
		
		private string _Source;
		
		private byte _LogMessageTypeId;
		
		private string _LogMessage;
		
		private System.DateTime _LogTimestamp;
		
		private EntityRef<LogMessageTypeEntity> _LogMessageTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceBrokerLogIdChanging(long value);
    partial void OnServiceBrokerLogIdChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnLogMessageTypeIdChanging(byte value);
    partial void OnLogMessageTypeIdChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnLogTimestampChanging(System.DateTime value);
    partial void OnLogTimestampChanged();
    #endregion
		
		public ServiceBrokerLogEntity()
		{
			this._LogMessageTypeEntity = default(EntityRef<LogMessageTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceBrokerLogId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ServiceBrokerLogId
		{
			get
			{
				return this._ServiceBrokerLogId;
			}
			set
			{
				if ((this._ServiceBrokerLogId != value))
				{
					this.OnServiceBrokerLogIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceBrokerLogId = value;
					this.SendPropertyChanged("ServiceBrokerLogId");
					this.OnServiceBrokerLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageTypeId", DbType="TinyInt NOT NULL")]
		public byte LogMessageTypeId
		{
			get
			{
				return this._LogMessageTypeId;
			}
			set
			{
				if ((this._LogMessageTypeId != value))
				{
					if (this._LogMessageTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogMessageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogMessageTypeId = value;
					this.SendPropertyChanged("LogMessageTypeId");
					this.OnLogMessageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTimestamp", DbType="DateTime2(0) NOT NULL")]
		public System.DateTime LogTimestamp
		{
			get
			{
				return this._LogTimestamp;
			}
			set
			{
				if ((this._LogTimestamp != value))
				{
					this.OnLogTimestampChanging(value);
					this.SendPropertyChanging();
					this._LogTimestamp = value;
					this.SendPropertyChanged("LogTimestamp");
					this.OnLogTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biServiceBrokerLog_REF_biLogMessageType", Storage="_LogMessageTypeEntity", ThisKey="LogMessageTypeId", OtherKey="LogMessageTypeId", IsForeignKey=true)]
		public LogMessageTypeEntity LogMessageTypeEntity
		{
			get
			{
				return this._LogMessageTypeEntity.Entity;
			}
			set
			{
				LogMessageTypeEntity previousValue = this._LogMessageTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._LogMessageTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogMessageTypeEntity.Entity = null;
						previousValue.ServiceBrokerLogs.Remove(this);
					}
					this._LogMessageTypeEntity.Entity = value;
					if ((value != null))
					{
						value.ServiceBrokerLogs.Add(this);
						this._LogMessageTypeId = value.LogMessageTypeId;
					}
					else
					{
						this._LogMessageTypeId = default(byte);
					}
					this.SendPropertyChanged("LogMessageTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Time")]
	public partial class TimeEntity : DbEntity<TimeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeSKey;
		
		private System.TimeSpan _TimeNKey;
		
		private byte _Hour;
		
		private byte _Minute;
		
		private byte _Second;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeSKeyChanging(int value);
    partial void OnTimeSKeyChanged();
    partial void OnTimeNKeyChanging(System.TimeSpan value);
    partial void OnTimeNKeyChanged();
    partial void OnHourChanging(byte value);
    partial void OnHourChanged();
    partial void OnMinuteChanging(byte value);
    partial void OnMinuteChanged();
    partial void OnSecondChanging(byte value);
    partial void OnSecondChanged();
    #endregion
		
		public TimeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TimeSKey
		{
			get
			{
				return this._TimeSKey;
			}
			set
			{
				if ((this._TimeSKey != value))
				{
					this.OnTimeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TimeSKey = value;
					this.SendPropertyChanged("TimeSKey");
					this.OnTimeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeNKey", DbType="Time(7) NOT NULL")]
		public System.TimeSpan TimeNKey
		{
			get
			{
				return this._TimeNKey;
			}
			set
			{
				if ((this._TimeNKey != value))
				{
					this.OnTimeNKeyChanging(value);
					this.SendPropertyChanging();
					this._TimeNKey = value;
					this.SendPropertyChanged("TimeNKey");
					this.OnTimeNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="TinyInt NOT NULL")]
		public byte Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="TinyInt NOT NULL")]
		public byte Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Second", DbType="TinyInt NOT NULL")]
		public byte Second
		{
			get
			{
				return this._Second;
			}
			set
			{
				if ((this._Second != value))
				{
					this.OnSecondChanging(value);
					this.SendPropertyChanging();
					this._Second = value;
					this.SendPropertyChanged("Second");
					this.OnSecondChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.Transaction")]
	public partial class TransactionEntity : DbEntity<TransactionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionSKey;
		
		private System.Guid _TransactionNKey;
		
		private string _Reference;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntityRef<BankGateWayTransactionEntity> _BankGateWayTransactionEntity;
		
		private EntityRef<FAggTransactionAllocationEntity> _FAggTransactionAllocationEntity;
		
		private EntityRef<FCreateTransactionEntity> _FCreateTransactionEntity;
		
		private EntityRef<FPaymentSentMessageEntity> _FPaymentSentMessageEntity;
		
		private EntityRef<FTransactionLedgerEntity> _FTransactionLedgerEntity;
		
		private EntityRef<FTransactionRequestEntity> _FTransactionRequestEntity;
		
		private EntitySet<FTransactionRequestDetailEntity> _FTransactionRequestDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionSKeyChanging(int value);
    partial void OnTransactionSKeyChanged();
    partial void OnTransactionNKeyChanging(System.Guid value);
    partial void OnTransactionNKeyChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public TransactionEntity()
		{
			this._BankGateWayTransactionEntity = default(EntityRef<BankGateWayTransactionEntity>);
			this._FAggTransactionAllocationEntity = default(EntityRef<FAggTransactionAllocationEntity>);
			this._FCreateTransactionEntity = default(EntityRef<FCreateTransactionEntity>);
			this._FPaymentSentMessageEntity = default(EntityRef<FPaymentSentMessageEntity>);
			this._FTransactionLedgerEntity = default(EntityRef<FTransactionLedgerEntity>);
			this._FTransactionRequestEntity = default(EntityRef<FTransactionRequestEntity>);
			this._FTransactionRequestDetails = new EntitySet<FTransactionRequestDetailEntity>(new Action<FTransactionRequestDetailEntity>(this.attach_FTransactionRequestDetails), new Action<FTransactionRequestDetailEntity>(this.detach_FTransactionRequestDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionSKey
		{
			get
			{
				return this._TransactionSKey;
			}
			set
			{
				if ((this._TransactionSKey != value))
				{
					this.OnTransactionSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSKey = value;
					this.SendPropertyChanged("TransactionSKey");
					this.OnTransactionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransactionNKey
		{
			get
			{
				return this._TransactionNKey;
			}
			set
			{
				if ((this._TransactionNKey != value))
				{
					this.OnTransactionNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionNKey = value;
					this.SendPropertyChanged("TransactionNKey");
					this.OnTransactionNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_biBankGateWayTransaction_REF_biTransaction", Storage="_BankGateWayTransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSkey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public BankGateWayTransactionEntity BankGateWayTransactionEntity
		{
			get
			{
				return this._BankGateWayTransactionEntity.Entity;
			}
			set
			{
				BankGateWayTransactionEntity previousValue = this._BankGateWayTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankGateWayTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankGateWayTransactionEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._BankGateWayTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("BankGateWayTransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biTransaction", Storage="_FAggTransactionAllocationEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FAggTransactionAllocationEntity FAggTransactionAllocationEntity
		{
			get
			{
				return this._FAggTransactionAllocationEntity.Entity;
			}
			set
			{
				FAggTransactionAllocationEntity previousValue = this._FAggTransactionAllocationEntity.Entity;
				if (((previousValue != value) 
							|| (this._FAggTransactionAllocationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FAggTransactionAllocationEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._FAggTransactionAllocationEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("FAggTransactionAllocationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransaction", Storage="_FCreateTransactionEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FCreateTransactionEntity FCreateTransactionEntity
		{
			get
			{
				return this._FCreateTransactionEntity.Entity;
			}
			set
			{
				FCreateTransactionEntity previousValue = this._FCreateTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._FCreateTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FCreateTransactionEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._FCreateTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("FCreateTransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifPaymentSentMessage_REF_biTransaction", Storage="_FPaymentSentMessageEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FPaymentSentMessageEntity FPaymentSentMessageEntity
		{
			get
			{
				return this._FPaymentSentMessageEntity.Entity;
			}
			set
			{
				FPaymentSentMessageEntity previousValue = this._FPaymentSentMessageEntity.Entity;
				if (((previousValue != value) 
							|| (this._FPaymentSentMessageEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FPaymentSentMessageEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._FPaymentSentMessageEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("FPaymentSentMessageEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransaction", Storage="_FTransactionLedgerEntity", ThisKey="TransactionSKey", OtherKey="TransactionSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FTransactionLedgerEntity FTransactionLedgerEntity
		{
			get
			{
				return this._FTransactionLedgerEntity.Entity;
			}
			set
			{
				FTransactionLedgerEntity previousValue = this._FTransactionLedgerEntity.Entity;
				if (((previousValue != value) 
							|| (this._FTransactionLedgerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FTransactionLedgerEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._FTransactionLedgerEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("FTransactionLedgerEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biTransaction", Storage="_FTransactionRequestEntity", ThisKey="TransactionSKey", OtherKey="TransactionSkey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FTransactionRequestEntity FTransactionRequestEntity
		{
			get
			{
				return this._FTransactionRequestEntity.Entity;
			}
			set
			{
				FTransactionRequestEntity previousValue = this._FTransactionRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._FTransactionRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FTransactionRequestEntity.Entity = null;
						previousValue.TransactionEntity = null;
					}
					this._FTransactionRequestEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionEntity = this;
					}
					this.SendPropertyChanged("FTransactionRequestEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biTransaction", Storage="_FTransactionRequestDetails", ThisKey="TransactionSKey", OtherKey="TransactionSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestDetailEntity> FTransactionRequestDetails
		{
			get
			{
				return this._FTransactionRequestDetails;
			}
			set
			{
				this._FTransactionRequestDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionEntity = this;
		}
		
		private void detach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransactionScope")]
	public partial class TransactionScopeEntity : DbEntity<TransactionScopeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _TransactionScopeSKey;
		
		private string _TransactionScopeNKey;
		
		private EntitySet<FCreateTransactionEntity> _FCreateTransactions;
		
		private EntitySet<FTransactionLedgerEntity> _FTransactionLedgers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionScopeSKeyChanging(byte value);
    partial void OnTransactionScopeSKeyChanged();
    partial void OnTransactionScopeNKeyChanging(string value);
    partial void OnTransactionScopeNKeyChanged();
    #endregion
		
		public TransactionScopeEntity()
		{
			this._FCreateTransactions = new EntitySet<FCreateTransactionEntity>(new Action<FCreateTransactionEntity>(this.attach_FCreateTransactions), new Action<FCreateTransactionEntity>(this.detach_FCreateTransactions));
			this._FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_FTransactionLedgers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionScopeSKey", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte TransactionScopeSKey
		{
			get
			{
				return this._TransactionScopeSKey;
			}
			set
			{
				if ((this._TransactionScopeSKey != value))
				{
					this.OnTransactionScopeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionScopeSKey = value;
					this.SendPropertyChanged("TransactionScopeSKey");
					this.OnTransactionScopeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionScopeNKey", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string TransactionScopeNKey
		{
			get
			{
				return this._TransactionScopeNKey;
			}
			set
			{
				if ((this._TransactionScopeNKey != value))
				{
					this.OnTransactionScopeNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionScopeNKey = value;
					this.SendPropertyChanged("TransactionScopeNKey");
					this.OnTransactionScopeNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransactionScope", Storage="_FCreateTransactions", ThisKey="TransactionScopeSKey", OtherKey="TransactionScopeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this._FCreateTransactions;
			}
			set
			{
				this._FCreateTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransactionScope", Storage="_FTransactionLedgers", ThisKey="TransactionScopeSKey", OtherKey="TransactionScopeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this._FTransactionLedgers;
			}
			set
			{
				this._FTransactionLedgers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionScopeEntity = this;
		}
		
		private void detach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionScopeEntity = null;
		}
		
		private void attach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionScopeEntity = this;
		}
		
		private void detach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionScopeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransactionStatus")]
	public partial class TransactionStatus : DbEntity<TransactionStatus>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _TransactionStatusSKey;
		
		private string _TransactionStatusNKey;
		
		private EntitySet<FTransactionRequestEntity> _FTransactionRequests;
		
		private EntitySet<FTransactionRequestDetailEntity> _FTransactionRequestDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionStatusSKeyChanging(short value);
    partial void OnTransactionStatusSKeyChanged();
    partial void OnTransactionStatusNKeyChanging(string value);
    partial void OnTransactionStatusNKeyChanged();
    #endregion
		
		public TransactionStatus()
		{
			this._FTransactionRequests = new EntitySet<FTransactionRequestEntity>(new Action<FTransactionRequestEntity>(this.attach_FTransactionRequests), new Action<FTransactionRequestEntity>(this.detach_FTransactionRequests));
			this._FTransactionRequestDetails = new EntitySet<FTransactionRequestDetailEntity>(new Action<FTransactionRequestDetailEntity>(this.attach_FTransactionRequestDetails), new Action<FTransactionRequestDetailEntity>(this.detach_FTransactionRequestDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatusSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short TransactionStatusSKey
		{
			get
			{
				return this._TransactionStatusSKey;
			}
			set
			{
				if ((this._TransactionStatusSKey != value))
				{
					this.OnTransactionStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatusSKey = value;
					this.SendPropertyChanged("TransactionStatusSKey");
					this.OnTransactionStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionStatusNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionStatusNKey
		{
			get
			{
				return this._TransactionStatusNKey;
			}
			set
			{
				if ((this._TransactionStatusNKey != value))
				{
					this.OnTransactionStatusNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionStatusNKey = value;
					this.SendPropertyChanged("TransactionStatusNKey");
					this.OnTransactionStatusNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequest_REF_biTransactionStatus", Storage="_FTransactionRequests", ThisKey="TransactionStatusSKey", OtherKey="TransactionStatusSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestEntity> FTransactionRequests
		{
			get
			{
				return this._FTransactionRequests;
			}
			set
			{
				this._FTransactionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionRequestDetails_REF_biTransactionStatus", Storage="_FTransactionRequestDetails", ThisKey="TransactionStatusSKey", OtherKey="TransactionStatusSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionRequestDetailEntity> FTransactionRequestDetails
		{
			get
			{
				return this._FTransactionRequestDetails;
			}
			set
			{
				this._FTransactionRequestDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = this;
		}
		
		private void detach_FTransactionRequests(FTransactionRequestEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = null;
		}
		
		private void attach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = this;
		}
		
		private void detach_FTransactionRequestDetails(FTransactionRequestDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransactionType")]
	public partial class TransactionTypeEntity : DbEntity<TransactionTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _TransactionTypeSKey;
		
		private string _TransactionTypeNKey;
		
		private EntitySet<FAggTransactionAllocationEntity> _FAggTransactionAllocations;
		
		private EntitySet<FCreateTransactionEntity> _FCreateTransactions;
		
		private EntitySet<FTransactionLedgerEntity> _FTransactionLedgers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionTypeSKeyChanging(short value);
    partial void OnTransactionTypeSKeyChanged();
    partial void OnTransactionTypeNKeyChanging(string value);
    partial void OnTransactionTypeNKeyChanged();
    #endregion
		
		public TransactionTypeEntity()
		{
			this._FAggTransactionAllocations = new EntitySet<FAggTransactionAllocationEntity>(new Action<FAggTransactionAllocationEntity>(this.attach_FAggTransactionAllocations), new Action<FAggTransactionAllocationEntity>(this.detach_FAggTransactionAllocations));
			this._FCreateTransactions = new EntitySet<FCreateTransactionEntity>(new Action<FCreateTransactionEntity>(this.attach_FCreateTransactions), new Action<FCreateTransactionEntity>(this.detach_FCreateTransactions));
			this._FTransactionLedgers = new EntitySet<FTransactionLedgerEntity>(new Action<FTransactionLedgerEntity>(this.attach_FTransactionLedgers), new Action<FTransactionLedgerEntity>(this.detach_FTransactionLedgers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeSKey", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short TransactionTypeSKey
		{
			get
			{
				return this._TransactionTypeSKey;
			}
			set
			{
				if ((this._TransactionTypeSKey != value))
				{
					this.OnTransactionTypeSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeSKey = value;
					this.SendPropertyChanged("TransactionTypeSKey");
					this.OnTransactionTypeSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionTypeNKey
		{
			get
			{
				return this._TransactionTypeNKey;
			}
			set
			{
				if ((this._TransactionTypeNKey != value))
				{
					this.OnTransactionTypeNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeNKey = value;
					this.SendPropertyChanged("TransactionTypeNKey");
					this.OnTransactionTypeNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifAggTransactionAllocation_REF_biTransactionType", Storage="_FAggTransactionAllocations", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FAggTransactionAllocationEntity> FAggTransactionAllocations
		{
			get
			{
				return this._FAggTransactionAllocations;
			}
			set
			{
				this._FAggTransactionAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifCreateTransaction_REF_biTransactionType", Storage="_FCreateTransactions", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FCreateTransactionEntity> FCreateTransactions
		{
			get
			{
				return this._FCreateTransactions;
			}
			set
			{
				this._FCreateTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransactionLedger_REF_biTransactionType", Storage="_FTransactionLedgers", ThisKey="TransactionTypeSKey", OtherKey="TransactionTypeSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransactionLedgerEntity> FTransactionLedgers
		{
			get
			{
				return this._FTransactionLedgers;
			}
			set
			{
				this._FTransactionLedgers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAggTransactionAllocations(FAggTransactionAllocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = this;
		}
		
		private void detach_FAggTransactionAllocations(FAggTransactionAllocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = null;
		}
		
		private void attach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = this;
		}
		
		private void detach_FCreateTransactions(FCreateTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = null;
		}
		
		private void attach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = this;
		}
		
		private void detach_FTransactionLedgers(FTransactionLedgerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransunionConsumer")]
	public partial class TransunionConsumerEntity : DbEntity<TransunionConsumerEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransunionConsumerSKey;
		
		private int _TransunionConsumerNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntitySet<FTransunionResponseEntity> _FTransunionResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransunionConsumerSKeyChanging(int value);
    partial void OnTransunionConsumerSKeyChanged();
    partial void OnTransunionConsumerNKeyChanging(int value);
    partial void OnTransunionConsumerNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public TransunionConsumerEntity()
		{
			this._FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_FTransunionResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionConsumerSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransunionConsumerSKey
		{
			get
			{
				return this._TransunionConsumerSKey;
			}
			set
			{
				if ((this._TransunionConsumerSKey != value))
				{
					this.OnTransunionConsumerSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionConsumerSKey = value;
					this.SendPropertyChanged("TransunionConsumerSKey");
					this.OnTransunionConsumerSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionConsumerNKey", DbType="Int NOT NULL")]
		public int TransunionConsumerNKey
		{
			get
			{
				return this._TransunionConsumerNKey;
			}
			set
			{
				if ((this._TransunionConsumerNKey != value))
				{
					this.OnTransunionConsumerNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionConsumerNKey = value;
					this.SendPropertyChanged("TransunionConsumerNKey");
					this.OnTransunionConsumerNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionConsumer", Storage="_FTransunionResponses", ThisKey="TransunionConsumerSKey", OtherKey="TransunionConsumerSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this._FTransunionResponses;
			}
			set
			{
				this._FTransunionResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionConsumerEntity = this;
		}
		
		private void detach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionConsumerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransunionResponse")]
	public partial class TransunionResponseEntity : DbEntity<TransunionResponseEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransunionResponseSKey;
		
		private System.Guid _TransunionResponseNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntityRef<FTransunionResponseEntity> _FTransunionResponseEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransunionResponseSKeyChanging(int value);
    partial void OnTransunionResponseSKeyChanged();
    partial void OnTransunionResponseNKeyChanging(System.Guid value);
    partial void OnTransunionResponseNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public TransunionResponseEntity()
		{
			this._FTransunionResponseEntity = default(EntityRef<FTransunionResponseEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransunionResponseSKey
		{
			get
			{
				return this._TransunionResponseSKey;
			}
			set
			{
				if ((this._TransunionResponseSKey != value))
				{
					this.OnTransunionResponseSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseSKey = value;
					this.SendPropertyChanged("TransunionResponseSKey");
					this.OnTransunionResponseSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransunionResponseNKey
		{
			get
			{
				return this._TransunionResponseNKey;
			}
			set
			{
				if ((this._TransunionResponseNKey != value))
				{
					this.OnTransunionResponseNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseNKey = value;
					this.SendPropertyChanged("TransunionResponseNKey");
					this.OnTransunionResponseNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionResponse", Storage="_FTransunionResponseEntity", ThisKey="TransunionResponseSKey", OtherKey="TransunionResponseSKey", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public FTransunionResponseEntity FTransunionResponseEntity
		{
			get
			{
				return this._FTransunionResponseEntity.Entity;
			}
			set
			{
				FTransunionResponseEntity previousValue = this._FTransunionResponseEntity.Entity;
				if (((previousValue != value) 
							|| (this._FTransunionResponseEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FTransunionResponseEntity.Entity = null;
						previousValue.TransunionResponseEntity = null;
					}
					this._FTransunionResponseEntity.Entity = value;
					if ((value != null))
					{
						value.TransunionResponseEntity = this;
					}
					this.SendPropertyChanged("FTransunionResponseEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransunionResponseStatus")]
	public partial class TransunionResponseStatus : DbEntity<TransunionResponseStatus>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransunionResponseStatusSKey;
		
		private string _TransunionResponseStatusNKey;
		
		private EntitySet<FTransunionResponseEntity> _FTransunionResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransunionResponseStatusSKeyChanging(int value);
    partial void OnTransunionResponseStatusSKeyChanged();
    partial void OnTransunionResponseStatusNKeyChanging(string value);
    partial void OnTransunionResponseStatusNKeyChanged();
    #endregion
		
		public TransunionResponseStatus()
		{
			this._FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_FTransunionResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseStatusSKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransunionResponseStatusSKey
		{
			get
			{
				return this._TransunionResponseStatusSKey;
			}
			set
			{
				if ((this._TransunionResponseStatusSKey != value))
				{
					this.OnTransunionResponseStatusSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseStatusSKey = value;
					this.SendPropertyChanged("TransunionResponseStatusSKey");
					this.OnTransunionResponseStatusSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionResponseStatusNKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransunionResponseStatusNKey
		{
			get
			{
				return this._TransunionResponseStatusNKey;
			}
			set
			{
				if ((this._TransunionResponseStatusNKey != value))
				{
					this.OnTransunionResponseStatusNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionResponseStatusNKey = value;
					this.SendPropertyChanged("TransunionResponseStatusNKey");
					this.OnTransunionResponseStatusNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionResponseStatus", Storage="_FTransunionResponses", ThisKey="TransunionResponseStatusSKey", OtherKey="TransunionResponseStatusSkey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this._FTransunionResponses;
			}
			set
			{
				this._FTransunionResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionResponseStatus = this;
		}
		
		private void detach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionResponseStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.TransunionSaga")]
	public partial class TransunionSagaEntity : DbEntity<TransunionSagaEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransunionSagaSKey;
		
		private System.Guid _TransunionSagaNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private EntitySet<FTransunionResponseEntity> _FTransunionResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransunionSagaSKeyChanging(int value);
    partial void OnTransunionSagaSKeyChanged();
    partial void OnTransunionSagaNKeyChanging(System.Guid value);
    partial void OnTransunionSagaNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public TransunionSagaEntity()
		{
			this._FTransunionResponses = new EntitySet<FTransunionResponseEntity>(new Action<FTransunionResponseEntity>(this.attach_FTransunionResponses), new Action<FTransunionResponseEntity>(this.detach_FTransunionResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionSagaSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransunionSagaSKey
		{
			get
			{
				return this._TransunionSagaSKey;
			}
			set
			{
				if ((this._TransunionSagaSKey != value))
				{
					this.OnTransunionSagaSKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionSagaSKey = value;
					this.SendPropertyChanged("TransunionSagaSKey");
					this.OnTransunionSagaSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransunionSagaNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransunionSagaNKey
		{
			get
			{
				return this._TransunionSagaNKey;
			}
			set
			{
				if ((this._TransunionSagaNKey != value))
				{
					this.OnTransunionSagaNKeyChanging(value);
					this.SendPropertyChanging();
					this._TransunionSagaNKey = value;
					this.SendPropertyChanged("TransunionSagaNKey");
					this.OnTransunionSagaNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifTransunionResponse_REF_biTransunionSaga", Storage="_FTransunionResponses", ThisKey="TransunionSagaSKey", OtherKey="TransunionSagaSKey", DeleteRule="NO ACTION")]
		public EntitySet<FTransunionResponseEntity> FTransunionResponses
		{
			get
			{
				return this._FTransunionResponses;
			}
			set
			{
				this._FTransunionResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionSagaEntity = this;
		}
		
		private void detach_FTransunionResponses(FTransunionResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransunionSagaEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.User")]
	public partial class UserEntity : DbEntity<UserEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _UserSKey;
		
		private int _UserNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserSKeyChanging(short value);
    partial void OnUserSKeyChanged();
    partial void OnUserNKeyChanging(int value);
    partial void OnUserNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    #endregion
		
		public UserEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSKey", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short UserSKey
		{
			get
			{
				return this._UserSKey;
			}
			set
			{
				if ((this._UserSKey != value))
				{
					this.OnUserSKeyChanging(value);
					this.SendPropertyChanging();
					this._UserSKey = value;
					this.SendPropertyChanged("UserSKey");
					this.OnUserSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNKey", DbType="Int NOT NULL")]
		public int UserNKey
		{
			get
			{
				return this._UserNKey;
			}
			set
			{
				if ((this._UserNKey != value))
				{
					this.OnUserNKeyChanging(value);
					this.SendPropertyChanging();
					this._UserNKey = value;
					this.SendPropertyChanged("UserNKey");
					this.OnUserNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.UserAction")]
	public partial class UserActionEntity : DbEntity<UserActionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserActionSKey;
		
		private System.Guid _UserActionNKey;
		
		private System.DateTime _CreatedAt;
		
		private long _CreatedByMessageArchiveId;
		
		private System.DateTime _UpdatedAt;
		
		private long _UpdatedByMessageArchiveId;
		
		private EntitySet<FSubmitCounterOfferEntity> _FSubmitCounterOffers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserActionSKeyChanging(int value);
    partial void OnUserActionSKeyChanged();
    partial void OnUserActionNKeyChanging(System.Guid value);
    partial void OnUserActionNKeyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnCreatedByMessageArchiveIdChanging(long value);
    partial void OnCreatedByMessageArchiveIdChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    partial void OnUpdatedByMessageArchiveIdChanging(long value);
    partial void OnUpdatedByMessageArchiveIdChanged();
    #endregion
		
		public UserActionEntity()
		{
			this._FSubmitCounterOffers = new EntitySet<FSubmitCounterOfferEntity>(new Action<FSubmitCounterOfferEntity>(this.attach_FSubmitCounterOffers), new Action<FSubmitCounterOfferEntity>(this.detach_FSubmitCounterOffers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionSKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserActionSKey
		{
			get
			{
				return this._UserActionSKey;
			}
			set
			{
				if ((this._UserActionSKey != value))
				{
					this.OnUserActionSKeyChanging(value);
					this.SendPropertyChanging();
					this._UserActionSKey = value;
					this.SendPropertyChanged("UserActionSKey");
					this.OnUserActionSKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionNKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserActionNKey
		{
			get
			{
				return this._UserActionNKey;
			}
			set
			{
				if ((this._UserActionNKey != value))
				{
					this.OnUserActionNKeyChanging(value);
					this.SendPropertyChanging();
					this._UserActionNKey = value;
					this.SendPropertyChanged("UserActionNKey");
					this.OnUserActionNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long CreatedByMessageArchiveId
		{
			get
			{
				return this._CreatedByMessageArchiveId;
			}
			set
			{
				if ((this._CreatedByMessageArchiveId != value))
				{
					this.OnCreatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByMessageArchiveId = value;
					this.SendPropertyChanged("CreatedByMessageArchiveId");
					this.OnCreatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByMessageArchiveId", DbType="BigInt NOT NULL")]
		public long UpdatedByMessageArchiveId
		{
			get
			{
				return this._UpdatedByMessageArchiveId;
			}
			set
			{
				if ((this._UpdatedByMessageArchiveId != value))
				{
					this.OnUpdatedByMessageArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByMessageArchiveId = value;
					this.SendPropertyChanged("UpdatedByMessageArchiveId");
					this.OnUpdatedByMessageArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bifSubmitCounterOffer_REF_biUserAction", Storage="_FSubmitCounterOffers", ThisKey="UserActionSKey", OtherKey="UserActionSKey", DeleteRule="NO ACTION")]
		public EntitySet<FSubmitCounterOfferEntity> FSubmitCounterOffers
		{
			get
			{
				return this._FSubmitCounterOffers;
			}
			set
			{
				this._FSubmitCounterOffers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FSubmitCounterOffers(FSubmitCounterOfferEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserActionEntity = this;
		}
		
		private void detach_FSubmitCounterOffers(FSubmitCounterOfferEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserActionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bi.WongaMessage")]
	public partial class WongaMessageEntity : DbEntity<WongaMessageEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WongaMessage;
		
		private bool _ProcessMessageEnabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWongaMessageChanging(string value);
    partial void OnWongaMessageChanged();
    partial void OnProcessMessageEnabledChanging(bool value);
    partial void OnProcessMessageEnabledChanged();
    #endregion
		
		public WongaMessageEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WongaMessage", DbType="NVarChar(218) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WongaMessage
		{
			get
			{
				return this._WongaMessage;
			}
			set
			{
				if ((this._WongaMessage != value))
				{
					this.OnWongaMessageChanging(value);
					this.SendPropertyChanging();
					this._WongaMessage = value;
					this.SendPropertyChanged("WongaMessage");
					this.OnWongaMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessMessageEnabled", DbType="Bit NOT NULL")]
		public bool ProcessMessageEnabled
		{
			get
			{
				return this._ProcessMessageEnabled;
			}
			set
			{
				if ((this._ProcessMessageEnabled != value))
				{
					this.OnProcessMessageEnabledChanging(value);
					this.SendPropertyChanging();
					this._ProcessMessageEnabled = value;
					this.SendPropertyChanged("ProcessMessageEnabled");
					this.OnProcessMessageEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
