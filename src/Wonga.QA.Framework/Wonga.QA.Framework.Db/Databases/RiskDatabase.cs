#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wonga.QA.Framework.Db.Risk
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Risk")]
	public partial class RiskDatabase : DbDatabase<RiskDatabase>
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplicationBehaviourEntity(ApplicationBehaviourEntity instance);
    partial void UpdateApplicationBehaviourEntity(ApplicationBehaviourEntity instance);
    partial void DeleteApplicationBehaviourEntity(ApplicationBehaviourEntity instance);
    partial void InsertCheckpointDefinitionEntity(CheckpointDefinitionEntity instance);
    partial void UpdateCheckpointDefinitionEntity(CheckpointDefinitionEntity instance);
    partial void DeleteCheckpointDefinitionEntity(CheckpointDefinitionEntity instance);
    partial void InsertConfigurationRecordEntity(ConfigurationRecordEntity instance);
    partial void UpdateConfigurationRecordEntity(ConfigurationRecordEntity instance);
    partial void DeleteConfigurationRecordEntity(ConfigurationRecordEntity instance);
    partial void InsertCreditBureauDataCacheEntity(CreditBureauDataCacheEntity instance);
    partial void UpdateCreditBureauDataCacheEntity(CreditBureauDataCacheEntity instance);
    partial void DeleteCreditBureauDataCacheEntity(CreditBureauDataCacheEntity instance);
    partial void InsertCreditBureauDataExtractedEntity(CreditBureauDataExtractedEntity instance);
    partial void UpdateCreditBureauDataExtractedEntity(CreditBureauDataExtractedEntity instance);
    partial void DeleteCreditBureauDataExtractedEntity(CreditBureauDataExtractedEntity instance);
    partial void InsertCustomerDetailChangeEntity(CustomerDetailChangeEntity instance);
    partial void UpdateCustomerDetailChangeEntity(CustomerDetailChangeEntity instance);
    partial void DeleteCustomerDetailChangeEntity(CustomerDetailChangeEntity instance);
    partial void InsertDecisionDataDefinitionEntity(DecisionDataDefinitionEntity instance);
    partial void UpdateDecisionDataDefinitionEntity(DecisionDataDefinitionEntity instance);
    partial void DeleteDecisionDataDefinitionEntity(DecisionDataDefinitionEntity instance);
    partial void InsertEmploymentDetailEntity(EmploymentDetailEntity instance);
    partial void UpdateEmploymentDetailEntity(EmploymentDetailEntity instance);
    partial void DeleteEmploymentDetailEntity(EmploymentDetailEntity instance);
    partial void InsertFactorEntity(FactorEntity instance);
    partial void UpdateFactorEntity(FactorEntity instance);
    partial void DeleteFactorEntity(FactorEntity instance);
    partial void InsertInternalSubscriptionEntity(InternalSubscriptionEntity instance);
    partial void UpdateInternalSubscriptionEntity(InternalSubscriptionEntity instance);
    partial void DeleteInternalSubscriptionEntity(InternalSubscriptionEntity instance);
    partial void InsertIovationDetailEntity(IovationDetailEntity instance);
    partial void UpdateIovationDetailEntity(IovationDetailEntity instance);
    partial void DeleteIovationDetailEntity(IovationDetailEntity instance);
    partial void InsertIovationResultEntity(IovationResultEntity instance);
    partial void UpdateIovationResultEntity(IovationResultEntity instance);
    partial void DeleteIovationResultEntity(IovationResultEntity instance);
    partial void InsertMSSQLDeploy(MSSQLDeploy instance);
    partial void UpdateMSSQLDeploy(MSSQLDeploy instance);
    partial void DeleteMSSQLDeploy(MSSQLDeploy instance);
    partial void InsertPmmlFactorEntity(PmmlFactorEntity instance);
    partial void UpdatePmmlFactorEntity(PmmlFactorEntity instance);
    partial void DeletePmmlFactorEntity(PmmlFactorEntity instance);
    partial void InsertPostcodeUKEntity(PostcodeUKEntity instance);
    partial void UpdatePostcodeUKEntity(PostcodeUKEntity instance);
    partial void DeletePostcodeUKEntity(PostcodeUKEntity instance);
    partial void InsertRiskAccountHomePhoneEntity(RiskAccountHomePhoneEntity instance);
    partial void UpdateRiskAccountHomePhoneEntity(RiskAccountHomePhoneEntity instance);
    partial void DeleteRiskAccountHomePhoneEntity(RiskAccountHomePhoneEntity instance);
    partial void InsertRiskAccountMobilePhoneEntity(RiskAccountMobilePhoneEntity instance);
    partial void UpdateRiskAccountMobilePhoneEntity(RiskAccountMobilePhoneEntity instance);
    partial void DeleteRiskAccountMobilePhoneEntity(RiskAccountMobilePhoneEntity instance);
    partial void InsertRiskAccountEntity(RiskAccountEntity instance);
    partial void UpdateRiskAccountEntity(RiskAccountEntity instance);
    partial void DeleteRiskAccountEntity(RiskAccountEntity instance);
    partial void InsertRiskApplicationEntity(RiskApplicationEntity instance);
    partial void UpdateRiskApplicationEntity(RiskApplicationEntity instance);
    partial void DeleteRiskApplicationEntity(RiskApplicationEntity instance);
    partial void InsertRiskBankAccountEntity(RiskBankAccountEntity instance);
    partial void UpdateRiskBankAccountEntity(RiskBankAccountEntity instance);
    partial void DeleteRiskBankAccountEntity(RiskBankAccountEntity instance);
    partial void InsertRiskBusinessApplicationEntity(RiskBusinessApplicationEntity instance);
    partial void UpdateRiskBusinessApplicationEntity(RiskBusinessApplicationEntity instance);
    partial void DeleteRiskBusinessApplicationEntity(RiskBusinessApplicationEntity instance);
    partial void InsertRiskDecisionDataEntity(RiskDecisionDataEntity instance);
    partial void UpdateRiskDecisionDataEntity(RiskDecisionDataEntity instance);
    partial void DeleteRiskDecisionDataEntity(RiskDecisionDataEntity instance);
    partial void InsertRiskGuarantorPartialDetailEntity(RiskGuarantorPartialDetailEntity instance);
    partial void UpdateRiskGuarantorPartialDetailEntity(RiskGuarantorPartialDetailEntity instance);
    partial void DeleteRiskGuarantorPartialDetailEntity(RiskGuarantorPartialDetailEntity instance);
    partial void InsertRiskIovationPostcodeEntity(RiskIovationPostcodeEntity instance);
    partial void UpdateRiskIovationPostcodeEntity(RiskIovationPostcodeEntity instance);
    partial void DeleteRiskIovationPostcodeEntity(RiskIovationPostcodeEntity instance);
    partial void InsertRiskPaymentCardEntity(RiskPaymentCardEntity instance);
    partial void UpdateRiskPaymentCardEntity(RiskPaymentCardEntity instance);
    partial void DeleteRiskPaymentCardEntity(RiskPaymentCardEntity instance);
    partial void InsertRiskWorkflowEntity(RiskWorkflowEntity instance);
    partial void UpdateRiskWorkflowEntity(RiskWorkflowEntity instance);
    partial void DeleteRiskWorkflowEntity(RiskWorkflowEntity instance);
    partial void InsertSocialDetailEntity(SocialDetailEntity instance);
    partial void UpdateSocialDetailEntity(SocialDetailEntity instance);
    partial void DeleteSocialDetailEntity(SocialDetailEntity instance);
    partial void InsertUserActionEntity(UserActionEntity instance);
    partial void UpdateUserActionEntity(UserActionEntity instance);
    partial void DeleteUserActionEntity(UserActionEntity instance);
    partial void InsertUserActionTypeEntity(UserActionTypeEntity instance);
    partial void UpdateUserActionTypeEntity(UserActionTypeEntity instance);
    partial void DeleteUserActionTypeEntity(UserActionTypeEntity instance);
    partial void InsertVerificationDefinitionEntity(VerificationDefinitionEntity instance);
    partial void UpdateVerificationDefinitionEntity(VerificationDefinitionEntity instance);
    partial void DeleteVerificationDefinitionEntity(VerificationDefinitionEntity instance);
    partial void InsertWorkflowCheckpointEntity(WorkflowCheckpointEntity instance);
    partial void UpdateWorkflowCheckpointEntity(WorkflowCheckpointEntity instance);
    partial void DeleteWorkflowCheckpointEntity(WorkflowCheckpointEntity instance);
    partial void InsertWorkflowVerificationEntity(WorkflowVerificationEntity instance);
    partial void UpdateWorkflowVerificationEntity(WorkflowVerificationEntity instance);
    partial void DeleteWorkflowVerificationEntity(WorkflowVerificationEntity instance);
    #endregion
		
		public RiskDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiskDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiskDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiskDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApplicationBehaviourEntity> ApplicationBehaviours
		{
			get
			{
				return this.GetTable<ApplicationBehaviourEntity>();
			}
		}
		
		public System.Data.Linq.Table<CheckpointDefinitionEntity> CheckpointDefinitions
		{
			get
			{
				return this.GetTable<CheckpointDefinitionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationRecordEntity> ConfigurationRecords
		{
			get
			{
				return this.GetTable<ConfigurationRecordEntity>();
			}
		}
		
		public System.Data.Linq.Table<CreditBureauDataCacheEntity> CreditBureauDataCaches
		{
			get
			{
				return this.GetTable<CreditBureauDataCacheEntity>();
			}
		}
		
		public System.Data.Linq.Table<CreditBureauDataExtractedEntity> CreditBureauDataExtracteds
		{
			get
			{
				return this.GetTable<CreditBureauDataExtractedEntity>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDetailChangeEntity> CustomerDetailChanges
		{
			get
			{
				return this.GetTable<CustomerDetailChangeEntity>();
			}
		}
		
		public System.Data.Linq.Table<DecisionDataDefinitionEntity> DecisionDataDefinitions
		{
			get
			{
				return this.GetTable<DecisionDataDefinitionEntity>();
			}
		}
		
		public System.Data.Linq.Table<EmploymentDetailEntity> EmploymentDetails
		{
			get
			{
				return this.GetTable<EmploymentDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<FactorEntity> Factors
		{
			get
			{
				return this.GetTable<FactorEntity>();
			}
		}
		
		public System.Data.Linq.Table<InternalSubscriptionEntity> InternalSubscriptions
		{
			get
			{
				return this.GetTable<InternalSubscriptionEntity>();
			}
		}
		
		public System.Data.Linq.Table<IovationDetailEntity> IovationDetails
		{
			get
			{
				return this.GetTable<IovationDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<IovationResultEntity> IovationResults
		{
			get
			{
				return this.GetTable<IovationResultEntity>();
			}
		}
		
		public System.Data.Linq.Table<MSSQLDeploy> MSSQLDeploys
		{
			get
			{
				return this.GetTable<MSSQLDeploy>();
			}
		}
		
		public System.Data.Linq.Table<PmmlFactorEntity> PmmlFactors
		{
			get
			{
				return this.GetTable<PmmlFactorEntity>();
			}
		}
		
		public System.Data.Linq.Table<PostcodeUKEntity> PostcodeUKs
		{
			get
			{
				return this.GetTable<PostcodeUKEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskAccountHomePhoneEntity> RiskAccountHomePhones
		{
			get
			{
				return this.GetTable<RiskAccountHomePhoneEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskAccountMobilePhoneEntity> RiskAccountMobilePhones
		{
			get
			{
				return this.GetTable<RiskAccountMobilePhoneEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskAccountEntity> RiskAccounts
		{
			get
			{
				return this.GetTable<RiskAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskApplicationEntity> RiskApplications
		{
			get
			{
				return this.GetTable<RiskApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskBankAccountEntity> RiskBankAccounts
		{
			get
			{
				return this.GetTable<RiskBankAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskBusinessApplicationEntity> RiskBusinessApplications
		{
			get
			{
				return this.GetTable<RiskBusinessApplicationEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskDecisionDataEntity> RiskDecisionDatas
		{
			get
			{
				return this.GetTable<RiskDecisionDataEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskGuarantorPartialDetailEntity> RiskGuarantorPartialDetails
		{
			get
			{
				return this.GetTable<RiskGuarantorPartialDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskIovationPostcodeEntity> RiskIovationPostcodes
		{
			get
			{
				return this.GetTable<RiskIovationPostcodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskPaymentCardEntity> RiskPaymentCards
		{
			get
			{
				return this.GetTable<RiskPaymentCardEntity>();
			}
		}
		
		public System.Data.Linq.Table<RiskWorkflowEntity> RiskWorkflows
		{
			get
			{
				return this.GetTable<RiskWorkflowEntity>();
			}
		}
		
		public System.Data.Linq.Table<SocialDetailEntity> SocialDetails
		{
			get
			{
				return this.GetTable<SocialDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserActionEntity> UserActions
		{
			get
			{
				return this.GetTable<UserActionEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserActionTypeEntity> UserActionTypes
		{
			get
			{
				return this.GetTable<UserActionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<VerificationDefinitionEntity> VerificationDefinitions
		{
			get
			{
				return this.GetTable<VerificationDefinitionEntity>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowCheckpointEntity> WorkflowCheckpoints
		{
			get
			{
				return this.GetTable<WorkflowCheckpointEntity>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowVerificationEntity> WorkflowVerifications
		{
			get
			{
				return this.GetTable<WorkflowVerificationEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.ApplicationBehaviour")]
	public partial class ApplicationBehaviourEntity : DbEntity<ApplicationBehaviourEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationBehaviourId;
		
		private System.Guid _ApplicationId;
		
		private byte _SliderTermPosition;
		
		private byte _SliderAmountPosition;
		
		private EntitySet<RiskApplicationEntity> _RiskApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationBehaviourIdChanging(int value);
    partial void OnApplicationBehaviourIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnSliderTermPositionChanging(byte value);
    partial void OnSliderTermPositionChanged();
    partial void OnSliderAmountPositionChanging(byte value);
    partial void OnSliderAmountPositionChanged();
    #endregion
		
		public ApplicationBehaviourEntity()
		{
			this._RiskApplications = new EntitySet<RiskApplicationEntity>(new Action<RiskApplicationEntity>(this.attach_RiskApplications), new Action<RiskApplicationEntity>(this.detach_RiskApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationBehaviourId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationBehaviourId
		{
			get
			{
				return this._ApplicationBehaviourId;
			}
			set
			{
				if ((this._ApplicationBehaviourId != value))
				{
					this.OnApplicationBehaviourIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationBehaviourId = value;
					this.SendPropertyChanged("ApplicationBehaviourId");
					this.OnApplicationBehaviourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SliderTermPosition", DbType="TinyInt NOT NULL")]
		public byte SliderTermPosition
		{
			get
			{
				return this._SliderTermPosition;
			}
			set
			{
				if ((this._SliderTermPosition != value))
				{
					this.OnSliderTermPositionChanging(value);
					this.SendPropertyChanging();
					this._SliderTermPosition = value;
					this.SendPropertyChanged("SliderTermPosition");
					this.OnSliderTermPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SliderAmountPosition", DbType="TinyInt NOT NULL")]
		public byte SliderAmountPosition
		{
			get
			{
				return this._SliderAmountPosition;
			}
			set
			{
				if ((this._SliderAmountPosition != value))
				{
					this.OnSliderAmountPositionChanging(value);
					this.SendPropertyChanging();
					this._SliderAmountPosition = value;
					this.SendPropertyChanged("SliderAmountPosition");
					this.OnSliderAmountPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskApplications_ApplicationBehaviour", Storage="_RiskApplications", ThisKey="ApplicationBehaviourId", OtherKey="ApplicationBehaviourId", DeleteRule="NO ACTION")]
		public EntitySet<RiskApplicationEntity> RiskApplications
		{
			get
			{
				return this._RiskApplications;
			}
			set
			{
				this._RiskApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RiskApplications(RiskApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationBehaviourEntity = this;
		}
		
		private void detach_RiskApplications(RiskApplicationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationBehaviourEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.CheckpointDefinitions")]
	public partial class CheckpointDefinitionEntity : DbEntity<CheckpointDefinitionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CheckpointDefinitionId;
		
		private string _TypeName;
		
		private string _Name;
		
		private string _FailedDescription;
		
		private string _ResolutionAdviceKey;
		
		private System.Guid _CheckpointId;
		
		private EntitySet<WorkflowCheckpointEntity> _WorkflowCheckpoints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckpointDefinitionIdChanging(int value);
    partial void OnCheckpointDefinitionIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFailedDescriptionChanging(string value);
    partial void OnFailedDescriptionChanged();
    partial void OnResolutionAdviceKeyChanging(string value);
    partial void OnResolutionAdviceKeyChanged();
    partial void OnCheckpointIdChanging(System.Guid value);
    partial void OnCheckpointIdChanged();
    #endregion
		
		public CheckpointDefinitionEntity()
		{
			this._WorkflowCheckpoints = new EntitySet<WorkflowCheckpointEntity>(new Action<WorkflowCheckpointEntity>(this.attach_WorkflowCheckpoints), new Action<WorkflowCheckpointEntity>(this.detach_WorkflowCheckpoints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckpointDefinitionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CheckpointDefinitionId
		{
			get
			{
				return this._CheckpointDefinitionId;
			}
			set
			{
				if ((this._CheckpointDefinitionId != value))
				{
					this.OnCheckpointDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._CheckpointDefinitionId = value;
					this.SendPropertyChanged("CheckpointDefinitionId");
					this.OnCheckpointDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedDescription", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string FailedDescription
		{
			get
			{
				return this._FailedDescription;
			}
			set
			{
				if ((this._FailedDescription != value))
				{
					this.OnFailedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FailedDescription = value;
					this.SendPropertyChanged("FailedDescription");
					this.OnFailedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionAdviceKey", DbType="VarChar(50)")]
		public string ResolutionAdviceKey
		{
			get
			{
				return this._ResolutionAdviceKey;
			}
			set
			{
				if ((this._ResolutionAdviceKey != value))
				{
					this.OnResolutionAdviceKeyChanging(value);
					this.SendPropertyChanging();
					this._ResolutionAdviceKey = value;
					this.SendPropertyChanged("ResolutionAdviceKey");
					this.OnResolutionAdviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckpointId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CheckpointId
		{
			get
			{
				return this._CheckpointId;
			}
			set
			{
				if ((this._CheckpointId != value))
				{
					this.OnCheckpointIdChanging(value);
					this.SendPropertyChanging();
					this._CheckpointId = value;
					this.SendPropertyChanged("CheckpointId");
					this.OnCheckpointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowCheckpoints_CheckpointDefinitions", Storage="_WorkflowCheckpoints", ThisKey="CheckpointDefinitionId", OtherKey="CheckpointDefinitionId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowCheckpointEntity> WorkflowCheckpoints
		{
			get
			{
				return this._WorkflowCheckpoints;
			}
			set
			{
				this._WorkflowCheckpoints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.CheckpointDefinitionEntity = this;
		}
		
		private void detach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.CheckpointDefinitionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.ConfigurationRecords")]
	public partial class ConfigurationRecordEntity : DbEntity<ConfigurationRecordEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigurationRecordId;
		
		private string _Data;
		
		private EntitySet<WorkflowVerificationEntity> _WorkflowVerifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigurationRecordIdChanging(int value);
    partial void OnConfigurationRecordIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public ConfigurationRecordEntity()
		{
			this._WorkflowVerifications = new EntitySet<WorkflowVerificationEntity>(new Action<WorkflowVerificationEntity>(this.attach_WorkflowVerifications), new Action<WorkflowVerificationEntity>(this.detach_WorkflowVerifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationRecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConfigurationRecordId
		{
			get
			{
				return this._ConfigurationRecordId;
			}
			set
			{
				if ((this._ConfigurationRecordId != value))
				{
					this.OnConfigurationRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationRecordId = value;
					this.SendPropertyChanged("ConfigurationRecordId");
					this.OnConfigurationRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(768) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_ConfigurationRecords", Storage="_WorkflowVerifications", ThisKey="ConfigurationRecordId", OtherKey="ConfigurationRecordId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowVerificationEntity> WorkflowVerifications
		{
			get
			{
				return this._WorkflowVerifications;
			}
			set
			{
				this._WorkflowVerifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ConfigurationRecordEntity = this;
		}
		
		private void detach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.ConfigurationRecordEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.CreditBureauDataCache")]
	public partial class CreditBureauDataCacheEntity : DbEntity<CreditBureauDataCacheEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditBureauDataCacheId;
		
		private string _CreditBureauData;
		
		private System.DateTime _RequestDate;
		
		private System.Guid _AccountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditBureauDataCacheIdChanging(int value);
    partial void OnCreditBureauDataCacheIdChanged();
    partial void OnCreditBureauDataChanging(string value);
    partial void OnCreditBureauDataChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    #endregion
		
		public CreditBureauDataCacheEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditBureauDataCacheId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditBureauDataCacheId
		{
			get
			{
				return this._CreditBureauDataCacheId;
			}
			set
			{
				if ((this._CreditBureauDataCacheId != value))
				{
					this.OnCreditBureauDataCacheIdChanging(value);
					this.SendPropertyChanging();
					this._CreditBureauDataCacheId = value;
					this.SendPropertyChanged("CreditBureauDataCacheId");
					this.OnCreditBureauDataCacheIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditBureauData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CreditBureauData
		{
			get
			{
				return this._CreditBureauData;
			}
			set
			{
				if ((this._CreditBureauData != value))
				{
					this.OnCreditBureauDataChanging(value);
					this.SendPropertyChanging();
					this._CreditBureauData = value;
					this.SendPropertyChanged("CreditBureauData");
					this.OnCreditBureauDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.CreditBureauDataExtracted")]
	public partial class CreditBureauDataExtractedEntity : DbEntity<CreditBureauDataExtractedEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditBureauDataExtractedId;
		
		private System.Guid _AccountId;
		
		private System.Xml.Linq.XElement _RequestApplicant;
		
		private System.Xml.Linq.XElement _Picklist;
		
		private System.Xml.Linq.XElement _ResidentMatches;
		
		private System.Xml.Linq.XElement _Cifas;
		
		private System.Xml.Linq.XElement _CifasFillings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditBureauDataExtractedIdChanging(int value);
    partial void OnCreditBureauDataExtractedIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnRequestApplicantChanging(System.Xml.Linq.XElement value);
    partial void OnRequestApplicantChanged();
    partial void OnPicklistChanging(System.Xml.Linq.XElement value);
    partial void OnPicklistChanged();
    partial void OnResidentMatchesChanging(System.Xml.Linq.XElement value);
    partial void OnResidentMatchesChanged();
    partial void OnCifasChanging(System.Xml.Linq.XElement value);
    partial void OnCifasChanged();
    partial void OnCifasFillingsChanging(System.Xml.Linq.XElement value);
    partial void OnCifasFillingsChanged();
    #endregion
		
		public CreditBureauDataExtractedEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditBureauDataExtractedId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditBureauDataExtractedId
		{
			get
			{
				return this._CreditBureauDataExtractedId;
			}
			set
			{
				if ((this._CreditBureauDataExtractedId != value))
				{
					this.OnCreditBureauDataExtractedIdChanging(value);
					this.SendPropertyChanging();
					this._CreditBureauDataExtractedId = value;
					this.SendPropertyChanged("CreditBureauDataExtractedId");
					this.OnCreditBureauDataExtractedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestApplicant", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RequestApplicant
		{
			get
			{
				return this._RequestApplicant;
			}
			set
			{
				if ((this._RequestApplicant != value))
				{
					this.OnRequestApplicantChanging(value);
					this.SendPropertyChanging();
					this._RequestApplicant = value;
					this.SendPropertyChanged("RequestApplicant");
					this.OnRequestApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picklist", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Picklist
		{
			get
			{
				return this._Picklist;
			}
			set
			{
				if ((this._Picklist != value))
				{
					this.OnPicklistChanging(value);
					this.SendPropertyChanging();
					this._Picklist = value;
					this.SendPropertyChanged("Picklist");
					this.OnPicklistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentMatches", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ResidentMatches
		{
			get
			{
				return this._ResidentMatches;
			}
			set
			{
				if ((this._ResidentMatches != value))
				{
					this.OnResidentMatchesChanging(value);
					this.SendPropertyChanging();
					this._ResidentMatches = value;
					this.SendPropertyChanged("ResidentMatches");
					this.OnResidentMatchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cifas", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Cifas
		{
			get
			{
				return this._Cifas;
			}
			set
			{
				if ((this._Cifas != value))
				{
					this.OnCifasChanging(value);
					this.SendPropertyChanging();
					this._Cifas = value;
					this.SendPropertyChanged("Cifas");
					this.OnCifasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CifasFillings", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement CifasFillings
		{
			get
			{
				return this._CifasFillings;
			}
			set
			{
				if ((this._CifasFillings != value))
				{
					this.OnCifasFillingsChanging(value);
					this.SendPropertyChanging();
					this._CifasFillings = value;
					this.SendPropertyChanged("CifasFillings");
					this.OnCifasFillingsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.CustomerDetailChanges")]
	public partial class CustomerDetailChangeEntity : DbEntity<CustomerDetailChangeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerDetailChangesId;
		
		private System.Guid _AccountId;
		
		private int _PersonalDetailsStartingFromFirstApplication;
		
		private int _BankDetailsStartingFromFirstApplication;
		
		private int _CardDetailsStartingFromFirstApplication;
		
		private int _PersonalDetailsComparedToLastApplication;
		
		private int _BankDetailsComparedToLastApplication;
		
		private int _CardDetailsComparedToLastApplication;
		
		private int _SaveButtonTransactions;
		
		private int _AddressStartingFromFirstApplication;
		
		private int _AddressComparedToLastApplication;
		
		private int _SocialDetailsComparedToLastApplication;
		
		private int _SocialDetailsStartingFromFirstApplication;
		
		private int _FieldChangesInSocialDetailsComparedToLastApplication;
		
		private int _FieldChangesInSocialDetailsStartingFromFirstApplication;
		
		private int _EmploymentDetailsStartingFromFirstApplication;
		
		private int _EmploymentDetailsComparedToLastApplication;
		
		private int _ContactDetailsStartingFromFirstApplication;
		
		private int _ContactDetailsComparedToLastApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerDetailChangesIdChanging(int value);
    partial void OnCustomerDetailChangesIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnPersonalDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnPersonalDetailsStartingFromFirstApplicationChanged();
    partial void OnBankDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnBankDetailsStartingFromFirstApplicationChanged();
    partial void OnCardDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnCardDetailsStartingFromFirstApplicationChanged();
    partial void OnPersonalDetailsComparedToLastApplicationChanging(int value);
    partial void OnPersonalDetailsComparedToLastApplicationChanged();
    partial void OnBankDetailsComparedToLastApplicationChanging(int value);
    partial void OnBankDetailsComparedToLastApplicationChanged();
    partial void OnCardDetailsComparedToLastApplicationChanging(int value);
    partial void OnCardDetailsComparedToLastApplicationChanged();
    partial void OnSaveButtonTransactionsChanging(int value);
    partial void OnSaveButtonTransactionsChanged();
    partial void OnAddressStartingFromFirstApplicationChanging(int value);
    partial void OnAddressStartingFromFirstApplicationChanged();
    partial void OnAddressComparedToLastApplicationChanging(int value);
    partial void OnAddressComparedToLastApplicationChanged();
    partial void OnSocialDetailsComparedToLastApplicationChanging(int value);
    partial void OnSocialDetailsComparedToLastApplicationChanged();
    partial void OnSocialDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnSocialDetailsStartingFromFirstApplicationChanged();
    partial void OnFieldChangesInSocialDetailsComparedToLastApplicationChanging(int value);
    partial void OnFieldChangesInSocialDetailsComparedToLastApplicationChanged();
    partial void OnFieldChangesInSocialDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnFieldChangesInSocialDetailsStartingFromFirstApplicationChanged();
    partial void OnEmploymentDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnEmploymentDetailsStartingFromFirstApplicationChanged();
    partial void OnEmploymentDetailsComparedToLastApplicationChanging(int value);
    partial void OnEmploymentDetailsComparedToLastApplicationChanged();
    partial void OnContactDetailsStartingFromFirstApplicationChanging(int value);
    partial void OnContactDetailsStartingFromFirstApplicationChanged();
    partial void OnContactDetailsComparedToLastApplicationChanging(int value);
    partial void OnContactDetailsComparedToLastApplicationChanged();
    #endregion
		
		public CustomerDetailChangeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDetailChangesId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerDetailChangesId
		{
			get
			{
				return this._CustomerDetailChangesId;
			}
			set
			{
				if ((this._CustomerDetailChangesId != value))
				{
					this.OnCustomerDetailChangesIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerDetailChangesId = value;
					this.SendPropertyChanged("CustomerDetailChangesId");
					this.OnCustomerDetailChangesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int PersonalDetailsStartingFromFirstApplication
		{
			get
			{
				return this._PersonalDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._PersonalDetailsStartingFromFirstApplication != value))
				{
					this.OnPersonalDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._PersonalDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("PersonalDetailsStartingFromFirstApplication");
					this.OnPersonalDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int BankDetailsStartingFromFirstApplication
		{
			get
			{
				return this._BankDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._BankDetailsStartingFromFirstApplication != value))
				{
					this.OnBankDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._BankDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("BankDetailsStartingFromFirstApplication");
					this.OnBankDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int CardDetailsStartingFromFirstApplication
		{
			get
			{
				return this._CardDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._CardDetailsStartingFromFirstApplication != value))
				{
					this.OnCardDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._CardDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("CardDetailsStartingFromFirstApplication");
					this.OnCardDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int PersonalDetailsComparedToLastApplication
		{
			get
			{
				return this._PersonalDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._PersonalDetailsComparedToLastApplication != value))
				{
					this.OnPersonalDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._PersonalDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("PersonalDetailsComparedToLastApplication");
					this.OnPersonalDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int BankDetailsComparedToLastApplication
		{
			get
			{
				return this._BankDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._BankDetailsComparedToLastApplication != value))
				{
					this.OnBankDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._BankDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("BankDetailsComparedToLastApplication");
					this.OnBankDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int CardDetailsComparedToLastApplication
		{
			get
			{
				return this._CardDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._CardDetailsComparedToLastApplication != value))
				{
					this.OnCardDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._CardDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("CardDetailsComparedToLastApplication");
					this.OnCardDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveButtonTransactions", DbType="Int NOT NULL")]
		public int SaveButtonTransactions
		{
			get
			{
				return this._SaveButtonTransactions;
			}
			set
			{
				if ((this._SaveButtonTransactions != value))
				{
					this.OnSaveButtonTransactionsChanging(value);
					this.SendPropertyChanging();
					this._SaveButtonTransactions = value;
					this.SendPropertyChanged("SaveButtonTransactions");
					this.OnSaveButtonTransactionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int AddressStartingFromFirstApplication
		{
			get
			{
				return this._AddressStartingFromFirstApplication;
			}
			set
			{
				if ((this._AddressStartingFromFirstApplication != value))
				{
					this.OnAddressStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._AddressStartingFromFirstApplication = value;
					this.SendPropertyChanged("AddressStartingFromFirstApplication");
					this.OnAddressStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressComparedToLastApplication", DbType="Int NOT NULL")]
		public int AddressComparedToLastApplication
		{
			get
			{
				return this._AddressComparedToLastApplication;
			}
			set
			{
				if ((this._AddressComparedToLastApplication != value))
				{
					this.OnAddressComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._AddressComparedToLastApplication = value;
					this.SendPropertyChanged("AddressComparedToLastApplication");
					this.OnAddressComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int SocialDetailsComparedToLastApplication
		{
			get
			{
				return this._SocialDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._SocialDetailsComparedToLastApplication != value))
				{
					this.OnSocialDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._SocialDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("SocialDetailsComparedToLastApplication");
					this.OnSocialDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int SocialDetailsStartingFromFirstApplication
		{
			get
			{
				return this._SocialDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._SocialDetailsStartingFromFirstApplication != value))
				{
					this.OnSocialDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._SocialDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("SocialDetailsStartingFromFirstApplication");
					this.OnSocialDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldChangesInSocialDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int FieldChangesInSocialDetailsComparedToLastApplication
		{
			get
			{
				return this._FieldChangesInSocialDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._FieldChangesInSocialDetailsComparedToLastApplication != value))
				{
					this.OnFieldChangesInSocialDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._FieldChangesInSocialDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("FieldChangesInSocialDetailsComparedToLastApplication");
					this.OnFieldChangesInSocialDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldChangesInSocialDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int FieldChangesInSocialDetailsStartingFromFirstApplication
		{
			get
			{
				return this._FieldChangesInSocialDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._FieldChangesInSocialDetailsStartingFromFirstApplication != value))
				{
					this.OnFieldChangesInSocialDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._FieldChangesInSocialDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("FieldChangesInSocialDetailsStartingFromFirstApplication");
					this.OnFieldChangesInSocialDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int EmploymentDetailsStartingFromFirstApplication
		{
			get
			{
				return this._EmploymentDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._EmploymentDetailsStartingFromFirstApplication != value))
				{
					this.OnEmploymentDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._EmploymentDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("EmploymentDetailsStartingFromFirstApplication");
					this.OnEmploymentDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int EmploymentDetailsComparedToLastApplication
		{
			get
			{
				return this._EmploymentDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._EmploymentDetailsComparedToLastApplication != value))
				{
					this.OnEmploymentDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._EmploymentDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("EmploymentDetailsComparedToLastApplication");
					this.OnEmploymentDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetailsStartingFromFirstApplication", DbType="Int NOT NULL")]
		public int ContactDetailsStartingFromFirstApplication
		{
			get
			{
				return this._ContactDetailsStartingFromFirstApplication;
			}
			set
			{
				if ((this._ContactDetailsStartingFromFirstApplication != value))
				{
					this.OnContactDetailsStartingFromFirstApplicationChanging(value);
					this.SendPropertyChanging();
					this._ContactDetailsStartingFromFirstApplication = value;
					this.SendPropertyChanged("ContactDetailsStartingFromFirstApplication");
					this.OnContactDetailsStartingFromFirstApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetailsComparedToLastApplication", DbType="Int NOT NULL")]
		public int ContactDetailsComparedToLastApplication
		{
			get
			{
				return this._ContactDetailsComparedToLastApplication;
			}
			set
			{
				if ((this._ContactDetailsComparedToLastApplication != value))
				{
					this.OnContactDetailsComparedToLastApplicationChanging(value);
					this.SendPropertyChanging();
					this._ContactDetailsComparedToLastApplication = value;
					this.SendPropertyChanged("ContactDetailsComparedToLastApplication");
					this.OnContactDetailsComparedToLastApplicationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.DecisionDataDefinitions")]
	public partial class DecisionDataDefinitionEntity : DbEntity<DecisionDataDefinitionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DecisionDataDefinitionId;
		
		private string _Name;
		
		private EntitySet<RiskDecisionDataEntity> _RiskDecisionDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDecisionDataDefinitionIdChanging(int value);
    partial void OnDecisionDataDefinitionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DecisionDataDefinitionEntity()
		{
			this._RiskDecisionDatas = new EntitySet<RiskDecisionDataEntity>(new Action<RiskDecisionDataEntity>(this.attach_RiskDecisionDatas), new Action<RiskDecisionDataEntity>(this.detach_RiskDecisionDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDataDefinitionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DecisionDataDefinitionId
		{
			get
			{
				return this._DecisionDataDefinitionId;
			}
			set
			{
				if ((this._DecisionDataDefinitionId != value))
				{
					this.OnDecisionDataDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._DecisionDataDefinitionId = value;
					this.SendPropertyChanged("DecisionDataDefinitionId");
					this.OnDecisionDataDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskDecisionData_DecisionDataDefinitions", Storage="_RiskDecisionDatas", ThisKey="DecisionDataDefinitionId", OtherKey="DecisionDataDefinitionId", DeleteRule="NO ACTION")]
		public EntitySet<RiskDecisionDataEntity> RiskDecisionDatas
		{
			get
			{
				return this._RiskDecisionDatas;
			}
			set
			{
				this._RiskDecisionDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RiskDecisionDatas(RiskDecisionDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.DecisionDataDefinitionEntity = this;
		}
		
		private void detach_RiskDecisionDatas(RiskDecisionDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.DecisionDataDefinitionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.EmploymentDetails")]
	public partial class EmploymentDetailEntity : DbEntity<EmploymentDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmploymentDetailsId;
		
		private System.Guid _AccountId;
		
		private int _Status;
		
		private string _EmployerName;
		
		private System.Nullable<int> _EmploymentIndustry;
		
		private System.Nullable<int> _EmploymentPosition;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _IncomeFrequency;
		
		private decimal _NetMonthlyIncome;
		
		private System.Nullable<System.DateTime> _NextPayDate;
		
		private System.Nullable<bool> _PaidDirectDeposit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmploymentDetailsIdChanging(int value);
    partial void OnEmploymentDetailsIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnEmployerNameChanging(string value);
    partial void OnEmployerNameChanged();
    partial void OnEmploymentIndustryChanging(System.Nullable<int> value);
    partial void OnEmploymentIndustryChanged();
    partial void OnEmploymentPositionChanging(System.Nullable<int> value);
    partial void OnEmploymentPositionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnIncomeFrequencyChanging(System.Nullable<int> value);
    partial void OnIncomeFrequencyChanged();
    partial void OnNetMonthlyIncomeChanging(decimal value);
    partial void OnNetMonthlyIncomeChanged();
    partial void OnNextPayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextPayDateChanged();
    partial void OnPaidDirectDepositChanging(System.Nullable<bool> value);
    partial void OnPaidDirectDepositChanged();
    #endregion
		
		public EmploymentDetailEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentDetailsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmploymentDetailsId
		{
			get
			{
				return this._EmploymentDetailsId;
			}
			set
			{
				if ((this._EmploymentDetailsId != value))
				{
					this.OnEmploymentDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmploymentDetailsId = value;
					this.SendPropertyChanged("EmploymentDetailsId");
					this.OnEmploymentDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerName", DbType="NVarChar(100)")]
		public string EmployerName
		{
			get
			{
				return this._EmployerName;
			}
			set
			{
				if ((this._EmployerName != value))
				{
					this.OnEmployerNameChanging(value);
					this.SendPropertyChanging();
					this._EmployerName = value;
					this.SendPropertyChanged("EmployerName");
					this.OnEmployerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentIndustry", DbType="Int")]
		public System.Nullable<int> EmploymentIndustry
		{
			get
			{
				return this._EmploymentIndustry;
			}
			set
			{
				if ((this._EmploymentIndustry != value))
				{
					this.OnEmploymentIndustryChanging(value);
					this.SendPropertyChanging();
					this._EmploymentIndustry = value;
					this.SendPropertyChanged("EmploymentIndustry");
					this.OnEmploymentIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentPosition", DbType="Int")]
		public System.Nullable<int> EmploymentPosition
		{
			get
			{
				return this._EmploymentPosition;
			}
			set
			{
				if ((this._EmploymentPosition != value))
				{
					this.OnEmploymentPositionChanging(value);
					this.SendPropertyChanging();
					this._EmploymentPosition = value;
					this.SendPropertyChanged("EmploymentPosition");
					this.OnEmploymentPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeFrequency", DbType="Int")]
		public System.Nullable<int> IncomeFrequency
		{
			get
			{
				return this._IncomeFrequency;
			}
			set
			{
				if ((this._IncomeFrequency != value))
				{
					this.OnIncomeFrequencyChanging(value);
					this.SendPropertyChanging();
					this._IncomeFrequency = value;
					this.SendPropertyChanged("IncomeFrequency");
					this.OnIncomeFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetMonthlyIncome", DbType="Decimal(9,2) NOT NULL")]
		public decimal NetMonthlyIncome
		{
			get
			{
				return this._NetMonthlyIncome;
			}
			set
			{
				if ((this._NetMonthlyIncome != value))
				{
					this.OnNetMonthlyIncomeChanging(value);
					this.SendPropertyChanging();
					this._NetMonthlyIncome = value;
					this.SendPropertyChanged("NetMonthlyIncome");
					this.OnNetMonthlyIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPayDate", DbType="Date")]
		public System.Nullable<System.DateTime> NextPayDate
		{
			get
			{
				return this._NextPayDate;
			}
			set
			{
				if ((this._NextPayDate != value))
				{
					this.OnNextPayDateChanging(value);
					this.SendPropertyChanging();
					this._NextPayDate = value;
					this.SendPropertyChanged("NextPayDate");
					this.OnNextPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDirectDeposit", DbType="Bit")]
		public System.Nullable<bool> PaidDirectDeposit
		{
			get
			{
				return this._PaidDirectDeposit;
			}
			set
			{
				if ((this._PaidDirectDeposit != value))
				{
					this.OnPaidDirectDepositChanging(value);
					this.SendPropertyChanging();
					this._PaidDirectDeposit = value;
					this.SendPropertyChanged("PaidDirectDeposit");
					this.OnPaidDirectDepositChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.Factors")]
	public partial class FactorEntity : DbEntity<FactorEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FactorId;
		
		private string _Name;
		
		private int _DataTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactorIdChanging(int value);
    partial void OnFactorIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataTypeIdChanging(int value);
    partial void OnDataTypeIdChanged();
    #endregion
		
		public FactorEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FactorId
		{
			get
			{
				return this._FactorId;
			}
			set
			{
				if ((this._FactorId != value))
				{
					this.OnFactorIdChanging(value);
					this.SendPropertyChanging();
					this._FactorId = value;
					this.SendPropertyChanged("FactorId");
					this.OnFactorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeId", DbType="Int NOT NULL")]
		public int DataTypeId
		{
			get
			{
				return this._DataTypeId;
			}
			set
			{
				if ((this._DataTypeId != value))
				{
					this.OnDataTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DataTypeId = value;
					this.SendPropertyChanged("DataTypeId");
					this.OnDataTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.InternalSubscriptions")]
	public partial class InternalSubscriptionEntity : DbEntity<InternalSubscriptionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InternalSubscriptionId;
		
		private string _EventType;
		
		private System.Guid _PublisherSagaId;
		
		private System.Guid _SubscriberSagaId;
		
		private string _SubscriberType;
		
		private string _PublisherType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalSubscriptionIdChanging(int value);
    partial void OnInternalSubscriptionIdChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnPublisherSagaIdChanging(System.Guid value);
    partial void OnPublisherSagaIdChanged();
    partial void OnSubscriberSagaIdChanging(System.Guid value);
    partial void OnSubscriberSagaIdChanged();
    partial void OnSubscriberTypeChanging(string value);
    partial void OnSubscriberTypeChanged();
    partial void OnPublisherTypeChanging(string value);
    partial void OnPublisherTypeChanged();
    #endregion
		
		public InternalSubscriptionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalSubscriptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InternalSubscriptionId
		{
			get
			{
				return this._InternalSubscriptionId;
			}
			set
			{
				if ((this._InternalSubscriptionId != value))
				{
					this.OnInternalSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._InternalSubscriptionId = value;
					this.SendPropertyChanged("InternalSubscriptionId");
					this.OnInternalSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherSagaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PublisherSagaId
		{
			get
			{
				return this._PublisherSagaId;
			}
			set
			{
				if ((this._PublisherSagaId != value))
				{
					this.OnPublisherSagaIdChanging(value);
					this.SendPropertyChanging();
					this._PublisherSagaId = value;
					this.SendPropertyChanged("PublisherSagaId");
					this.OnPublisherSagaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberSagaId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubscriberSagaId
		{
			get
			{
				return this._SubscriberSagaId;
			}
			set
			{
				if ((this._SubscriberSagaId != value))
				{
					this.OnSubscriberSagaIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriberSagaId = value;
					this.SendPropertyChanged("SubscriberSagaId");
					this.OnSubscriberSagaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberType", DbType="VarChar(200)")]
		public string SubscriberType
		{
			get
			{
				return this._SubscriberType;
			}
			set
			{
				if ((this._SubscriberType != value))
				{
					this.OnSubscriberTypeChanging(value);
					this.SendPropertyChanging();
					this._SubscriberType = value;
					this.SendPropertyChanged("SubscriberType");
					this.OnSubscriberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherType", DbType="VarChar(200)")]
		public string PublisherType
		{
			get
			{
				return this._PublisherType;
			}
			set
			{
				if ((this._PublisherType != value))
				{
					this.OnPublisherTypeChanging(value);
					this.SendPropertyChanging();
					this._PublisherType = value;
					this.SendPropertyChanged("PublisherType");
					this.OnPublisherTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.IovationDetails")]
	public partial class IovationDetailEntity : DbEntity<IovationDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IovationDetailId;
		
		private System.Nullable<int> _IovationResultId;
		
		private string _KeyName;
		
		private string _Value;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<IovationResultEntity> _IovationResultEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIovationDetailIdChanging(int value);
    partial void OnIovationDetailIdChanged();
    partial void OnIovationResultIdChanging(System.Nullable<int> value);
    partial void OnIovationResultIdChanged();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public IovationDetailEntity()
		{
			this._IovationResultEntity = default(EntityRef<IovationResultEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IovationDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IovationDetailId
		{
			get
			{
				return this._IovationDetailId;
			}
			set
			{
				if ((this._IovationDetailId != value))
				{
					this.OnIovationDetailIdChanging(value);
					this.SendPropertyChanging();
					this._IovationDetailId = value;
					this.SendPropertyChanged("IovationDetailId");
					this.OnIovationDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IovationResultId", DbType="Int")]
		public System.Nullable<int> IovationResultId
		{
			get
			{
				return this._IovationResultId;
			}
			set
			{
				if ((this._IovationResultId != value))
				{
					if (this._IovationResultEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIovationResultIdChanging(value);
					this.SendPropertyChanging();
					this._IovationResultId = value;
					this.SendPropertyChanged("IovationResultId");
					this.OnIovationResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="VarChar(50)")]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IovationDetails_IovationResultId", Storage="_IovationResultEntity", ThisKey="IovationResultId", OtherKey="IovationResultId", IsForeignKey=true)]
		public IovationResultEntity IovationResultEntity
		{
			get
			{
				return this._IovationResultEntity.Entity;
			}
			set
			{
				IovationResultEntity previousValue = this._IovationResultEntity.Entity;
				if (((previousValue != value) 
							|| (this._IovationResultEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IovationResultEntity.Entity = null;
						previousValue.IovationDetails.Remove(this);
					}
					this._IovationResultEntity.Entity = value;
					if ((value != null))
					{
						value.IovationDetails.Add(this);
						this._IovationResultId = value.IovationResultId;
					}
					else
					{
						this._IovationResultId = default(Nullable<int>);
					}
					this.SendPropertyChanged("IovationResultEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.IovationResults")]
	public partial class IovationResultEntity : DbEntity<IovationResultEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IovationResultId;
		
		private System.Guid _AccountId;
		
		private System.Guid _ApplicationId;
		
		private string _DeviceAlias;
		
		private string _Reason;
		
		private string _Result;
		
		private string _TrackingNumber;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<IovationDetailEntity> _IovationDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIovationResultIdChanging(int value);
    partial void OnIovationResultIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDeviceAliasChanging(string value);
    partial void OnDeviceAliasChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public IovationResultEntity()
		{
			this._IovationDetails = new EntitySet<IovationDetailEntity>(new Action<IovationDetailEntity>(this.attach_IovationDetails), new Action<IovationDetailEntity>(this.detach_IovationDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IovationResultId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IovationResultId
		{
			get
			{
				return this._IovationResultId;
			}
			set
			{
				if ((this._IovationResultId != value))
				{
					this.OnIovationResultIdChanging(value);
					this.SendPropertyChanging();
					this._IovationResultId = value;
					this.SendPropertyChanged("IovationResultId");
					this.OnIovationResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceAlias", DbType="VarChar(50)")]
		public string DeviceAlias
		{
			get
			{
				return this._DeviceAlias;
			}
			set
			{
				if ((this._DeviceAlias != value))
				{
					this.OnDeviceAliasChanging(value);
					this.SendPropertyChanging();
					this._DeviceAlias = value;
					this.SendPropertyChanged("DeviceAlias");
					this.OnDeviceAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_IovationDetails_IovationResultId", Storage="_IovationDetails", ThisKey="IovationResultId", OtherKey="IovationResultId", DeleteRule="NO ACTION")]
		public EntitySet<IovationDetailEntity> IovationDetails
		{
			get
			{
				return this._IovationDetails;
			}
			set
			{
				this._IovationDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IovationDetails(IovationDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.IovationResultEntity = this;
		}
		
		private void detach_IovationDetails(IovationDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.IovationResultEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSSQLDeploy")]
	public partial class MSSQLDeploy : DbEntity<MSSQLDeploy>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _MD5;
		
		private System.Nullable<int> _Revision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMD5Changing(string value);
    partial void OnMD5Changed();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    #endregion
		
		public MSSQLDeploy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MD5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MD5
		{
			get
			{
				return this._MD5;
			}
			set
			{
				if ((this._MD5 != value))
				{
					this.OnMD5Changing(value);
					this.SendPropertyChanging();
					this._MD5 = value;
					this.SendPropertyChanged("MD5");
					this.OnMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="Int")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.PmmlFactors")]
	public partial class PmmlFactorEntity : DbEntity<PmmlFactorEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PmmlFactorId;
		
		private int _FactorId;
		
		private int _RiskApplicationId;
		
		private string _Data;
		
		private EntityRef<RiskApplicationEntity> _RiskApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPmmlFactorIdChanging(int value);
    partial void OnPmmlFactorIdChanged();
    partial void OnFactorIdChanging(int value);
    partial void OnFactorIdChanged();
    partial void OnRiskApplicationIdChanging(int value);
    partial void OnRiskApplicationIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public PmmlFactorEntity()
		{
			this._RiskApplicationEntity = default(EntityRef<RiskApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PmmlFactorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PmmlFactorId
		{
			get
			{
				return this._PmmlFactorId;
			}
			set
			{
				if ((this._PmmlFactorId != value))
				{
					this.OnPmmlFactorIdChanging(value);
					this.SendPropertyChanging();
					this._PmmlFactorId = value;
					this.SendPropertyChanged("PmmlFactorId");
					this.OnPmmlFactorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorId", DbType="Int NOT NULL")]
		public int FactorId
		{
			get
			{
				return this._FactorId;
			}
			set
			{
				if ((this._FactorId != value))
				{
					this.OnFactorIdChanging(value);
					this.SendPropertyChanging();
					this._FactorId = value;
					this.SendPropertyChanged("FactorId");
					this.OnFactorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskApplicationId", DbType="Int NOT NULL")]
		public int RiskApplicationId
		{
			get
			{
				return this._RiskApplicationId;
			}
			set
			{
				if ((this._RiskApplicationId != value))
				{
					if (this._RiskApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._RiskApplicationId = value;
					this.SendPropertyChanged("RiskApplicationId");
					this.OnRiskApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(50)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PK_PmmlFactors_RiskApplications", Storage="_RiskApplicationEntity", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", IsForeignKey=true)]
		public RiskApplicationEntity RiskApplicationEntity
		{
			get
			{
				return this._RiskApplicationEntity.Entity;
			}
			set
			{
				RiskApplicationEntity previousValue = this._RiskApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskApplicationEntity.Entity = null;
						previousValue.PmmlFactors.Remove(this);
					}
					this._RiskApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.PmmlFactors.Add(this);
						this._RiskApplicationId = value.RiskApplicationId;
					}
					else
					{
						this._RiskApplicationId = default(int);
					}
					this.SendPropertyChanged("RiskApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.PostcodeUK")]
	public partial class PostcodeUKEntity : DbEntity<PostcodeUKEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostcodeUKId;
		
		private string _Postcode;
		
		private double _Longitude;
		
		private double _Latitude;
		
		private string _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostcodeUKIdChanging(int value);
    partial void OnPostcodeUKIdChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    #endregion
		
		public PostcodeUKEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostcodeUKId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PostcodeUKId
		{
			get
			{
				return this._PostcodeUKId;
			}
			set
			{
				if ((this._PostcodeUKId != value))
				{
					this.OnPostcodeUKIdChanging(value);
					this.SendPropertyChanging();
					this._PostcodeUKId = value;
					this.SendPropertyChanged("PostcodeUKId");
					this.OnPostcodeUKIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskAccountHomePhones")]
	public partial class RiskAccountHomePhoneEntity : DbEntity<RiskAccountHomePhoneEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskAccountHomePhoneId;
		
		private System.Guid _AccountId;
		
		private string _HomePhone;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskAccountHomePhoneIdChanging(int value);
    partial void OnRiskAccountHomePhoneIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    #endregion
		
		public RiskAccountHomePhoneEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskAccountHomePhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskAccountHomePhoneId
		{
			get
			{
				return this._RiskAccountHomePhoneId;
			}
			set
			{
				if ((this._RiskAccountHomePhoneId != value))
				{
					this.OnRiskAccountHomePhoneIdChanging(value);
					this.SendPropertyChanging();
					this._RiskAccountHomePhoneId = value;
					this.SendPropertyChanged("RiskAccountHomePhoneId");
					this.OnRiskAccountHomePhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskAccountMobilePhones")]
	public partial class RiskAccountMobilePhoneEntity : DbEntity<RiskAccountMobilePhoneEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskAccountMobilePhoneId;
		
		private System.Guid _AccountId;
		
		private string _MobilePhone;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskAccountMobilePhoneIdChanging(int value);
    partial void OnRiskAccountMobilePhoneIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    #endregion
		
		public RiskAccountMobilePhoneEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskAccountMobilePhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskAccountMobilePhoneId
		{
			get
			{
				return this._RiskAccountMobilePhoneId;
			}
			set
			{
				if ((this._RiskAccountMobilePhoneId != value))
				{
					this.OnRiskAccountMobilePhoneIdChanging(value);
					this.SendPropertyChanging();
					this._RiskAccountMobilePhoneId = value;
					this.SendPropertyChanged("RiskAccountMobilePhoneId");
					this.OnRiskAccountMobilePhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskAccounts")]
	public partial class RiskAccountEntity : DbEntity<RiskAccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskAccountId;
		
		private System.Guid _AccountId;
		
		private int _AccountRank;
		
		private System.DateTime _DateOfBirth;
		
		private System.Nullable<System.Guid> _AddressId;
		
		private string _Postcode;
		
		private bool _IsDebtSale;
		
		private decimal _CreditLimit;
		
		private bool _ConfirmedFraud;
		
		private string _Surname;
		
		private bool _IsHardship;
		
		private bool _IsDispute;
		
		private string _SubRegion;
		
		private bool _DoNotRelend;
		
		private System.Nullable<bool> _IsMale;
		
		private string _MaidenName;
		
		private string _Forename;
		
		private string _Middlename;
		
		private bool _HasAccount;
		
		private System.Nullable<System.DateTime> _AtAddressFrom;
		
		private System.Nullable<long> _AddressUniqueHash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskAccountIdChanging(int value);
    partial void OnRiskAccountIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnAccountRankChanging(int value);
    partial void OnAccountRankChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnAddressIdChanging(System.Nullable<System.Guid> value);
    partial void OnAddressIdChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnIsDebtSaleChanging(bool value);
    partial void OnIsDebtSaleChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnConfirmedFraudChanging(bool value);
    partial void OnConfirmedFraudChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnIsHardshipChanging(bool value);
    partial void OnIsHardshipChanged();
    partial void OnIsDisputeChanging(bool value);
    partial void OnIsDisputeChanged();
    partial void OnSubRegionChanging(string value);
    partial void OnSubRegionChanged();
    partial void OnDoNotRelendChanging(bool value);
    partial void OnDoNotRelendChanged();
    partial void OnIsMaleChanging(System.Nullable<bool> value);
    partial void OnIsMaleChanged();
    partial void OnMaidenNameChanging(string value);
    partial void OnMaidenNameChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnMiddlenameChanging(string value);
    partial void OnMiddlenameChanged();
    partial void OnHasAccountChanging(bool value);
    partial void OnHasAccountChanged();
    partial void OnAtAddressFromChanging(System.Nullable<System.DateTime> value);
    partial void OnAtAddressFromChanged();
    partial void OnAddressUniqueHashChanging(System.Nullable<long> value);
    partial void OnAddressUniqueHashChanged();
    #endregion
		
		public RiskAccountEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskAccountId
		{
			get
			{
				return this._RiskAccountId;
			}
			set
			{
				if ((this._RiskAccountId != value))
				{
					this.OnRiskAccountIdChanging(value);
					this.SendPropertyChanging();
					this._RiskAccountId = value;
					this.SendPropertyChanged("RiskAccountId");
					this.OnRiskAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountRank", DbType="Int NOT NULL")]
		public int AccountRank
		{
			get
			{
				return this._AccountRank;
			}
			set
			{
				if ((this._AccountRank != value))
				{
					this.OnAccountRankChanging(value);
					this.SendPropertyChanging();
					this._AccountRank = value;
					this.SendPropertyChanged("AccountRank");
					this.OnAccountRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(10)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDebtSale", DbType="Bit NOT NULL")]
		public bool IsDebtSale
		{
			get
			{
				return this._IsDebtSale;
			}
			set
			{
				if ((this._IsDebtSale != value))
				{
					this.OnIsDebtSaleChanging(value);
					this.SendPropertyChanging();
					this._IsDebtSale = value;
					this.SendPropertyChanged("IsDebtSale");
					this.OnIsDebtSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(9,2) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedFraud", DbType="Bit NOT NULL")]
		public bool ConfirmedFraud
		{
			get
			{
				return this._ConfirmedFraud;
			}
			set
			{
				if ((this._ConfirmedFraud != value))
				{
					this.OnConfirmedFraudChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedFraud = value;
					this.SendPropertyChanged("ConfirmedFraud");
					this.OnConfirmedFraudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHardship", DbType="Bit NOT NULL")]
		public bool IsHardship
		{
			get
			{
				return this._IsHardship;
			}
			set
			{
				if ((this._IsHardship != value))
				{
					this.OnIsHardshipChanging(value);
					this.SendPropertyChanging();
					this._IsHardship = value;
					this.SendPropertyChanged("IsHardship");
					this.OnIsHardshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDispute", DbType="Bit NOT NULL")]
		public bool IsDispute
		{
			get
			{
				return this._IsDispute;
			}
			set
			{
				if ((this._IsDispute != value))
				{
					this.OnIsDisputeChanging(value);
					this.SendPropertyChanging();
					this._IsDispute = value;
					this.SendPropertyChanged("IsDispute");
					this.OnIsDisputeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubRegion", DbType="NVarChar(50)")]
		public string SubRegion
		{
			get
			{
				return this._SubRegion;
			}
			set
			{
				if ((this._SubRegion != value))
				{
					this.OnSubRegionChanging(value);
					this.SendPropertyChanging();
					this._SubRegion = value;
					this.SendPropertyChanged("SubRegion");
					this.OnSubRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotRelend", DbType="Bit NOT NULL")]
		public bool DoNotRelend
		{
			get
			{
				return this._DoNotRelend;
			}
			set
			{
				if ((this._DoNotRelend != value))
				{
					this.OnDoNotRelendChanging(value);
					this.SendPropertyChanging();
					this._DoNotRelend = value;
					this.SendPropertyChanged("DoNotRelend");
					this.OnDoNotRelendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMale", DbType="Bit")]
		public System.Nullable<bool> IsMale
		{
			get
			{
				return this._IsMale;
			}
			set
			{
				if ((this._IsMale != value))
				{
					this.OnIsMaleChanging(value);
					this.SendPropertyChanging();
					this._IsMale = value;
					this.SendPropertyChanged("IsMale");
					this.OnIsMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaidenName", DbType="NVarChar(50)")]
		public string MaidenName
		{
			get
			{
				return this._MaidenName;
			}
			set
			{
				if ((this._MaidenName != value))
				{
					this.OnMaidenNameChanging(value);
					this.SendPropertyChanging();
					this._MaidenName = value;
					this.SendPropertyChanged("MaidenName");
					this.OnMaidenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="NVarChar(50)")]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this.OnMiddlenameChanging(value);
					this.SendPropertyChanging();
					this._Middlename = value;
					this.SendPropertyChanged("Middlename");
					this.OnMiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAccount", DbType="Bit NOT NULL")]
		public bool HasAccount
		{
			get
			{
				return this._HasAccount;
			}
			set
			{
				if ((this._HasAccount != value))
				{
					this.OnHasAccountChanging(value);
					this.SendPropertyChanging();
					this._HasAccount = value;
					this.SendPropertyChanged("HasAccount");
					this.OnHasAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtAddressFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> AtAddressFrom
		{
			get
			{
				return this._AtAddressFrom;
			}
			set
			{
				if ((this._AtAddressFrom != value))
				{
					this.OnAtAddressFromChanging(value);
					this.SendPropertyChanging();
					this._AtAddressFrom = value;
					this.SendPropertyChanged("AtAddressFrom");
					this.OnAtAddressFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressUniqueHash", DbType="BigInt")]
		public System.Nullable<long> AddressUniqueHash
		{
			get
			{
				return this._AddressUniqueHash;
			}
			set
			{
				if ((this._AddressUniqueHash != value))
				{
					this.OnAddressUniqueHashChanging(value);
					this.SendPropertyChanging();
					this._AddressUniqueHash = value;
					this.SendPropertyChanged("AddressUniqueHash");
					this.OnAddressUniqueHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskApplications")]
	public partial class RiskApplicationEntity : DbEntity<RiskApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskApplicationId;
		
		private System.Guid _ApplicationId;
		
		private System.Guid _AccountId;
		
		private int _Currency;
		
		private System.DateTime _PromiseDate;
		
		private System.DateTime _ApplicationDate;
		
		private decimal _LoanAmount;
		
		private System.Guid _PaymentCardId;
		
		private System.Guid _BankAccountId;
		
		private System.Nullable<System.DateTime> _ClosedOn;
		
		private bool _IsCanceled;
		
		private System.Nullable<System.DateTime> _SignedOn;
		
		private decimal _OriginalLoanAmount;
		
		private bool _IsCounterOffer;
		
		private System.Nullable<System.DateTime> _ArrearsStartDate;
		
		private System.Nullable<int> _InArrearsDays;
		
		private decimal _CreditLimit;
		
		private int _TermLimit;
		
		private System.Nullable<bool> _NCOAccepted;
		
		private System.Nullable<bool> _PCOAccepted;
		
		private bool _WasExtended;
		
		private bool _WasTopUp;
		
		private bool _UsedManualVerification;
		
		private System.Nullable<int> _PaymentTransactionCount;
		
		private System.Nullable<int> _ManualPaymentTransactionCount;
		
		private System.Nullable<byte> _Decision;
		
		private System.Nullable<System.DateTime> _EstimatedCompletionDate;
		
		private System.Nullable<int> _ApplicationBehaviourId;
		
		private System.Nullable<double> _MainCardRepayRate;
		
		private System.Nullable<byte> _PriceTier;
		
		private System.Nullable<int> _GuarantorCount;
		
		private EntityRef<ApplicationBehaviourEntity> _ApplicationBehaviourEntity;
		
		private EntityRef<RiskBusinessApplicationEntity> _RiskBusinessApplicationEntity;
		
		private EntitySet<UserActionEntity> _UserActions;
		
		private EntitySet<PmmlFactorEntity> _PmmlFactors;
		
		private EntitySet<RiskDecisionDataEntity> _RiskDecisionDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskApplicationIdChanging(int value);
    partial void OnRiskApplicationIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnCurrencyChanging(int value);
    partial void OnCurrencyChanged();
    partial void OnPromiseDateChanging(System.DateTime value);
    partial void OnPromiseDateChanged();
    partial void OnApplicationDateChanging(System.DateTime value);
    partial void OnApplicationDateChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnPaymentCardIdChanging(System.Guid value);
    partial void OnPaymentCardIdChanged();
    partial void OnBankAccountIdChanging(System.Guid value);
    partial void OnBankAccountIdChanged();
    partial void OnClosedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedOnChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnSignedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedOnChanged();
    partial void OnOriginalLoanAmountChanging(decimal value);
    partial void OnOriginalLoanAmountChanged();
    partial void OnIsCounterOfferChanging(bool value);
    partial void OnIsCounterOfferChanged();
    partial void OnArrearsStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrearsStartDateChanged();
    partial void OnInArrearsDaysChanging(System.Nullable<int> value);
    partial void OnInArrearsDaysChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnTermLimitChanging(int value);
    partial void OnTermLimitChanged();
    partial void OnNCOAcceptedChanging(System.Nullable<bool> value);
    partial void OnNCOAcceptedChanged();
    partial void OnPCOAcceptedChanging(System.Nullable<bool> value);
    partial void OnPCOAcceptedChanged();
    partial void OnWasExtendedChanging(bool value);
    partial void OnWasExtendedChanged();
    partial void OnWasTopUpChanging(bool value);
    partial void OnWasTopUpChanged();
    partial void OnUsedManualVerificationChanging(bool value);
    partial void OnUsedManualVerificationChanged();
    partial void OnPaymentTransactionCountChanging(System.Nullable<int> value);
    partial void OnPaymentTransactionCountChanged();
    partial void OnManualPaymentTransactionCountChanging(System.Nullable<int> value);
    partial void OnManualPaymentTransactionCountChanged();
    partial void OnDecisionChanging(System.Nullable<byte> value);
    partial void OnDecisionChanged();
    partial void OnEstimatedCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedCompletionDateChanged();
    partial void OnApplicationBehaviourIdChanging(System.Nullable<int> value);
    partial void OnApplicationBehaviourIdChanged();
    partial void OnMainCardRepayRateChanging(System.Nullable<double> value);
    partial void OnMainCardRepayRateChanged();
    partial void OnPriceTierChanging(System.Nullable<byte> value);
    partial void OnPriceTierChanged();
    partial void OnGuarantorCountChanging(System.Nullable<int> value);
    partial void OnGuarantorCountChanged();
    #endregion
		
		public RiskApplicationEntity()
		{
			this._ApplicationBehaviourEntity = default(EntityRef<ApplicationBehaviourEntity>);
			this._RiskBusinessApplicationEntity = default(EntityRef<RiskBusinessApplicationEntity>);
			this._UserActions = new EntitySet<UserActionEntity>(new Action<UserActionEntity>(this.attach_UserActions), new Action<UserActionEntity>(this.detach_UserActions));
			this._PmmlFactors = new EntitySet<PmmlFactorEntity>(new Action<PmmlFactorEntity>(this.attach_PmmlFactors), new Action<PmmlFactorEntity>(this.detach_PmmlFactors));
			this._RiskDecisionDatas = new EntitySet<RiskDecisionDataEntity>(new Action<RiskDecisionDataEntity>(this.attach_RiskDecisionDatas), new Action<RiskDecisionDataEntity>(this.detach_RiskDecisionDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskApplicationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskApplicationId
		{
			get
			{
				return this._RiskApplicationId;
			}
			set
			{
				if ((this._RiskApplicationId != value))
				{
					this.OnRiskApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._RiskApplicationId = value;
					this.SendPropertyChanged("RiskApplicationId");
					this.OnRiskApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Int NOT NULL")]
		public int Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromiseDate", DbType="DateTime NOT NULL")]
		public System.DateTime PromiseDate
		{
			get
			{
				return this._PromiseDate;
			}
			set
			{
				if ((this._PromiseDate != value))
				{
					this.OnPromiseDateChanging(value);
					this.SendPropertyChanging();
					this._PromiseDate = value;
					this.SendPropertyChanged("PromiseDate");
					this.OnPromiseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedOn
		{
			get
			{
				return this._ClosedOn;
			}
			set
			{
				if ((this._ClosedOn != value))
				{
					this.OnClosedOnChanging(value);
					this.SendPropertyChanging();
					this._ClosedOn = value;
					this.SendPropertyChanged("ClosedOn");
					this.OnClosedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL")]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedOn
		{
			get
			{
				return this._SignedOn;
			}
			set
			{
				if ((this._SignedOn != value))
				{
					this.OnSignedOnChanging(value);
					this.SendPropertyChanging();
					this._SignedOn = value;
					this.SendPropertyChanged("SignedOn");
					this.OnSignedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalLoanAmount", DbType="Decimal(9,2) NOT NULL")]
		public decimal OriginalLoanAmount
		{
			get
			{
				return this._OriginalLoanAmount;
			}
			set
			{
				if ((this._OriginalLoanAmount != value))
				{
					this.OnOriginalLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._OriginalLoanAmount = value;
					this.SendPropertyChanged("OriginalLoanAmount");
					this.OnOriginalLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCounterOffer", DbType="Bit NOT NULL")]
		public bool IsCounterOffer
		{
			get
			{
				return this._IsCounterOffer;
			}
			set
			{
				if ((this._IsCounterOffer != value))
				{
					this.OnIsCounterOfferChanging(value);
					this.SendPropertyChanging();
					this._IsCounterOffer = value;
					this.SendPropertyChanged("IsCounterOffer");
					this.OnIsCounterOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrearsStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrearsStartDate
		{
			get
			{
				return this._ArrearsStartDate;
			}
			set
			{
				if ((this._ArrearsStartDate != value))
				{
					this.OnArrearsStartDateChanging(value);
					this.SendPropertyChanging();
					this._ArrearsStartDate = value;
					this.SendPropertyChanged("ArrearsStartDate");
					this.OnArrearsStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InArrearsDays", DbType="Int")]
		public System.Nullable<int> InArrearsDays
		{
			get
			{
				return this._InArrearsDays;
			}
			set
			{
				if ((this._InArrearsDays != value))
				{
					this.OnInArrearsDaysChanging(value);
					this.SendPropertyChanging();
					this._InArrearsDays = value;
					this.SendPropertyChanged("InArrearsDays");
					this.OnInArrearsDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,0) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermLimit", DbType="Int NOT NULL")]
		public int TermLimit
		{
			get
			{
				return this._TermLimit;
			}
			set
			{
				if ((this._TermLimit != value))
				{
					this.OnTermLimitChanging(value);
					this.SendPropertyChanging();
					this._TermLimit = value;
					this.SendPropertyChanged("TermLimit");
					this.OnTermLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NCOAccepted", DbType="Bit")]
		public System.Nullable<bool> NCOAccepted
		{
			get
			{
				return this._NCOAccepted;
			}
			set
			{
				if ((this._NCOAccepted != value))
				{
					this.OnNCOAcceptedChanging(value);
					this.SendPropertyChanging();
					this._NCOAccepted = value;
					this.SendPropertyChanged("NCOAccepted");
					this.OnNCOAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCOAccepted", DbType="Bit")]
		public System.Nullable<bool> PCOAccepted
		{
			get
			{
				return this._PCOAccepted;
			}
			set
			{
				if ((this._PCOAccepted != value))
				{
					this.OnPCOAcceptedChanging(value);
					this.SendPropertyChanging();
					this._PCOAccepted = value;
					this.SendPropertyChanged("PCOAccepted");
					this.OnPCOAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasExtended", DbType="Bit NOT NULL")]
		public bool WasExtended
		{
			get
			{
				return this._WasExtended;
			}
			set
			{
				if ((this._WasExtended != value))
				{
					this.OnWasExtendedChanging(value);
					this.SendPropertyChanging();
					this._WasExtended = value;
					this.SendPropertyChanged("WasExtended");
					this.OnWasExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasTopUp", DbType="Bit NOT NULL")]
		public bool WasTopUp
		{
			get
			{
				return this._WasTopUp;
			}
			set
			{
				if ((this._WasTopUp != value))
				{
					this.OnWasTopUpChanging(value);
					this.SendPropertyChanging();
					this._WasTopUp = value;
					this.SendPropertyChanged("WasTopUp");
					this.OnWasTopUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedManualVerification", DbType="Bit NOT NULL")]
		public bool UsedManualVerification
		{
			get
			{
				return this._UsedManualVerification;
			}
			set
			{
				if ((this._UsedManualVerification != value))
				{
					this.OnUsedManualVerificationChanging(value);
					this.SendPropertyChanging();
					this._UsedManualVerification = value;
					this.SendPropertyChanged("UsedManualVerification");
					this.OnUsedManualVerificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTransactionCount", DbType="Int")]
		public System.Nullable<int> PaymentTransactionCount
		{
			get
			{
				return this._PaymentTransactionCount;
			}
			set
			{
				if ((this._PaymentTransactionCount != value))
				{
					this.OnPaymentTransactionCountChanging(value);
					this.SendPropertyChanging();
					this._PaymentTransactionCount = value;
					this.SendPropertyChanged("PaymentTransactionCount");
					this.OnPaymentTransactionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualPaymentTransactionCount", DbType="Int")]
		public System.Nullable<int> ManualPaymentTransactionCount
		{
			get
			{
				return this._ManualPaymentTransactionCount;
			}
			set
			{
				if ((this._ManualPaymentTransactionCount != value))
				{
					this.OnManualPaymentTransactionCountChanging(value);
					this.SendPropertyChanging();
					this._ManualPaymentTransactionCount = value;
					this.SendPropertyChanged("ManualPaymentTransactionCount");
					this.OnManualPaymentTransactionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decision", DbType="TinyInt")]
		public System.Nullable<byte> Decision
		{
			get
			{
				return this._Decision;
			}
			set
			{
				if ((this._Decision != value))
				{
					this.OnDecisionChanging(value);
					this.SendPropertyChanging();
					this._Decision = value;
					this.SendPropertyChanged("Decision");
					this.OnDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedCompletionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedCompletionDate
		{
			get
			{
				return this._EstimatedCompletionDate;
			}
			set
			{
				if ((this._EstimatedCompletionDate != value))
				{
					this.OnEstimatedCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._EstimatedCompletionDate = value;
					this.SendPropertyChanged("EstimatedCompletionDate");
					this.OnEstimatedCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationBehaviourId", DbType="Int")]
		public System.Nullable<int> ApplicationBehaviourId
		{
			get
			{
				return this._ApplicationBehaviourId;
			}
			set
			{
				if ((this._ApplicationBehaviourId != value))
				{
					if (this._ApplicationBehaviourEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationBehaviourIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationBehaviourId = value;
					this.SendPropertyChanged("ApplicationBehaviourId");
					this.OnApplicationBehaviourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCardRepayRate", DbType="Float")]
		public System.Nullable<double> MainCardRepayRate
		{
			get
			{
				return this._MainCardRepayRate;
			}
			set
			{
				if ((this._MainCardRepayRate != value))
				{
					this.OnMainCardRepayRateChanging(value);
					this.SendPropertyChanging();
					this._MainCardRepayRate = value;
					this.SendPropertyChanged("MainCardRepayRate");
					this.OnMainCardRepayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTier", DbType="TinyInt")]
		public System.Nullable<byte> PriceTier
		{
			get
			{
				return this._PriceTier;
			}
			set
			{
				if ((this._PriceTier != value))
				{
					this.OnPriceTierChanging(value);
					this.SendPropertyChanging();
					this._PriceTier = value;
					this.SendPropertyChanged("PriceTier");
					this.OnPriceTierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorCount", DbType="Int")]
		public System.Nullable<int> GuarantorCount
		{
			get
			{
				return this._GuarantorCount;
			}
			set
			{
				if ((this._GuarantorCount != value))
				{
					this.OnGuarantorCountChanging(value);
					this.SendPropertyChanging();
					this._GuarantorCount = value;
					this.SendPropertyChanged("GuarantorCount");
					this.OnGuarantorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskApplications_ApplicationBehaviour", Storage="_ApplicationBehaviourEntity", ThisKey="ApplicationBehaviourId", OtherKey="ApplicationBehaviourId", IsForeignKey=true)]
		public ApplicationBehaviourEntity ApplicationBehaviourEntity
		{
			get
			{
				return this._ApplicationBehaviourEntity.Entity;
			}
			set
			{
				ApplicationBehaviourEntity previousValue = this._ApplicationBehaviourEntity.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationBehaviourEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationBehaviourEntity.Entity = null;
						previousValue.RiskApplications.Remove(this);
					}
					this._ApplicationBehaviourEntity.Entity = value;
					if ((value != null))
					{
						value.RiskApplications.Add(this);
						this._ApplicationBehaviourId = value.ApplicationBehaviourId;
					}
					else
					{
						this._ApplicationBehaviourId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApplicationBehaviourEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskBusinessApplications_RiskBusinessApplicationId", Storage="_RiskBusinessApplicationEntity", ThisKey="RiskApplicationId", OtherKey="RiskBusinessApplicationId", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public RiskBusinessApplicationEntity RiskBusinessApplicationEntity
		{
			get
			{
				return this._RiskBusinessApplicationEntity.Entity;
			}
			set
			{
				RiskBusinessApplicationEntity previousValue = this._RiskBusinessApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskBusinessApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskBusinessApplicationEntity.Entity = null;
						previousValue.RiskApplicationEntity = null;
					}
					this._RiskBusinessApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.RiskApplicationEntity = this;
					}
					this.SendPropertyChanged("RiskBusinessApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserActions_RiskApplications", Storage="_UserActions", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<UserActionEntity> UserActions
		{
			get
			{
				return this._UserActions;
			}
			set
			{
				this._UserActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PK_PmmlFactors_RiskApplications", Storage="_PmmlFactors", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<PmmlFactorEntity> PmmlFactors
		{
			get
			{
				return this._PmmlFactors;
			}
			set
			{
				this._PmmlFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PK_RiskDecisionData_RiskApplications", Storage="_RiskDecisionDatas", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", DeleteRule="NO ACTION")]
		public EntitySet<RiskDecisionDataEntity> RiskDecisionDatas
		{
			get
			{
				return this._RiskDecisionDatas;
			}
			set
			{
				this._RiskDecisionDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserActions(UserActionEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = this;
		}
		
		private void detach_UserActions(UserActionEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = null;
		}
		
		private void attach_PmmlFactors(PmmlFactorEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = this;
		}
		
		private void detach_PmmlFactors(PmmlFactorEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = null;
		}
		
		private void attach_RiskDecisionDatas(RiskDecisionDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = this;
		}
		
		private void detach_RiskDecisionDatas(RiskDecisionDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskApplicationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskBankAccounts")]
	public partial class RiskBankAccountEntity : DbEntity<RiskBankAccountEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskBankAccountId;
		
		private System.Guid _BankAccountId;
		
		private string _BankName;
		
		private System.Guid _AccountId;
		
		private long _AccountNumberHash;
		
		private System.Nullable<bool> _IsValidated;
		
		private System.Nullable<System.DateTime> _ValidatedOn;
		
		private System.Nullable<bool> _IsActiveMoreThanThreeMonths;
		
		private System.Nullable<bool> _AcceptsCredits;
		
		private System.Nullable<bool> _AcceptsDebits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskBankAccountIdChanging(int value);
    partial void OnRiskBankAccountIdChanged();
    partial void OnBankAccountIdChanging(System.Guid value);
    partial void OnBankAccountIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnAccountNumberHashChanging(long value);
    partial void OnAccountNumberHashChanged();
    partial void OnIsValidatedChanging(System.Nullable<bool> value);
    partial void OnIsValidatedChanged();
    partial void OnValidatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnValidatedOnChanged();
    partial void OnIsActiveMoreThanThreeMonthsChanging(System.Nullable<bool> value);
    partial void OnIsActiveMoreThanThreeMonthsChanged();
    partial void OnAcceptsCreditsChanging(System.Nullable<bool> value);
    partial void OnAcceptsCreditsChanged();
    partial void OnAcceptsDebitsChanging(System.Nullable<bool> value);
    partial void OnAcceptsDebitsChanged();
    #endregion
		
		public RiskBankAccountEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskBankAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskBankAccountId
		{
			get
			{
				return this._RiskBankAccountId;
			}
			set
			{
				if ((this._RiskBankAccountId != value))
				{
					this.OnRiskBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._RiskBankAccountId = value;
					this.SendPropertyChanged("RiskBankAccountId");
					this.OnRiskBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumberHash", DbType="BigInt NOT NULL")]
		public long AccountNumberHash
		{
			get
			{
				return this._AccountNumberHash;
			}
			set
			{
				if ((this._AccountNumberHash != value))
				{
					this.OnAccountNumberHashChanging(value);
					this.SendPropertyChanging();
					this._AccountNumberHash = value;
					this.SendPropertyChanged("AccountNumberHash");
					this.OnAccountNumberHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidated", DbType="Bit")]
		public System.Nullable<bool> IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this.OnIsValidatedChanging(value);
					this.SendPropertyChanging();
					this._IsValidated = value;
					this.SendPropertyChanged("IsValidated");
					this.OnIsValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidatedOn
		{
			get
			{
				return this._ValidatedOn;
			}
			set
			{
				if ((this._ValidatedOn != value))
				{
					this.OnValidatedOnChanging(value);
					this.SendPropertyChanging();
					this._ValidatedOn = value;
					this.SendPropertyChanged("ValidatedOn");
					this.OnValidatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveMoreThanThreeMonths", DbType="Bit")]
		public System.Nullable<bool> IsActiveMoreThanThreeMonths
		{
			get
			{
				return this._IsActiveMoreThanThreeMonths;
			}
			set
			{
				if ((this._IsActiveMoreThanThreeMonths != value))
				{
					this.OnIsActiveMoreThanThreeMonthsChanging(value);
					this.SendPropertyChanging();
					this._IsActiveMoreThanThreeMonths = value;
					this.SendPropertyChanged("IsActiveMoreThanThreeMonths");
					this.OnIsActiveMoreThanThreeMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsCredits", DbType="Bit")]
		public System.Nullable<bool> AcceptsCredits
		{
			get
			{
				return this._AcceptsCredits;
			}
			set
			{
				if ((this._AcceptsCredits != value))
				{
					this.OnAcceptsCreditsChanging(value);
					this.SendPropertyChanging();
					this._AcceptsCredits = value;
					this.SendPropertyChanged("AcceptsCredits");
					this.OnAcceptsCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsDebits", DbType="Bit")]
		public System.Nullable<bool> AcceptsDebits
		{
			get
			{
				return this._AcceptsDebits;
			}
			set
			{
				if ((this._AcceptsDebits != value))
				{
					this.OnAcceptsDebitsChanging(value);
					this.SendPropertyChanging();
					this._AcceptsDebits = value;
					this.SendPropertyChanged("AcceptsDebits");
					this.OnAcceptsDebitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskBusinessApplications")]
	public partial class RiskBusinessApplicationEntity : DbEntity<RiskBusinessApplicationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskBusinessApplicationId;
		
		private System.Nullable<System.Guid> _OrganisationId;
		
		private System.Guid _BusinessBankAccountId;
		
		private System.Guid _BusinessPaymentCardId;
		
		private EntityRef<RiskApplicationEntity> _RiskApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskBusinessApplicationIdChanging(int value);
    partial void OnRiskBusinessApplicationIdChanged();
    partial void OnOrganisationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationIdChanged();
    partial void OnBusinessBankAccountIdChanging(System.Guid value);
    partial void OnBusinessBankAccountIdChanged();
    partial void OnBusinessPaymentCardIdChanging(System.Guid value);
    partial void OnBusinessPaymentCardIdChanged();
    #endregion
		
		public RiskBusinessApplicationEntity()
		{
			this._RiskApplicationEntity = default(EntityRef<RiskApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskBusinessApplicationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RiskBusinessApplicationId
		{
			get
			{
				return this._RiskBusinessApplicationId;
			}
			set
			{
				if ((this._RiskBusinessApplicationId != value))
				{
					if (this._RiskApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskBusinessApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._RiskBusinessApplicationId = value;
					this.SendPropertyChanged("RiskBusinessApplicationId");
					this.OnRiskBusinessApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationId
		{
			get
			{
				return this._OrganisationId;
			}
			set
			{
				if ((this._OrganisationId != value))
				{
					this.OnOrganisationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganisationId = value;
					this.SendPropertyChanged("OrganisationId");
					this.OnOrganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBankAccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BusinessBankAccountId
		{
			get
			{
				return this._BusinessBankAccountId;
			}
			set
			{
				if ((this._BusinessBankAccountId != value))
				{
					this.OnBusinessBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessBankAccountId = value;
					this.SendPropertyChanged("BusinessBankAccountId");
					this.OnBusinessBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPaymentCardId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BusinessPaymentCardId
		{
			get
			{
				return this._BusinessPaymentCardId;
			}
			set
			{
				if ((this._BusinessPaymentCardId != value))
				{
					this.OnBusinessPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessPaymentCardId = value;
					this.SendPropertyChanged("BusinessPaymentCardId");
					this.OnBusinessPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskBusinessApplications_RiskBusinessApplicationId", Storage="_RiskApplicationEntity", ThisKey="RiskBusinessApplicationId", OtherKey="RiskApplicationId", IsForeignKey=true)]
		public RiskApplicationEntity RiskApplicationEntity
		{
			get
			{
				return this._RiskApplicationEntity.Entity;
			}
			set
			{
				RiskApplicationEntity previousValue = this._RiskApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskApplicationEntity.Entity = null;
						previousValue.RiskBusinessApplicationEntity = null;
					}
					this._RiskApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.RiskBusinessApplicationEntity = this;
						this._RiskBusinessApplicationId = value.RiskApplicationId;
					}
					else
					{
						this._RiskBusinessApplicationId = default(int);
					}
					this.SendPropertyChanged("RiskApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskDecisionData")]
	public partial class RiskDecisionDataEntity : DbEntity<RiskDecisionDataEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskDecisionDataId;
		
		private int _DecisionDataDefinitionId;
		
		private int _RiskApplicationId;
		
		private System.Nullable<double> _ValueDouble;
		
		private EntityRef<DecisionDataDefinitionEntity> _DecisionDataDefinitionEntity;
		
		private EntityRef<RiskApplicationEntity> _RiskApplicationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskDecisionDataIdChanging(int value);
    partial void OnRiskDecisionDataIdChanged();
    partial void OnDecisionDataDefinitionIdChanging(int value);
    partial void OnDecisionDataDefinitionIdChanged();
    partial void OnRiskApplicationIdChanging(int value);
    partial void OnRiskApplicationIdChanged();
    partial void OnValueDoubleChanging(System.Nullable<double> value);
    partial void OnValueDoubleChanged();
    #endregion
		
		public RiskDecisionDataEntity()
		{
			this._DecisionDataDefinitionEntity = default(EntityRef<DecisionDataDefinitionEntity>);
			this._RiskApplicationEntity = default(EntityRef<RiskApplicationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskDecisionDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskDecisionDataId
		{
			get
			{
				return this._RiskDecisionDataId;
			}
			set
			{
				if ((this._RiskDecisionDataId != value))
				{
					this.OnRiskDecisionDataIdChanging(value);
					this.SendPropertyChanging();
					this._RiskDecisionDataId = value;
					this.SendPropertyChanged("RiskDecisionDataId");
					this.OnRiskDecisionDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDataDefinitionId", DbType="Int NOT NULL")]
		public int DecisionDataDefinitionId
		{
			get
			{
				return this._DecisionDataDefinitionId;
			}
			set
			{
				if ((this._DecisionDataDefinitionId != value))
				{
					if (this._DecisionDataDefinitionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDecisionDataDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._DecisionDataDefinitionId = value;
					this.SendPropertyChanged("DecisionDataDefinitionId");
					this.OnDecisionDataDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskApplicationId", DbType="Int NOT NULL")]
		public int RiskApplicationId
		{
			get
			{
				return this._RiskApplicationId;
			}
			set
			{
				if ((this._RiskApplicationId != value))
				{
					if (this._RiskApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._RiskApplicationId = value;
					this.SendPropertyChanged("RiskApplicationId");
					this.OnRiskApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDouble", DbType="Float")]
		public System.Nullable<double> ValueDouble
		{
			get
			{
				return this._ValueDouble;
			}
			set
			{
				if ((this._ValueDouble != value))
				{
					this.OnValueDoubleChanging(value);
					this.SendPropertyChanging();
					this._ValueDouble = value;
					this.SendPropertyChanged("ValueDouble");
					this.OnValueDoubleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_RiskDecisionData_DecisionDataDefinitions", Storage="_DecisionDataDefinitionEntity", ThisKey="DecisionDataDefinitionId", OtherKey="DecisionDataDefinitionId", IsForeignKey=true)]
		public DecisionDataDefinitionEntity DecisionDataDefinitionEntity
		{
			get
			{
				return this._DecisionDataDefinitionEntity.Entity;
			}
			set
			{
				DecisionDataDefinitionEntity previousValue = this._DecisionDataDefinitionEntity.Entity;
				if (((previousValue != value) 
							|| (this._DecisionDataDefinitionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DecisionDataDefinitionEntity.Entity = null;
						previousValue.RiskDecisionDatas.Remove(this);
					}
					this._DecisionDataDefinitionEntity.Entity = value;
					if ((value != null))
					{
						value.RiskDecisionDatas.Add(this);
						this._DecisionDataDefinitionId = value.DecisionDataDefinitionId;
					}
					else
					{
						this._DecisionDataDefinitionId = default(int);
					}
					this.SendPropertyChanged("DecisionDataDefinitionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PK_RiskDecisionData_RiskApplications", Storage="_RiskApplicationEntity", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", IsForeignKey=true)]
		public RiskApplicationEntity RiskApplicationEntity
		{
			get
			{
				return this._RiskApplicationEntity.Entity;
			}
			set
			{
				RiskApplicationEntity previousValue = this._RiskApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskApplicationEntity.Entity = null;
						previousValue.RiskDecisionDatas.Remove(this);
					}
					this._RiskApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.RiskDecisionDatas.Add(this);
						this._RiskApplicationId = value.RiskApplicationId;
					}
					else
					{
						this._RiskApplicationId = default(int);
					}
					this.SendPropertyChanged("RiskApplicationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskGuarantorPartialDetails")]
	public partial class RiskGuarantorPartialDetailEntity : DbEntity<RiskGuarantorPartialDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskGuarantorPartialDetailId;
		
		private System.Guid _AccountId;
		
		private System.Guid _ApplicationId;
		
		private string _Forename;
		
		private string _Surname;
		
		private System.DateTime _CreatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskGuarantorPartialDetailIdChanging(int value);
    partial void OnRiskGuarantorPartialDetailIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public RiskGuarantorPartialDetailEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskGuarantorPartialDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskGuarantorPartialDetailId
		{
			get
			{
				return this._RiskGuarantorPartialDetailId;
			}
			set
			{
				if ((this._RiskGuarantorPartialDetailId != value))
				{
					this.OnRiskGuarantorPartialDetailIdChanging(value);
					this.SendPropertyChanging();
					this._RiskGuarantorPartialDetailId = value;
					this.SendPropertyChanged("RiskGuarantorPartialDetailId");
					this.OnRiskGuarantorPartialDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskIovationPostcodes")]
	public partial class RiskIovationPostcodeEntity : DbEntity<RiskIovationPostcodeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _ApplicationDate;
		
		private string _Postcode;
		
		private System.Guid _ApplicationId;
		
		private System.Nullable<System.Guid> _AccountId;
		
		private System.Nullable<byte> _ApplicationDecision;
		
		private System.Nullable<int> _AccountRank;
		
		private string _DeviceAlias;
		
		private string _IovationResult;
		
		private System.Nullable<bool> _InArrears;
		
		private int _RiskIovationPostcodeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicationDateChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnAccountIdChanging(System.Nullable<System.Guid> value);
    partial void OnAccountIdChanged();
    partial void OnApplicationDecisionChanging(System.Nullable<byte> value);
    partial void OnApplicationDecisionChanged();
    partial void OnAccountRankChanging(System.Nullable<int> value);
    partial void OnAccountRankChanged();
    partial void OnDeviceAliasChanging(string value);
    partial void OnDeviceAliasChanged();
    partial void OnIovationResultChanging(string value);
    partial void OnIovationResultChanged();
    partial void OnInArrearsChanging(System.Nullable<bool> value);
    partial void OnInArrearsChanged();
    partial void OnRiskIovationPostcodeIdChanging(int value);
    partial void OnRiskIovationPostcodeIdChanged();
    #endregion
		
		public RiskIovationPostcodeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(10)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDecision", DbType="TinyInt")]
		public System.Nullable<byte> ApplicationDecision
		{
			get
			{
				return this._ApplicationDecision;
			}
			set
			{
				if ((this._ApplicationDecision != value))
				{
					this.OnApplicationDecisionChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDecision = value;
					this.SendPropertyChanged("ApplicationDecision");
					this.OnApplicationDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountRank", DbType="Int")]
		public System.Nullable<int> AccountRank
		{
			get
			{
				return this._AccountRank;
			}
			set
			{
				if ((this._AccountRank != value))
				{
					this.OnAccountRankChanging(value);
					this.SendPropertyChanging();
					this._AccountRank = value;
					this.SendPropertyChanged("AccountRank");
					this.OnAccountRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceAlias", DbType="VarChar(50)")]
		public string DeviceAlias
		{
			get
			{
				return this._DeviceAlias;
			}
			set
			{
				if ((this._DeviceAlias != value))
				{
					this.OnDeviceAliasChanging(value);
					this.SendPropertyChanging();
					this._DeviceAlias = value;
					this.SendPropertyChanged("DeviceAlias");
					this.OnDeviceAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IovationResult", DbType="VarChar(50)")]
		public string IovationResult
		{
			get
			{
				return this._IovationResult;
			}
			set
			{
				if ((this._IovationResult != value))
				{
					this.OnIovationResultChanging(value);
					this.SendPropertyChanging();
					this._IovationResult = value;
					this.SendPropertyChanged("IovationResult");
					this.OnIovationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InArrears", DbType="Bit")]
		public System.Nullable<bool> InArrears
		{
			get
			{
				return this._InArrears;
			}
			set
			{
				if ((this._InArrears != value))
				{
					this.OnInArrearsChanging(value);
					this.SendPropertyChanging();
					this._InArrears = value;
					this.SendPropertyChanged("InArrears");
					this.OnInArrearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskIovationPostcodeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskIovationPostcodeId
		{
			get
			{
				return this._RiskIovationPostcodeId;
			}
			set
			{
				if ((this._RiskIovationPostcodeId != value))
				{
					this.OnRiskIovationPostcodeIdChanging(value);
					this.SendPropertyChanging();
					this._RiskIovationPostcodeId = value;
					this.SendPropertyChanged("RiskIovationPostcodeId");
					this.OnRiskIovationPostcodeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskPaymentCards")]
	public partial class RiskPaymentCardEntity : DbEntity<RiskPaymentCardEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskPaymentCardId;
		
		private System.Guid _PaymentCardId;
		
		private string _CardType;
		
		private System.DateTime _ExpiryDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Guid _AccountId;
		
		private string _HolderName;
		
		private long _CardNumberHash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskPaymentCardIdChanging(int value);
    partial void OnRiskPaymentCardIdChanged();
    partial void OnPaymentCardIdChanging(System.Guid value);
    partial void OnPaymentCardIdChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnHolderNameChanging(string value);
    partial void OnHolderNameChanged();
    partial void OnCardNumberHashChanging(long value);
    partial void OnCardNumberHashChanged();
    #endregion
		
		public RiskPaymentCardEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskPaymentCardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskPaymentCardId
		{
			get
			{
				return this._RiskPaymentCardId;
			}
			set
			{
				if ((this._RiskPaymentCardId != value))
				{
					this.OnRiskPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._RiskPaymentCardId = value;
					this.SendPropertyChanged("RiskPaymentCardId");
					this.OnRiskPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCardId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentCardId
		{
			get
			{
				return this._PaymentCardId;
			}
			set
			{
				if ((this._PaymentCardId != value))
				{
					this.OnPaymentCardIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCardId = value;
					this.SendPropertyChanged("PaymentCardId");
					this.OnPaymentCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderName", DbType="NVarChar(100)")]
		public string HolderName
		{
			get
			{
				return this._HolderName;
			}
			set
			{
				if ((this._HolderName != value))
				{
					this.OnHolderNameChanging(value);
					this.SendPropertyChanging();
					this._HolderName = value;
					this.SendPropertyChanged("HolderName");
					this.OnHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumberHash", DbType="BigInt NOT NULL")]
		public long CardNumberHash
		{
			get
			{
				return this._CardNumberHash;
			}
			set
			{
				if ((this._CardNumberHash != value))
				{
					this.OnCardNumberHashChanging(value);
					this.SendPropertyChanging();
					this._CardNumberHash = value;
					this.SendPropertyChanged("CardNumberHash");
					this.OnCardNumberHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.RiskWorkflows")]
	public partial class RiskWorkflowEntity : DbEntity<RiskWorkflowEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RiskWorkflowId;
		
		private System.Guid _WorkflowId;
		
		private byte _Decision;
		
		private System.Guid _ApplicationId;
		
		private System.Nullable<double> _FICOScore;
		
		private System.Nullable<byte> _CreditBureauUsed;
		
		private byte _WorkflowType;
		
		private System.Guid _AccountId;
		
		private EntitySet<WorkflowCheckpointEntity> _WorkflowCheckpoints;
		
		private EntitySet<WorkflowVerificationEntity> _WorkflowVerifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRiskWorkflowIdChanging(int value);
    partial void OnRiskWorkflowIdChanged();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnDecisionChanging(byte value);
    partial void OnDecisionChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnFICOScoreChanging(System.Nullable<double> value);
    partial void OnFICOScoreChanged();
    partial void OnCreditBureauUsedChanging(System.Nullable<byte> value);
    partial void OnCreditBureauUsedChanged();
    partial void OnWorkflowTypeChanging(byte value);
    partial void OnWorkflowTypeChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    #endregion
		
		public RiskWorkflowEntity()
		{
			this._WorkflowCheckpoints = new EntitySet<WorkflowCheckpointEntity>(new Action<WorkflowCheckpointEntity>(this.attach_WorkflowCheckpoints), new Action<WorkflowCheckpointEntity>(this.detach_WorkflowCheckpoints));
			this._WorkflowVerifications = new EntitySet<WorkflowVerificationEntity>(new Action<WorkflowVerificationEntity>(this.attach_WorkflowVerifications), new Action<WorkflowVerificationEntity>(this.detach_WorkflowVerifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskWorkflowId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RiskWorkflowId
		{
			get
			{
				return this._RiskWorkflowId;
			}
			set
			{
				if ((this._RiskWorkflowId != value))
				{
					this.OnRiskWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._RiskWorkflowId = value;
					this.SendPropertyChanged("RiskWorkflowId");
					this.OnRiskWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decision", DbType="TinyInt NOT NULL")]
		public byte Decision
		{
			get
			{
				return this._Decision;
			}
			set
			{
				if ((this._Decision != value))
				{
					this.OnDecisionChanging(value);
					this.SendPropertyChanging();
					this._Decision = value;
					this.SendPropertyChanged("Decision");
					this.OnDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FICOScore", DbType="Float")]
		public System.Nullable<double> FICOScore
		{
			get
			{
				return this._FICOScore;
			}
			set
			{
				if ((this._FICOScore != value))
				{
					this.OnFICOScoreChanging(value);
					this.SendPropertyChanging();
					this._FICOScore = value;
					this.SendPropertyChanged("FICOScore");
					this.OnFICOScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditBureauUsed", DbType="TinyInt")]
		public System.Nullable<byte> CreditBureauUsed
		{
			get
			{
				return this._CreditBureauUsed;
			}
			set
			{
				if ((this._CreditBureauUsed != value))
				{
					this.OnCreditBureauUsedChanging(value);
					this.SendPropertyChanging();
					this._CreditBureauUsed = value;
					this.SendPropertyChanged("CreditBureauUsed");
					this.OnCreditBureauUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowType", DbType="TinyInt NOT NULL")]
		public byte WorkflowType
		{
			get
			{
				return this._WorkflowType;
			}
			set
			{
				if ((this._WorkflowType != value))
				{
					this.OnWorkflowTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkflowType = value;
					this.SendPropertyChanged("WorkflowType");
					this.OnWorkflowTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__WorkflowC__RiskW__208CD6FA", Storage="_WorkflowCheckpoints", ThisKey="RiskWorkflowId", OtherKey="RiskWorkflowId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowCheckpointEntity> WorkflowCheckpoints
		{
			get
			{
				return this._WorkflowCheckpoints;
			}
			set
			{
				this._WorkflowCheckpoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__WorkflowV__RiskW__2180FB33", Storage="_WorkflowVerifications", ThisKey="RiskWorkflowId", OtherKey="RiskWorkflowId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowVerificationEntity> WorkflowVerifications
		{
			get
			{
				return this._WorkflowVerifications;
			}
			set
			{
				this._WorkflowVerifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskWorkflowEntity = this;
		}
		
		private void detach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskWorkflowEntity = null;
		}
		
		private void attach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskWorkflowEntity = this;
		}
		
		private void detach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.RiskWorkflowEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.SocialDetails")]
	public partial class SocialDetailEntity : DbEntity<SocialDetailEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SocialDetailsId;
		
		private System.Guid _AccountId;
		
		private int _MaritalStatus;
		
		private int _OccupancyStatus;
		
		private int _Dependants;
		
		private string _VehicleRegistration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSocialDetailsIdChanging(int value);
    partial void OnSocialDetailsIdChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnMaritalStatusChanging(int value);
    partial void OnMaritalStatusChanged();
    partial void OnOccupancyStatusChanging(int value);
    partial void OnOccupancyStatusChanged();
    partial void OnDependantsChanging(int value);
    partial void OnDependantsChanged();
    partial void OnVehicleRegistrationChanging(string value);
    partial void OnVehicleRegistrationChanged();
    #endregion
		
		public SocialDetailEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialDetailsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SocialDetailsId
		{
			get
			{
				return this._SocialDetailsId;
			}
			set
			{
				if ((this._SocialDetailsId != value))
				{
					this.OnSocialDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._SocialDetailsId = value;
					this.SendPropertyChanged("SocialDetailsId");
					this.OnSocialDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="Int NOT NULL")]
		public int MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupancyStatus", DbType="Int NOT NULL")]
		public int OccupancyStatus
		{
			get
			{
				return this._OccupancyStatus;
			}
			set
			{
				if ((this._OccupancyStatus != value))
				{
					this.OnOccupancyStatusChanging(value);
					this.SendPropertyChanging();
					this._OccupancyStatus = value;
					this.SendPropertyChanged("OccupancyStatus");
					this.OnOccupancyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dependants", DbType="Int NOT NULL")]
		public int Dependants
		{
			get
			{
				return this._Dependants;
			}
			set
			{
				if ((this._Dependants != value))
				{
					this.OnDependantsChanging(value);
					this.SendPropertyChanging();
					this._Dependants = value;
					this.SendPropertyChanged("Dependants");
					this.OnDependantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleRegistration", DbType="VarChar(10)")]
		public string VehicleRegistration
		{
			get
			{
				return this._VehicleRegistration;
			}
			set
			{
				if ((this._VehicleRegistration != value))
				{
					this.OnVehicleRegistrationChanging(value);
					this.SendPropertyChanging();
					this._VehicleRegistration = value;
					this.SendPropertyChanged("VehicleRegistration");
					this.OnVehicleRegistrationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.UserActions")]
	public partial class UserActionEntity : DbEntity<UserActionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserActionId;
		
		private System.Guid _ExternalId;
		
		private int _RiskApplicationId;
		
		private int _UserActionTypeId;
		
		private byte _Status;
		
		private string _StatusData;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<RiskApplicationEntity> _RiskApplicationEntity;
		
		private EntityRef<UserActionTypeEntity> _UserActionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserActionIdChanging(int value);
    partial void OnUserActionIdChanged();
    partial void OnExternalIdChanging(System.Guid value);
    partial void OnExternalIdChanged();
    partial void OnRiskApplicationIdChanging(int value);
    partial void OnRiskApplicationIdChanged();
    partial void OnUserActionTypeIdChanging(int value);
    partial void OnUserActionTypeIdChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnStatusDataChanging(string value);
    partial void OnStatusDataChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public UserActionEntity()
		{
			this._RiskApplicationEntity = default(EntityRef<RiskApplicationEntity>);
			this._UserActionTypeEntity = default(EntityRef<UserActionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserActionId
		{
			get
			{
				return this._UserActionId;
			}
			set
			{
				if ((this._UserActionId != value))
				{
					this.OnUserActionIdChanging(value);
					this.SendPropertyChanging();
					this._UserActionId = value;
					this.SendPropertyChanged("UserActionId");
					this.OnUserActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskApplicationId", DbType="Int NOT NULL")]
		public int RiskApplicationId
		{
			get
			{
				return this._RiskApplicationId;
			}
			set
			{
				if ((this._RiskApplicationId != value))
				{
					if (this._RiskApplicationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._RiskApplicationId = value;
					this.SendPropertyChanged("RiskApplicationId");
					this.OnRiskApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionTypeId", DbType="Int NOT NULL")]
		public int UserActionTypeId
		{
			get
			{
				return this._UserActionTypeId;
			}
			set
			{
				if ((this._UserActionTypeId != value))
				{
					if (this._UserActionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserActionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserActionTypeId = value;
					this.SendPropertyChanged("UserActionTypeId");
					this.OnUserActionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusData", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string StatusData
		{
			get
			{
				return this._StatusData;
			}
			set
			{
				if ((this._StatusData != value))
				{
					this.OnStatusDataChanging(value);
					this.SendPropertyChanging();
					this._StatusData = value;
					this.SendPropertyChanged("StatusData");
					this.OnStatusDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserActions_RiskApplications", Storage="_RiskApplicationEntity", ThisKey="RiskApplicationId", OtherKey="RiskApplicationId", IsForeignKey=true)]
		public RiskApplicationEntity RiskApplicationEntity
		{
			get
			{
				return this._RiskApplicationEntity.Entity;
			}
			set
			{
				RiskApplicationEntity previousValue = this._RiskApplicationEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskApplicationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskApplicationEntity.Entity = null;
						previousValue.UserActions.Remove(this);
					}
					this._RiskApplicationEntity.Entity = value;
					if ((value != null))
					{
						value.UserActions.Add(this);
						this._RiskApplicationId = value.RiskApplicationId;
					}
					else
					{
						this._RiskApplicationId = default(int);
					}
					this.SendPropertyChanged("RiskApplicationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserActions_UserActionTypes", Storage="_UserActionTypeEntity", ThisKey="UserActionTypeId", OtherKey="UserActionTypeId", IsForeignKey=true)]
		public UserActionTypeEntity UserActionTypeEntity
		{
			get
			{
				return this._UserActionTypeEntity.Entity;
			}
			set
			{
				UserActionTypeEntity previousValue = this._UserActionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserActionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserActionTypeEntity.Entity = null;
						previousValue.UserActions.Remove(this);
					}
					this._UserActionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.UserActions.Add(this);
						this._UserActionTypeId = value.UserActionTypeId;
					}
					else
					{
						this._UserActionTypeId = default(int);
					}
					this.SendPropertyChanged("UserActionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.UserActionTypes")]
	public partial class UserActionTypeEntity : DbEntity<UserActionTypeEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserActionTypeId;
		
		private string _Name;
		
		private string _Description;
		
		private int _Priority;
		
		private EntitySet<UserActionEntity> _UserActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserActionTypeIdChanging(int value);
    partial void OnUserActionTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public UserActionTypeEntity()
		{
			this._UserActions = new EntitySet<UserActionEntity>(new Action<UserActionEntity>(this.attach_UserActions), new Action<UserActionEntity>(this.detach_UserActions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserActionTypeId
		{
			get
			{
				return this._UserActionTypeId;
			}
			set
			{
				if ((this._UserActionTypeId != value))
				{
					this.OnUserActionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserActionTypeId = value;
					this.SendPropertyChanged("UserActionTypeId");
					this.OnUserActionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserActions_UserActionTypes", Storage="_UserActions", ThisKey="UserActionTypeId", OtherKey="UserActionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<UserActionEntity> UserActions
		{
			get
			{
				return this._UserActions;
			}
			set
			{
				this._UserActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserActions(UserActionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserActionTypeEntity = this;
		}
		
		private void detach_UserActions(UserActionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserActionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.VerificationDefinitions")]
	public partial class VerificationDefinitionEntity : DbEntity<VerificationDefinitionEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VerificationDefinitionId;
		
		private string _TypeName;
		
		private string _Name;
		
		private EntitySet<WorkflowVerificationEntity> _WorkflowVerifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVerificationDefinitionIdChanging(int value);
    partial void OnVerificationDefinitionIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public VerificationDefinitionEntity()
		{
			this._WorkflowVerifications = new EntitySet<WorkflowVerificationEntity>(new Action<WorkflowVerificationEntity>(this.attach_WorkflowVerifications), new Action<WorkflowVerificationEntity>(this.detach_WorkflowVerifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationDefinitionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VerificationDefinitionId
		{
			get
			{
				return this._VerificationDefinitionId;
			}
			set
			{
				if ((this._VerificationDefinitionId != value))
				{
					this.OnVerificationDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationDefinitionId = value;
					this.SendPropertyChanged("VerificationDefinitionId");
					this.OnVerificationDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_VerificationDefinitions", Storage="_WorkflowVerifications", ThisKey="VerificationDefinitionId", OtherKey="VerificationDefinitionId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowVerificationEntity> WorkflowVerifications
		{
			get
			{
				return this._WorkflowVerifications;
			}
			set
			{
				this._WorkflowVerifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.VerificationDefinitionEntity = this;
		}
		
		private void detach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.VerificationDefinitionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.WorkflowCheckpoints")]
	public partial class WorkflowCheckpointEntity : DbEntity<WorkflowCheckpointEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkflowCheckpointId;
		
		private int _CheckpointDefinitionId;
		
		private byte _CheckpointStatus;
		
		private System.Nullable<int> _ResponsibleVerificationId;
		
		private System.Nullable<int> _RiskWorkflowId;
		
		private EntityRef<RiskWorkflowEntity> _RiskWorkflowEntity;
		
		private EntityRef<CheckpointDefinitionEntity> _CheckpointDefinitionEntity;
		
		private EntityRef<WorkflowVerificationEntity> _WorkflowVerificationEntity;
		
		private EntitySet<WorkflowVerificationEntity> _WorkflowVerifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowCheckpointIdChanging(int value);
    partial void OnWorkflowCheckpointIdChanged();
    partial void OnCheckpointDefinitionIdChanging(int value);
    partial void OnCheckpointDefinitionIdChanged();
    partial void OnCheckpointStatusChanging(byte value);
    partial void OnCheckpointStatusChanged();
    partial void OnResponsibleVerificationIdChanging(System.Nullable<int> value);
    partial void OnResponsibleVerificationIdChanged();
    partial void OnRiskWorkflowIdChanging(System.Nullable<int> value);
    partial void OnRiskWorkflowIdChanged();
    #endregion
		
		public WorkflowCheckpointEntity()
		{
			this._RiskWorkflowEntity = default(EntityRef<RiskWorkflowEntity>);
			this._CheckpointDefinitionEntity = default(EntityRef<CheckpointDefinitionEntity>);
			this._WorkflowVerificationEntity = default(EntityRef<WorkflowVerificationEntity>);
			this._WorkflowVerifications = new EntitySet<WorkflowVerificationEntity>(new Action<WorkflowVerificationEntity>(this.attach_WorkflowVerifications), new Action<WorkflowVerificationEntity>(this.detach_WorkflowVerifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowCheckpointId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkflowCheckpointId
		{
			get
			{
				return this._WorkflowCheckpointId;
			}
			set
			{
				if ((this._WorkflowCheckpointId != value))
				{
					this.OnWorkflowCheckpointIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowCheckpointId = value;
					this.SendPropertyChanged("WorkflowCheckpointId");
					this.OnWorkflowCheckpointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckpointDefinitionId", DbType="Int NOT NULL")]
		public int CheckpointDefinitionId
		{
			get
			{
				return this._CheckpointDefinitionId;
			}
			set
			{
				if ((this._CheckpointDefinitionId != value))
				{
					if (this._CheckpointDefinitionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckpointDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._CheckpointDefinitionId = value;
					this.SendPropertyChanged("CheckpointDefinitionId");
					this.OnCheckpointDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckpointStatus", DbType="TinyInt NOT NULL")]
		public byte CheckpointStatus
		{
			get
			{
				return this._CheckpointStatus;
			}
			set
			{
				if ((this._CheckpointStatus != value))
				{
					this.OnCheckpointStatusChanging(value);
					this.SendPropertyChanging();
					this._CheckpointStatus = value;
					this.SendPropertyChanged("CheckpointStatus");
					this.OnCheckpointStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleVerificationId", DbType="Int")]
		public System.Nullable<int> ResponsibleVerificationId
		{
			get
			{
				return this._ResponsibleVerificationId;
			}
			set
			{
				if ((this._ResponsibleVerificationId != value))
				{
					if (this._WorkflowVerificationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsibleVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleVerificationId = value;
					this.SendPropertyChanged("ResponsibleVerificationId");
					this.OnResponsibleVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskWorkflowId", DbType="Int")]
		public System.Nullable<int> RiskWorkflowId
		{
			get
			{
				return this._RiskWorkflowId;
			}
			set
			{
				if ((this._RiskWorkflowId != value))
				{
					if (this._RiskWorkflowEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._RiskWorkflowId = value;
					this.SendPropertyChanged("RiskWorkflowId");
					this.OnRiskWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__WorkflowC__RiskW__208CD6FA", Storage="_RiskWorkflowEntity", ThisKey="RiskWorkflowId", OtherKey="RiskWorkflowId", IsForeignKey=true)]
		public RiskWorkflowEntity RiskWorkflowEntity
		{
			get
			{
				return this._RiskWorkflowEntity.Entity;
			}
			set
			{
				RiskWorkflowEntity previousValue = this._RiskWorkflowEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskWorkflowEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskWorkflowEntity.Entity = null;
						previousValue.WorkflowCheckpoints.Remove(this);
					}
					this._RiskWorkflowEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowCheckpoints.Add(this);
						this._RiskWorkflowId = value.RiskWorkflowId;
					}
					else
					{
						this._RiskWorkflowId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RiskWorkflowEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowCheckpoints_CheckpointDefinitions", Storage="_CheckpointDefinitionEntity", ThisKey="CheckpointDefinitionId", OtherKey="CheckpointDefinitionId", IsForeignKey=true)]
		public CheckpointDefinitionEntity CheckpointDefinitionEntity
		{
			get
			{
				return this._CheckpointDefinitionEntity.Entity;
			}
			set
			{
				CheckpointDefinitionEntity previousValue = this._CheckpointDefinitionEntity.Entity;
				if (((previousValue != value) 
							|| (this._CheckpointDefinitionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckpointDefinitionEntity.Entity = null;
						previousValue.WorkflowCheckpoints.Remove(this);
					}
					this._CheckpointDefinitionEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowCheckpoints.Add(this);
						this._CheckpointDefinitionId = value.CheckpointDefinitionId;
					}
					else
					{
						this._CheckpointDefinitionId = default(int);
					}
					this.SendPropertyChanged("CheckpointDefinitionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowCheckpoints_WorkflowVerifications", Storage="_WorkflowVerificationEntity", ThisKey="ResponsibleVerificationId", OtherKey="WorkflowVerificationId", IsForeignKey=true)]
		public WorkflowVerificationEntity WorkflowVerificationEntity
		{
			get
			{
				return this._WorkflowVerificationEntity.Entity;
			}
			set
			{
				WorkflowVerificationEntity previousValue = this._WorkflowVerificationEntity.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowVerificationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowVerificationEntity.Entity = null;
						previousValue.WorkflowCheckpoints.Remove(this);
					}
					this._WorkflowVerificationEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowCheckpoints.Add(this);
						this._ResponsibleVerificationId = value.WorkflowVerificationId;
					}
					else
					{
						this._ResponsibleVerificationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowVerificationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_WorkflowCheckpoints", Storage="_WorkflowVerifications", ThisKey="WorkflowCheckpointId", OtherKey="WorkflowCheckpointId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowVerificationEntity> WorkflowVerifications
		{
			get
			{
				return this._WorkflowVerifications;
			}
			set
			{
				this._WorkflowVerifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowCheckpointEntity = this;
		}
		
		private void detach_WorkflowVerifications(WorkflowVerificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowCheckpointEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="risk.WorkflowVerifications")]
	public partial class WorkflowVerificationEntity : DbEntity<WorkflowVerificationEntity>, INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkflowVerificationId;
		
		private int _VerificationDefinitionId;
		
		private int _SortOrder;
		
		private bool _Executed;
		
		private System.Nullable<int> _ConfigurationRecordId;
		
		private System.Nullable<int> _WorkflowCheckpointId;
		
		private System.Nullable<int> _RiskWorkflowId;
		
		private EntityRef<RiskWorkflowEntity> _RiskWorkflowEntity;
		
		private EntitySet<WorkflowCheckpointEntity> _WorkflowCheckpoints;
		
		private EntityRef<ConfigurationRecordEntity> _ConfigurationRecordEntity;
		
		private EntityRef<VerificationDefinitionEntity> _VerificationDefinitionEntity;
		
		private EntityRef<WorkflowCheckpointEntity> _WorkflowCheckpointEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowVerificationIdChanging(int value);
    partial void OnWorkflowVerificationIdChanged();
    partial void OnVerificationDefinitionIdChanging(int value);
    partial void OnVerificationDefinitionIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnExecutedChanging(bool value);
    partial void OnExecutedChanged();
    partial void OnConfigurationRecordIdChanging(System.Nullable<int> value);
    partial void OnConfigurationRecordIdChanged();
    partial void OnWorkflowCheckpointIdChanging(System.Nullable<int> value);
    partial void OnWorkflowCheckpointIdChanged();
    partial void OnRiskWorkflowIdChanging(System.Nullable<int> value);
    partial void OnRiskWorkflowIdChanged();
    #endregion
		
		public WorkflowVerificationEntity()
		{
			this._RiskWorkflowEntity = default(EntityRef<RiskWorkflowEntity>);
			this._WorkflowCheckpoints = new EntitySet<WorkflowCheckpointEntity>(new Action<WorkflowCheckpointEntity>(this.attach_WorkflowCheckpoints), new Action<WorkflowCheckpointEntity>(this.detach_WorkflowCheckpoints));
			this._ConfigurationRecordEntity = default(EntityRef<ConfigurationRecordEntity>);
			this._VerificationDefinitionEntity = default(EntityRef<VerificationDefinitionEntity>);
			this._WorkflowCheckpointEntity = default(EntityRef<WorkflowCheckpointEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowVerificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkflowVerificationId
		{
			get
			{
				return this._WorkflowVerificationId;
			}
			set
			{
				if ((this._WorkflowVerificationId != value))
				{
					this.OnWorkflowVerificationIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowVerificationId = value;
					this.SendPropertyChanged("WorkflowVerificationId");
					this.OnWorkflowVerificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationDefinitionId", DbType="Int NOT NULL")]
		public int VerificationDefinitionId
		{
			get
			{
				return this._VerificationDefinitionId;
			}
			set
			{
				if ((this._VerificationDefinitionId != value))
				{
					if (this._VerificationDefinitionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerificationDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationDefinitionId = value;
					this.SendPropertyChanged("VerificationDefinitionId");
					this.OnVerificationDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executed", DbType="Bit NOT NULL")]
		public bool Executed
		{
			get
			{
				return this._Executed;
			}
			set
			{
				if ((this._Executed != value))
				{
					this.OnExecutedChanging(value);
					this.SendPropertyChanging();
					this._Executed = value;
					this.SendPropertyChanged("Executed");
					this.OnExecutedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationRecordId", DbType="Int")]
		public System.Nullable<int> ConfigurationRecordId
		{
			get
			{
				return this._ConfigurationRecordId;
			}
			set
			{
				if ((this._ConfigurationRecordId != value))
				{
					if (this._ConfigurationRecordEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfigurationRecordIdChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationRecordId = value;
					this.SendPropertyChanged("ConfigurationRecordId");
					this.OnConfigurationRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowCheckpointId", DbType="Int")]
		public System.Nullable<int> WorkflowCheckpointId
		{
			get
			{
				return this._WorkflowCheckpointId;
			}
			set
			{
				if ((this._WorkflowCheckpointId != value))
				{
					if (this._WorkflowCheckpointEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowCheckpointIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowCheckpointId = value;
					this.SendPropertyChanged("WorkflowCheckpointId");
					this.OnWorkflowCheckpointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskWorkflowId", DbType="Int")]
		public System.Nullable<int> RiskWorkflowId
		{
			get
			{
				return this._RiskWorkflowId;
			}
			set
			{
				if ((this._RiskWorkflowId != value))
				{
					if (this._RiskWorkflowEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._RiskWorkflowId = value;
					this.SendPropertyChanged("RiskWorkflowId");
					this.OnRiskWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__WorkflowV__RiskW__2180FB33", Storage="_RiskWorkflowEntity", ThisKey="RiskWorkflowId", OtherKey="RiskWorkflowId", IsForeignKey=true)]
		public RiskWorkflowEntity RiskWorkflowEntity
		{
			get
			{
				return this._RiskWorkflowEntity.Entity;
			}
			set
			{
				RiskWorkflowEntity previousValue = this._RiskWorkflowEntity.Entity;
				if (((previousValue != value) 
							|| (this._RiskWorkflowEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskWorkflowEntity.Entity = null;
						previousValue.WorkflowVerifications.Remove(this);
					}
					this._RiskWorkflowEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowVerifications.Add(this);
						this._RiskWorkflowId = value.RiskWorkflowId;
					}
					else
					{
						this._RiskWorkflowId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RiskWorkflowEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowCheckpoints_WorkflowVerifications", Storage="_WorkflowCheckpoints", ThisKey="WorkflowVerificationId", OtherKey="ResponsibleVerificationId", DeleteRule="NO ACTION")]
		public EntitySet<WorkflowCheckpointEntity> WorkflowCheckpoints
		{
			get
			{
				return this._WorkflowCheckpoints;
			}
			set
			{
				this._WorkflowCheckpoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_ConfigurationRecords", Storage="_ConfigurationRecordEntity", ThisKey="ConfigurationRecordId", OtherKey="ConfigurationRecordId", IsForeignKey=true)]
		public ConfigurationRecordEntity ConfigurationRecordEntity
		{
			get
			{
				return this._ConfigurationRecordEntity.Entity;
			}
			set
			{
				ConfigurationRecordEntity previousValue = this._ConfigurationRecordEntity.Entity;
				if (((previousValue != value) 
							|| (this._ConfigurationRecordEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigurationRecordEntity.Entity = null;
						previousValue.WorkflowVerifications.Remove(this);
					}
					this._ConfigurationRecordEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowVerifications.Add(this);
						this._ConfigurationRecordId = value.ConfigurationRecordId;
					}
					else
					{
						this._ConfigurationRecordId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConfigurationRecordEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_VerificationDefinitions", Storage="_VerificationDefinitionEntity", ThisKey="VerificationDefinitionId", OtherKey="VerificationDefinitionId", IsForeignKey=true)]
		public VerificationDefinitionEntity VerificationDefinitionEntity
		{
			get
			{
				return this._VerificationDefinitionEntity.Entity;
			}
			set
			{
				VerificationDefinitionEntity previousValue = this._VerificationDefinitionEntity.Entity;
				if (((previousValue != value) 
							|| (this._VerificationDefinitionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VerificationDefinitionEntity.Entity = null;
						previousValue.WorkflowVerifications.Remove(this);
					}
					this._VerificationDefinitionEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowVerifications.Add(this);
						this._VerificationDefinitionId = value.VerificationDefinitionId;
					}
					else
					{
						this._VerificationDefinitionId = default(int);
					}
					this.SendPropertyChanged("VerificationDefinitionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkflowVerifications_WorkflowCheckpoints", Storage="_WorkflowCheckpointEntity", ThisKey="WorkflowCheckpointId", OtherKey="WorkflowCheckpointId", IsForeignKey=true)]
		public WorkflowCheckpointEntity WorkflowCheckpointEntity
		{
			get
			{
				return this._WorkflowCheckpointEntity.Entity;
			}
			set
			{
				WorkflowCheckpointEntity previousValue = this._WorkflowCheckpointEntity.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowCheckpointEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowCheckpointEntity.Entity = null;
						previousValue.WorkflowVerifications.Remove(this);
					}
					this._WorkflowCheckpointEntity.Entity = value;
					if ((value != null))
					{
						value.WorkflowVerifications.Add(this);
						this._WorkflowCheckpointId = value.WorkflowCheckpointId;
					}
					else
					{
						this._WorkflowCheckpointId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkflowCheckpointEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowVerificationEntity = this;
		}
		
		private void detach_WorkflowCheckpoints(WorkflowCheckpointEntity entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowVerificationEntity = null;
		}
	}
}
#pragma warning restore 1591
